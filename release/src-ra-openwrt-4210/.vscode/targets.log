make all --print-data-base --no-builtin-variables --no-builtin-rules --question
/bin/sh: 1: cd: can't cd to /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../sdk

# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sun Jun  5 02:46:20 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'target.mak', line 645)
 
RT-AC59U_V2 := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCN550X=y QCA9888=y QCA8337N=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MODEM=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" APP="network" AUTODICT=y SHP=y NVRAM_SIZE=0x1E000 ODMPID=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y FINDASUS=y STAINFO=y REBOOT_SCHEDULE=y YANDEXDNS=y NEWSSID_REV4=y LAN50=all GETREALIP=y MULTICASTIPTV=y QUAGGA=y NTFS="open" TFAT=n HFS="open" DISK_MONITOR=y BLINK_LED=y BTN_WPS_ALLLED=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y JFFS2=y PSISTLOG=y QCA_TW_AUTO_BAND4=y TEMPROOTFS=y WPSMULTIBAND=y UTF8_SSID=y NVRAM_ENCRYPT=y FORCE_AUTO_UPGRADE=y BUILD_NAME="RT-AC59U_V2" BASE_MODEL="RT-AC59U" QSDK_VER=.ILQ611 EN4B=y NOTIFICATION_CENTER=y HAPDEVENT=y AMAS=y AVBLCHAN=y REPEATER=y SW_HW_AUTH=y NATNL_AIHOME=y DWB=y ETHOBD=y
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
PAPERSIZE = a4
# environment
DESKTOP_SESSION = ubuntu
# makefile (from 'target.mak', line 703)
RT-AC58U := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y BBEXTRAS=y USBEXTRAS=y SAMBA3=y MEDIASRV=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y YANDEXDNS=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" EBTABLES=y AUTODICT=y MODEM=y LANWAN_LED=y BUILD_NAME="RT-AC58U" RTAC58U=y SHP=y NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=SPI MDNS=y FINDASUS=y XHCI=y ATEUSB3_FORCE=y EXT4FS=y TEMPROOTFS=y NTFS="open+tuxera" TFAT=y HFS="open+tuxera" WEBDAV=y SMARTSYNCBASE=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=y DISABLE_PROXYSTA_UI=y MULTICASTIPTV=y QUAGGA=y DISK_MONITOR=y UBI=y UBIFS=y PSISTLOG=y WPSMULTIBAND=y BLINK_LED=y BTN_WPS_ALLLED=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y STAINFO=y NEWSSID_REV2=y LAN50=y NEW_APP_ARM=y
# default
.SHELLFLAGS := -c
# makefile (from 'dsl.mak', line 18)
dsl_genbintrx_epilog = 	@( if [ "$(BUILD_NAME)" = "DSL-N55U" -o "$(BUILD_NAME)" = "DSL-N55U-B" ] ; then echo "start to generate DSL , BIN and trx"; cp -R asustools/autobuild-tool/make_img make_img; cp -R asustools/autobuild-tool/tc_asus_bin tc_asus_bin; echo "#!/bin/sh" > cptrx.sh; echo "cp image/$(BUILD_NAME)_*.trx reltmp" >> cptrx.sh; echo "cp image/$(BUILD_NAME)_*.trx make_img" >> cptrx.sh; chmod 777 ./cptrx.sh; ./cptrx.sh; rm -f cptrx.sh; cd make_img; echo `find . -maxdepth 1 -name "DSL*.trx"` > tmp.txt; chmod 777 ./LnxBinMrg; ./LnxBinMrg `cut -d / -f2 tmp.txt`; echo "#!/bin/sh" > cptrx2.sh; echo "cp $(BUILD_NAME)_*.trx ../image" >> cptrx2.sh; echo "cp $(BUILD_NAME)_*.bin ../image" >> cptrx2.sh; chmod 777 ./cptrx2.sh; ./cptrx2.sh; cd ..; rm -rf make_img; rm -rf tc_asus_bin; fi; )
# makefile (from 'version.conf', line 1)
KERNEL_VER = 4.0
# makefile (from 'target.mak', line 361)
RT-N800HP := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y SHP=y ODMPID=y NEW_RGDM=y RA_SKU_IN_DRV=y MDNS=y FINDASUS=y WAN_AT_P4=y LED_ALL=y SINGLE_2G=y VPNC=y NEWSSID_REV2=y ATCOVER=y GETREALIP=y REBOOT_SCHEDULE=y SSH=y BUILD_NAME="RT-N800HP" RTN800HP=y BLINK_LED=y LANWAN_LED=y NATNL_AIHOME=y DUALWAN=y REPEATER=y PROXYSTA=y ATED122=y MTK_8021X3000=y QAM256_2G=y TEMPROOTFS=y BOOT_FLASH_TYPE=SPI DRAM=64M FIRST_IF=MT7615E SECOND_IF=NONE UTF8_SSID=y EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_64M=y UBOOT_CMDLINE=y MODEL_RTN800HP=y FIRST_IF_EPAELNA=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y"
# makefile (from 'target.mak', line 255)
RT-N300 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y SHP=y LANWAN_LED=y BUILD_NAME="RT-N300" RTN300=y SFP=y ODMPID=y NEW_RGDM=y RA_SKU=y REPEATER=y NEW_USER_LOW_RSSI=y BTN_WPS_RST=y YANDEXDNS=y REBOOT_SCHEDULE=y BLINK_LED=y TEMPROOTFS=y BOOT_FLASH_TYPE=SPI DRAM=32M SECOND_IF=NONE SINGLE_2G=y EDCCA=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_32M=y UBOOT_CMDLINE=y PCI=n INTERNAL_PA_INTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=n" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 660)
PL-AC66U := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCA956X=y AR9888=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y LANWAN_LED=y BUILD_NAME="PL-AC66U" PLAC66U=y SHP=y NVRAM_64K=y ODMPID=y DEBUGFS=y SWMODE_SWITCH=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y DISK_MONITOR=y SSH=y WEBDAV=y SMARTSYNCBASE=y REBOOT_SCHEDULE=y NTFS="open" BLINK_LED=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y MDNS=y FINDASUS=y TEMPROOTFS=y WPSMULTIBAND=y
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# makefile (from 'target.mak', line 152)
RT-N56U := IPV6SUPP=y MIPS32=r2 RALINK=y RT3883=y NTFS="paragon" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y LANWAN_LED=y BUILD_NAME="RT-N56U" ODMPID=y SFP8M=y AP_CARRIER_DETECTION=y LOCALE2012=y NO_MKTOOLS=y TEMPROOTFS=y LESSMODEM=y RTN56U=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 43)
RT-AC88U_BASE := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y BCMWL6=y BCMWL6A=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y SSD=n STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y CFEZ=y ERPTEST=n WIFILOGO=n FORCE_AUTO_UPGRADE=n FAKEID=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y ASPMD=n BCMEVENTD=n WLCLMLOAD=n BCM_MUMIMO=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y ALEXA=y IFTTT=y LETSENCRYPT=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y HD_SPINDOWN=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV CONNTRACK=n AMAS=y AMASDB=y AVBLCHAN=y WATCH_REINIT=n MFGFW=n CTFNAT=y CONNDIAG=y NFCM=n UTF8_SSID=y NVRAM_ENCRYPT=y UUPLUGIN=y SW_CTRL_ALLLED=y OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2
# makefile (from 'Makefile', line 396)
LANTIQ_LINUX_DIR = linux/linux-3.10.104
# makefile (from 'target.mak', line 70)
ET12_CFG := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="ET12" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y XHCI=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y LINUX_MTD="64" DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y BCM_CEVENTD=y UTF8_SSID=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y AMASDB=n CRASHLOG=y BW160M=y BRCM_HOSTAPD=y IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=y CAPTCHA=y OUTFOX=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=y BCM_CLED=y NEWSSID_REV4=y NEWSSID_REV5=y SW_CTRL_ALLLED=y BT_CONN=y SINGLE_LED=y WIFI6E=y ACL96=y OWE_TRANS=y DHD_6715B0=y MSSID_PRELINK=y EXTEND_LIMIT=y GOOGLE_ASST=y VPN_FUSION=y AMAS_ADTBW=y BONDING=y LACP=y BONDING_WAN=y
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 2
# makefile (from 'target.mak', line 143)
RT-AC56U := IPV6SUPP=y HTTPS=y ARM=y TFAT=y NTFS="tuxera" HFS="tuxera" AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-AC56U" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y BCM4708=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y BCM4352_5G=y LANWAN_LED=y OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y LED_ALL=y XHCI=y REPEATER=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y XHCIMODE=y TIMEMACHINE=y BWDPI=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y EMAIL=y SYSSTATE=y ROG=y ROMCCODE=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=n CLOUDCHECK=y DUMP_OOPS_MSG=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y DPSTA=y SW_HW_AUTH=y NATNL_AIHOME=y EXT4FS=y
# makefile (from 'target.mak', line 654)
PL-AC56 := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCA956X=y AR9888=y PLC_UTILS=y QCA7500=y DEF_AP=y EBTABLES=y AUTODICT=y LANWAN_LED=y BUILD_NAME="PL-AC56" PLAC56=y SHP=y NVRAM_64K=y ODMPID=y REBOOT_SCHEDULE=y BLINK_LED=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y MDNS=y FINDASUS=y DHCP_OVERRIDE=y TEMPROOTFS=y WPSMULTIBAND=y WIFICLONE=y
# makefile (from 'target.mak', line 7)
RT-AC53U := IPV6SUPP=y HTTPS=y MIPS32=r2 NTFS="open" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-AC53U" DNSMQ=y LFP=y NVRAM_64K=y BCMWL6=y BCMNAND=y PROXYSTA=y ODMPID=y BOOTLZMA=y OPTIMIZE_XBOX=y REPEATER=y USBAP="y" DISK_MONITOR=y DUALWAN=y LANWAN_LED=y AUTODICT=y BRCM_NAND_JFFS2=y JFFS2LOG=y VPNC=y OPENVPN=y DEBUGFS=y STAINFO=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 19)
RT-N10U := IPV6SUPP=y MIPS32=r2 AUTODICT=y NTFS="open" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PRINTER=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y DNSMQ=y SFP=y USB="USB" APP="none" BUILD_NAME="RT-N10U" USER_LOW_RSSI=y LESSMODEM=y SMALL_FW_UPDATE=y DEBUGFS=y DUALWAN=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210
# makefile
SHELL = /bin/sh
# makefile (from 'target.mak', line 79)
HND-947622_BASE_NOUSB := HND_ROUTER=y PROFILE="947622GW" WL_SCHED_V3=y OOKLA=y
# makefile (from 'target.mak', line 94)
RT-AX55 := HND_ROUTER=y PROFILE="947622GW" WL_SCHED_V3=y OOKLA=y BUILD_NAME="RT-AX55" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=n EBTABLES=y MEDIASRV=n MODEM=n PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n USB="USB" APP="none" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=n BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=n VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=n NTFS="" HFS="" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=n ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=n BRCM_HOSTAPD=y TCPLUGIN=y UUPLUGIN=y IPERF3=y BCN_RPT=y BTM_11V=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=y NO_SAMBA=y NO_FTP=y NO_USBSTORAGE=y AMAS_WGN=y AMAZON_WSS=n PIPEFW=y AHS=y ASD=y INTERNETCTRL=y SW_CTRL_ALLLED=y URLFW=y INSTANT_GUARD=y KERN_SIZE_OPT=y ASUSCTRL=y ACL96=y IPV6S46=y GOOGLE_ASST=y
# makefile (from 'version.conf', line 3)
SERIALNO = 386
# makefile (from 'target.mak', line 447)
RT-ACRH18 := IPV6SUPP=y HTTPS=y RALINK=y MT7629=y BBEXTRAS=y EBTABLES=y USBEXTRAS=y SAMBA3="3.6.x" MEDIASRV=y PARENTAL2=y USB="USB" APP="none" AUTODICT=y SHP=y RTACRH18=y MUSL_LIBC=y XHCI=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y YANDEXDNS=y UTF8_SSID=y GETREALIP=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y ASUSCTRL=y BOOT_FLASH_TYPE=SPI MTK_NAND=y DUAL_TRX=y NVRAM_ENCRYPT=1 USB_SWAP=y ATEUSB3_FORCE=y OPENVPN=y ACCEL_PPTPD=y VPNC=y NTFS="open" EXT4FS=y REBOOT_SCHEDULE=y DRAM=128M MTK_8021XD3000=y EDCCA_NEW=y BTN_WPS_ALLLED=y LANWAN_LED=y BLINK_LED=y FIRST_IF=MT7629 SECOND_IF=MT7629 RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y REPEATER=y PROXYSTA=y SW_HW_AUTH=y ATF=y NOIPTV=y SAVE_WL_NVRAM_BOTH=y JFFS2=y PSISTLOG=y TEMPROOTFS=y DTB="mt7629-lynx-rfb3.dtb" EXTRA_KERNEL_CONFIGS="MT7629_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_RTACRH18=y DUAL_TRX=y" BUILD_NAME="RT-ACRH18"
# environment
VSCODE_NLS_CONFIG = {"locale":"zh-cn","availableLanguages":{"*":"zh-cn"},"_languagePackId":"42e84e0914b17800d483f69e299e1b00.zh-cn","_translationsConfigFile":"/home/akito/.config/Code/clp/42e84e0914b17800d483f69e299e1b00.zh-cn/tcf.json","_cacheRoot":"/home/akito/.config/Code/clp/42e84e0914b17800d483f69e299e1b00.zh-cn","_resolvedLanguagePackCoreLocation":"/home/akito/.config/Code/clp/42e84e0914b17800d483f69e299e1b00.zh-cn/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5","_corruptedFile":"/home/akito/.config/Code/clp/42e84e0914b17800d483f69e299e1b00.zh-cn/corrupted.info","_languagePackSupport":true}
# makefile (from 'Makefile', line 185)
SWPJNAME := 
# environment
_ = /usr/share/code/code
# makefile (from 'target.mak', line 412)
RT-ACRH26 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y  USB="USB"  AUTODICT=y LANWAN_LED=y SHP=y RTACRH26=y ODMPID=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y BWDPI=y REBOOT_SCHEDULE=y SSH=y NO_SELECT_CHANNEL=y HD_SPINDOWN=y EXT4FS=y DISK_MONITOR=y MDNS=y NTFS="open" EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=y UTF8_SSID=y FORCE_AUTO_UPGRADE=y ATED122=y MTK_8021X3000=y XHCI=y ATEUSB3_FORCE=y EDCCA_NEW=y BLINK_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=NAND MTK_NAND=y NVRAM_ENCRYPT=2744 DRAM=256M FIRST_IF=MT7615E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y NEW_USER_LOW_RSSI=y NEWSSID_REV2=y GETREALIP=y ATCOVER=y LAN50=all SW_HW_AUTH=y NATNL_AIHOME=y WTF_REDEEM=y BUILD_NAME="RT-ACRH26" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_256M=y UBOOT_CMDLINE=y MODEL_RTACRH26=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAILNA=y SECOND_IF_EPAELNA=y"
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# makefile (from 'target.mak', line 815)
RT-AD7200 := IPV6SUPP=y HTTPS=y QCA=y IPQ806X=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="RT-AD7200" RTAD7200=y SHP=y NVRAM_SIZE=0x20000 NVRAM_ENCRYPT=1 ODMPID=y UBI=y DUAL_TRX=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y IPSEC=STRONGSWAN STAINFO=y DUALWAN=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y MTWANCFG=y WEBDAV=y SMARTSYNCBASE=y NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y BOOT_FLASH_TYPE=NAND WIFI_CHIP=CASCADE WIGIG=y SWITCH_CHIP=RTL8370MB_PHY_QCA8033_X2 WANPORT2=y PWRSAVE=y XHCI=y ATEUSB3_FORCE=n BLINK_LED=y WANRED_LED=y PWRRED_LED=y FO_LED=y WANLEDX2=y EJUSB_BTN=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=n NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y NEWSSID_REV2=y UTF8_SSID=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS=""
# makefile (from 'Makefile', line 1341)
define RouterOptions
	@( if [ "$(CONFIG_LINUX26)" = "y" ] ; then if [ "$(SAMBA3)" = "+3.6.x" ]; then sed -i "/RTCONFIG_SAMBA36X/d" $(1); echo "RTCONFIG_SAMBA36X=y" >>$(1); sed -i "/RTCONFIG_SAMBA3\>/d" $(1); echo "RTCONFIG_SAMBA3=y" >>$(1); elif [ "$(SAMBA3)" = "3.6.x" ]; then sed -i "/RTCONFIG_SAMBA36X/d" $(1); echo "RTCONFIG_SAMBA36X=y" >>$(1); sed -i "/RTCONFIG_SAMBA3\>/d" $(1); echo "# RTCONFIG_SAMBA3 is not set" >>$(1); elif [ "$(SAMBA4)" = "y" ]; then sed -i "/RTCONFIG_SAMBA36X/d" $(1); echo "# RTCONFIG_SAMBA36X is not set" >>$(1); sed -i "/RTCONFIG_SAMBA3\>/d" $(1); echo "# RTCONFIG_SAMBA3 is not set" >>$(1); sed -i "/RTCONFIG_SAMBA4\>/d" $(1); echo "RTCONFIG_SAMBA4=y" >>$(1); else sed -i "/RTCONFIG_SAMBA36X/d" $(1); echo "# RTCONFIG_SAMBA36X is not set" >>$(1); sed -i "/RTCONFIG_SAMBA3\>/d" $(1); echo "RTCONFIG_SAMBA3=y" >>$(1); fi; fi; if [ "$(CONFIG_BCMWL5)" = "y" ]; then sed -i "/CONFIG_LIBBCM/d" $(1); echo "CONFIG_LIBBCM=y" >>$(1); sed -i "/CONFIG_LIBUPNP/d" $(1); echo "CONFIG_LIBUPNP=y" >>$(1); fi; sed -i "/RTCONFIG_EMF/d" $(1); if [ "$(CONFIG_LINUX26)" = "y" ]; then if [ "$(SLIM)" = "y" ]; then echo "# RTCONFIG_EMF is not set" >>$(1); else echo "RTCONFIG_EMF=y" >>$(1); fi; else echo "# RTCONFIG_EMF is not set" >>$(1); fi; sed -i "/RTCONFIG_JFFSV1/d" $(1); if [ "$(CONFIG_LINUX26)" = "y" ]; then if [ "$(JFFSv1)" = "y" ]; then echo "RTCONFIG_JFFSV1=y" >>$(1); else echo "# RTCONFIG_JFFSV1 is not set" >>$(1); fi; else echo "RTCONFIG_JFFSV1=y" >>$(1); fi; if [ "$(YAFFS)" = "y" ]; then sed -i "/RTCONFIG_YAFFS/d" $(1); echo "RTCONFIG_YAFFS=y" >>$(1); sed -i "/RTCONFIG_JFFS2/d" $(1); echo "# RTCONFIG_JFFS2 is not set" >>$(1); sed -i "/RTCONFIG_JFFSV1/d" $(1); echo "# RTCONFIG_JFFSV1 is not set" >>$(1); fi; if [ "$(FANCTRL)" = "y" ]; then sed -i "/RTCONFIG_FANCTRL/d" $(1); echo "RTCONFIG_FANCTRL=y" >>$(1); fi; if [ "$(BCM5301X)" = "y" ]; then sed -i "/RTCONFIG_5301X/d" $(1); echo "RTCONFIG_5301X=y" >>$(1); fi; if [ "$(BCMWL6)" = "y" ]; then sed -i "/RTCONFIG_BCMWL6/d" $(1); echo "RTCONFIG_BCMWL6=y" >>$(1); sed -i "/RTCONFIG_BCMDCS/d" $(1); echo "RTCONFIG_BCMDCS=y" >>$(1); fi; if [ "$(BCMWL6A)" = "y" ]; then sed -i "/RTCONFIG_BCMWL6A/d" $(1); echo "RTCONFIG_BCMWL6A=y" >>$(1); fi; if [ "$(BCM4708)" = "y" ]; then sed -i "/RTCONFIG_BCM4708/d" $(1); echo "RTCONFIG_BCM4708=y" >>$(1); fi; if [ "$(ARM)" = "y" ]; then sed -i "/RTCONFIG_BCMARM/d" $(1); echo "RTCONFIG_BCMARM=y" >>$(1); fi; if [ "$(ALPINE)" = "y" ]; then sed -i "/RTCONFIG_ALPINE/d" $(1); echo "RTCONFIG_ALPINE=y" >>$(1); fi; if [ "$(LANTIQ)" = "y" ]; then sed -i "/RTCONFIG_LANTIQ/d" $(1); echo "RTCONFIG_LANTIQ=y" >>$(1); fi; if [ "$(QSR10G)" = "y" ]; then sed -i "/RTCONFIG_QSR10G/d" $(1); echo "RTCONFIG_QSR10G=y" >>$(1); fi; if [ "$(NVRAM_FILE)" = "y" ]; then sed -i "/RTCONFIG_NVRAM_FILE/d" $(1); echo "RTCONFIG_NVRAM_FILE=y" >>$(1); fi; if [ "$(BCMSMP)" = "y" ]; then sed -i "/RTCONFIG_BCMSMP/d" $(1); echo "RTCONFIG_BCMSMP=y" >>$(1); fi; if [ "$(BCMFA)" = "y" ]; then sed -i "/RTCONFIG_BCMFA/d" $(1); echo "RTCONFIG_BCMFA=y" >>$(1); fi; if [ "$(RGMII_BCM_FA)" = "y" ]; then sed -i "/RTCONFIG_RGMII_BCM_FA/d" $(1); echo "RTCONFIG_RGMII_BCM_FA=y" >>$(1); fi; if [ "$(COMA)" = "y" ]; then sed -i "/RTCONFIG_COMA/d" $(1); echo "RTCONFIG_COMA=y" >>$(1); fi; if [ "$(WIRELESSWAN)" = "y" ]; then sed -i "/RTCONFIG_WIRELESSWAN/d" $(1); echo "RTCONFIG_WIRELESSWAN=y" >>$(1); fi; if [ "$(CONNTRACK)" = "y" ]; then sed -i "/RTCONFIG_CONNTRACK/d" $(1); echo "RTCONFIG_CONNTRACK=y" >>$(1); fi; if [ "$(PARENTAL2)" = "y" -o "$(PARENTAL)" = "y" ]; then sed -i "/RTCONFIG_PARENTALCTRL/d" $(1); echo "RTCONFIG_PARENTALCTRL=y" >>$(1); if [ "$(CONFIG_BCMWL5)" = "y" ] && [ "$(ARM)" = "y" ]; then sed -i "/RTCONFIG_CONNTRACK/d" $(1); echo "RTCONFIG_CONNTRACK=y" >>$(1); fi; fi; if [ "$(INTERNETCTRL)" = "y" ]; then sed -i "/RTCONFIG_INTERNETCTRL/d" $(1); echo "RTCONFIG_INTERNETCTRL=y" >>$(1); fi; if [ "$(OPENSSL)" = "11" -o "$(OPENSSL11)" = "y" ]; then sed -i "/RTCONFIG_OPENSSL/d" $(1); echo "# RTCONFIG_OPENSSL10 is not set" >>$(1); echo "RTCONFIG_OPENSSL11=y" >>$(1); elif [ "$(OPENSSL)" = "10" -o "$(OPENSSL10)" = "y" ]; then sed -i "/RTCONFIG_OPENSSL/d" $(1); echo "RTCONFIG_OPENSSL10=y" >>$(1); echo "# RTCONFIG_OPENSSL11 is not set" >>$(1); fi; if [ "$(YANDEXDNS)" = "y" ]; then sed -i "/RTCONFIG_YANDEXDNS/d" $(1); echo "RTCONFIG_YANDEXDNS=y" >>$(1); sed -i "/RTCONFIG_DNSFILTER/d" $(1); echo "# RTCONFIG_DNSFILTER is not set" >>$(1); fi; if [ "$(DNSPRIVACY)" = "y" ]; then sed -i "/RTCONFIG_DNSPRIVACY/d" $(1); echo "RTCONFIG_DNSPRIVACY=y" >>$(1); fi; if [ "$(DNSFILTER)" = "y" ]; then sed -i "/RTCONFIG_DNSFILTER/d" $(1); echo "RTCONFIG_DNSFILTER=y" >>$(1); sed -i "/RTCONFIG_YANDEXDNS/d" $(1); echo "# RTCONFIG_YANDEXDNS is not set" >>$(1); fi; if [ "$(PPTPD)" = "y" ]; then sed -i "/RTCONFIG_PPTPD/d" $(1); echo "RTCONFIG_PPTPD=y" >>$(1); fi; if [ "$(REPEATER)" = "y" ]; then sed -i "/RTCONFIG_WIRELESSREPEATER/d" $(1); echo "RTCONFIG_WIRELESSREPEATER=y" >>$(1); if [ "$(DISABLE_REPEATER_UI)" = "y" ] ; then sed -i "/RTCONFIG_DISABLE_REPEATER_UI/d" $(1); echo "RTCONFIG_DISABLE_REPEATER_UI=y" >>$(1); fi; fi; if [ "$(PURE_REPEATER)" = "y" ]; then sed -i "/RTCONFIG_REPEATER\>/d" $(1); echo "RTCONFIG_REPEATER=y" >>$(1); if [ "$(DISABLE_REPEATER_UI)" = "y" ] ; then sed -i "/RTCONFIG_DISABLE_REPEATER_UI/d" $(1); echo "RTCONFIG_DISABLE_REPEATER_UI=y" >>$(1); fi; fi; if [ "$(PROXYSTA)" = "y" ]; then sed -i "/RTCONFIG_PROXYSTA/d" $(1); echo "RTCONFIG_PROXYSTA=y" >>$(1); fi; if [ "$(DISABLE_PROXYSTA_UI)" = "y" ] ; then sed -i "/RTCONFIG_DISABLE_PROXYSTA_UI/d" $(1); echo "RTCONFIG_DISABLE_PROXYSTA_UI=y" >>$(1); fi; if [ "$(PSR_GUEST)" = "y" ]; then sed -i "/RTCONFIG_PSR_GUEST/d" $(1); echo "RTCONFIG_PSR_GUEST=y" >>$(1); fi; if [ "$(CONCURRENTREPEATER)" = "y" ]; then sed -i "/RTCONFIG_CONCURRENTREPEATER/d" $(1); echo "RTCONFIG_CONCURRENTREPEATER=y" >>$(1); fi; if [ "$(REPEATER_STAALLBAND)" = "y" ]; then sed -i "/RTCONFIG_REPEATER_STAALLBAND/d" $(1); echo "RTCONFIG_REPEATER_STAALLBAND=y" >>$(1); fi; if [ "$(IXIAEP)" = "y" ]; then sed -i "/RTCONFIG_IXIAEP/d" $(1); echo "RTCONFIG_IXIAEP=y" >>$(1); fi; if [ "$(IPERF)" = "y" ]; then sed -i "/RTCONFIG_IPERF/d" $(1); echo "RTCONFIG_IPERF=y" >>$(1); fi; if [ "$(RGBLED)" = "y" ] || [ "$(AURASYNC)" = "y" ] ; then sed -i "/RTCONFIG_RGBLED/d" $(1); echo "RTCONFIG_RGBLED=y" >>$(1); fi; if [ "$(BCM_CLED)" = "y" ] ; then sed -i "/RTCONFIG_BCM_CLED/d" $(1); echo "RTCONFIG_BCM_CLED=y" >>$(1); fi; if [ "$(SINGLE_LED)" = "y" ] ; then sed -i "/RTCONFIG_SINGLE_LED/d" $(1); echo "RTCONFIG_SINGLE_LED=y" >>$(1); fi; if [ "$(PIPEFW)" = "y" ] ; then sed -i "/RTCONFIG_PIPEFW/d" $(1); echo "RTCONFIG_PIPEFW=y" >>$(1); fi; if [ "$(URLFW)" = "y" ] ; then sed -i "/RTCONFIG_URLFW/d" $(1); echo "RTCONFIG_URLFW=y" >>$(1); fi; if [ "$(AURASYNC)" = "y" ]; then sed -i "/RTCONFIG_AURASYNC/d" $(1); echo "RTCONFIG_AURASYNC=y" >>$(1); fi; if [ "$(I2CTOOLS)" = "y" ]; then sed -i "/RTCONFIG_I2CTOOLS/d" $(1); echo "RTCONFIG_I2CTOOLS=y" >>$(1); fi; if [ "$(TCPDUMP)" = "y" ]; then sed -i "/RTCONFIG_TCPDUMP/d" $(1); echo "RTCONFIG_TCPDUMP=y" >>$(1); fi; if [ "$(DUMP4000)" = "y" ]; then sed -i "/RTCONFIG_DUMP4000/d" $(1); echo "RTCONFIG_DUMP4000=y" >>$(1); fi; if [ "$(TRACEROUTE)" = "y" ]; then sed -i "/RTCONFIG_TRACEROUTE/d" $(1); echo "RTCONFIG_TRACEROUTE=y" >>$(1); fi; if [ "$(NETOOL)" = "y" ]; then sed -i "/RTCONFIG_NETOOL/d" $(1); echo "RTCONFIG_NETOOL=y" >>$(1); fi; if [ "$(DISKTEST)" = "y" ]; then sed -i "/RTCONFIG_DISKTEST/d" $(1); echo "RTCONFIG_DISKTEST=y" >>$(1); fi; if [ "$(LOCALE2012)" = "y" ]; then sed -i "/RTCONFIG_LOCALE2012/d" $(1); echo "RTCONFIG_LOCALE2012=y" >>$(1); fi; if [ "$(ODMPID)" = "y" ]; then sed -i "/RTCONFIG_ODMPID/d" $(1); echo "RTCONFIG_ODMPID=y" >>$(1); fi; if [ "$(MDNS)" = "y" ]; then sed -i "/RTCONFIG_MDNS/d" $(1); echo "RTCONFIG_MDNS=y" >>$(1); fi; if [ "$(REDIRECT_DNAME)" = "y" ]; then sed -i "/RTCONFIG_REDIRECT_DNAME/d" $(1); echo "RTCONFIG_REDIRECT_DNAME=y" >>$(1); fi; if [ "$(MTK_TW_AUTO_BAND4)" = "y" ]; then sed -i "/RTCONFIG_MTK_TW_AUTO_BAND4/d" $(1); echo "RTCONFIG_MTK_TW_AUTO_BAND4=y" >>$(1); fi; if [ "$(QCA_TW_AUTO_BAND4)" = "y" ]; then sed -i "/RTCONFIG_QCA_TW_AUTO_BAND4/d" $(1); echo "RTCONFIG_QCA_TW_AUTO_BAND4=y" >>$(1); fi; if [ "$(NEWSSID_REV2)" = "y" ]; then sed -i "/RTCONFIG_NEWSSID_REV2/d" $(1); echo "RTCONFIG_NEWSSID_REV2=y" >>$(1); fi; if [ "$(NEWSSID_REV4)" = "y" ]; then sed -i "/RTCONFIG_NEWSSID_REV4/d" $(1); echo "RTCONFIG_NEWSSID_REV4=y" >>$(1); fi; if [ "$(NEWSSID_REV5)" = "y" ]; then sed -i "/RTCONFIG_NEWSSID_REV5/d" $(1); echo "RTCONFIG_NEWSSID_REV5=y" >>$(1); fi; if [ "$(NEWSSID_REV6)" = "y" ]; then sed -i "/RTCONFIG_NEWSSID_REV6/d" $(1); echo "RTCONFIG_NEWSSID_REV6=y" >>$(1); fi; if [ "$(RP_NEWSSID_REV3)" = "y" ]; then sed -i "/RTCONFIG_RP_NEWSSID_REV3/d" $(1); echo "RTCONFIG_RP_NEWSSID_REV3=y" >>$(1); fi; if [ "$(NEW_APP_ARM)" = "y" ]; then sed -i "/RTCONFIG_NEW_APP_ARM/d" $(1); echo "RTCONFIG_NEW_APP_ARM=y" >>$(1); fi; if [ "$(FINDASUS)" = "y" ]; then sed -i "/RTCONFIG_FINDASUS/d" $(1); echo "RTCONFIG_FINDASUS=y" >>$(1); sed -i "/RTCONFIG_MDNS/d" $(1); echo "RTCONFIG_MDNS=y" >>$(1); fi; if [ "$(TIMEMACHINE)" = "y" ]; then sed -i "/RTCONFIG_TIMEMACHINE/d" $(1); echo "RTCONFIG_TIMEMACHINE=y" >>$(1); sed -i "/RTCONFIG_MDNS/d" $(1); echo "RTCONFIG_MDNS=y" >>$(1); fi; if [ "$(LED_ALL)" = "y" ]; then sed -i "/RTCONFIG_LED_ALL/d" $(1); echo "RTCONFIG_LED_ALL=y" >>$(1); fi; if [ "$(N56U_SR2)" = "y" ]; then sed -i "/RTCONFIG_N56U_SR2/d" $(1); echo "RTCONFIG_N56U_SR2=y" >>$(1); fi; if [ "$(AP_CARRIER_DETECTION)" = "y" ]; then sed -i "/RTCONFIG_AP_CARRIER_DETECTION/d" $(1); echo "RTCONFIG_AP_CARRIER_DETECTION=y" >>$(1); fi; if [ "$(SFP)" = "y" ]; then sed -i "/RTCONFIG_SFP\>/d" $(1); echo "RTCONFIG_SFP=y" >>$(1); fi; if [ "$(SFP4M)" = "y" ]; then sed -i "/RTCONFIG_SFP\>/d" $(1); echo "RTCONFIG_SFP=y" >>$(1); sed -i "/RTCONFIG_4M_SFP/d" $(1); echo "RTCONFIG_4M_SFP=y" >>$(1); sed -i "/RTCONFIG_UPNPC/d" $(1); echo "# RTCONFIG_UPNPC is not set" >>$(1); sed -i "/RTCONFIG_BONJOUR/d" $(1); echo "# RTCONFIG_BONJOUR is not set" >>$(1); sed -i "/RTCONFIG_SPEEDTEST/d" $(1); echo "# RTCONFIG_SPEEDTEST is not set" >>$(1); fi; if [ "$(SFP8M)" = "y" ]; then sed -i "/RTCONFIG_8M_SFP/d" $(1); echo "RTCONFIG_8M_SFP=y" >>$(1); sed -i "/RTCONFIG_UPNPC/d" $(1); echo "# RTCONFIG_UPNPC is not set" >>$(1); sed -i "/RTCONFIG_BONJOUR/d" $(1); echo "# RTCONFIG_BONJOUR is not set" >>$(1); sed -i "/RTCONFIG_SPEEDTEST/d" $(1); echo "# RTCONFIG_SPEEDTEST is not set" >>$(1); fi; if [ "$(SFPRAM16M)" = "y" ]; then sed -i "/RTCONFIG_16M_RAM_SFP/d" $(1); echo "RTCONFIG_16M_RAM_SFP=y" >>$(1); fi; if [ "$(AUTODICT)" = "y" ]; then sed -i "/RTCONFIG_AUTODICT/d" $(1); echo "RTCONFIG_AUTODICT=y" >>$(1); fi; if [ "$(ZIPLIVEUPDATE)" = "y" ]; then sed -i "/RTCONFIG_AUTOLIVEUPDATE_ZIP/d" $(1); echo "RTCONFIG_AUTOLIVEUPDATE_ZIP=y" >>$(1); fi; if [ "$(LANWAN_LED)" = "y" ]; then sed -i "/RTCONFIG_LANWAN_LED/d" $(1); echo "RTCONFIG_LANWAN_LED=y" >>$(1); fi; if [ "$(WLAN_LED)" = "y" ]; then sed -i "/RTCONFIG_WLAN_LED/d" $(1); echo "RTCONFIG_WLAN_LED=y" >>$(1); fi; if [ "$(ETLAN_LED)" = "y" ]; then sed -i "/RTCONFIG_FAKE_ETLAN_LED/d" $(1); echo "RTCONFIG_FAKE_ETLAN_LED=y" >>$(1); fi; if [ "$(EXT_LED_WPS)" = "y" ]; then sed -i "/RTCONFIG_EXT_LED_WPS/d" $(1); echo "RTCONFIG_EXT_LED_WPS=y" >>$(1); fi; if [ "$(LAN4WAN_LED)" = "y" ]; then sed -i "/RTCONFIG_LAN4WAN_LED/d" $(1); echo "RTCONFIG_LAN4WAN_LED=y" >>$(1); fi; if [ "$(SWMODE_SWITCH)" = "y" ]; then sed -i "/RTCONFIG_SWMODE_SWITCH/d" $(1); echo "RTCONFIG_SWMODE_SWITCH=y" >>$(1); fi; if [ "$(WL_AUTO_CHANNEL)" = "y" ]; then sed -i "/RTCONFIG_WL_AUTO_CHANNEL/d" $(1); echo "RTCONFIG_WL_AUTO_CHANNEL=y" >>$(1); fi; if [ "$(SMALL_FW_UPDATE)" = "y" ]; then sed -i "/RTCONFIG_SMALL_FW_UPDATE/d" $(1); echo "RTCONFIG_SMALL_FW_UPDATE=y" >>$(1); fi; if [ "$(WIRELESS_SWITCH)" = "y" ]; then sed -i "/RTCONFIG_WIRELESS_SWITCH/d" $(1); echo "RTCONFIG_WIRELESS_SWITCH=y" >>$(1); fi; if [ "$(BTN_WIFITOG)" = "y" ]; then sed -i "/RTCONFIG_WIFI_TOG_BTN/d" $(1); echo "RTCONFIG_WIFI_TOG_BTN=y" >>$(1); fi; if [ "$(BTN_WPS_RST)" = "y" ]; then sed -i "/RTCONFIG_WPS_RST_BTN/d" $(1); echo "RTCONFIG_WPS_RST_BTN=y" >>$(1); fi; if [ "$(BTN_WPS_ALLLED)" = "y" ]; then sed -i "/RTCONFIG_WPS_ALLLED_BTN/d" $(1); echo "RTCONFIG_WPS_ALLLED_BTN=y" >>$(1); fi; if [ "$(SW_CTRL_ALLLED)" = "y" ]; then sed -i "/RTCONFIG_SW_CTRL_ALLLED/d" $(1); echo "RTCONFIG_SW_CTRL_ALLLED=y" >>$(1); fi; if [ "$(BTN_TURBO)" = "y" ]; then sed -i "/RTCONFIG_TURBO_BTN/d" $(1); echo "RTCONFIG_TURBO_BTN=y" >>$(1); fi; if [ "$(LOGO_LED)" = "y" ]; then sed -i "/RTCONFIG_LOGO_LED/d" $(1); echo "RTCONFIG_LOGO_LED=y" >>$(1); fi; if [ "$(LED_BTN)" = "y" ]; then sed -i "/RTCONFIG_LED_BTN/d" $(1); echo "RTCONFIG_LED_BTN=y" >>$(1); fi; if [ "$(WANLEDX2)" = "y" ]; then sed -i "/RTCONFIG_WANLEDX2/d" $(1); echo "RTCONFIG_WANLEDX2=y" >>$(1); fi; if [ "$(SFPP_LED)" = "y" ]; then sed -i "/RTCONFIG_SFPP_LED/d" $(1); echo "RTCONFIG_SFPP_LED=y" >>$(1); fi; if [ "$(R10G_LED)" = "y" ]; then sed -i "/RTCONFIG_R10G_LED/d" $(1); echo "RTCONFIG_R10G_LED=y" >>$(1); fi; if [ "$(USBEJECT)" = "y" ]; then sed -i "/RTCONFIG_USBEJECT/d" $(1); echo "RTCONFIG_USBEJECT=y" >>$(1); fi; if [ "$(BCM4352_5G)" = "y" ]; then sed -i "/RTCONFIG_4352_5G/d" $(1); echo "RTCONFIG_4352_5G=y" >>$(1); fi; if [ "$(ACCEL_PPTPD)" = "y" ]; then sed -i "/RTCONFIG_ACCEL_PPTPD/d" $(1); echo "RTCONFIG_ACCEL_PPTPD=y" >>$(1); fi; if [ "$(SNMPD)" = "y" ]; then sed -i "/RTCONFIG_SNMPD/d" $(1); echo "RTCONFIG_SNMPD=y" >>$(1); fi; if [ "$(SHP)" = "y" ]; then sed -i "/RTCONFIG_SHP/d" $(1); echo "RTCONFIG_SHP=y" >>$(1); fi; if [ "$(GRO)" = "y" ]; then sed -i "/RTCONFIG_GROCTRL/d" $(1); echo "RTCONFIG_GROCTRL=y" >>$(1); fi; if [ "$(DSL)" = "y" ]; then sed -i "/RTCONFIG_DSL/d" $(1); echo "RTCONFIG_DSL=y" >>$(1); if [ "$(ANNEX_B)" = "y" ]; then echo "RTCONFIG_DSL_ANNEX_B=y" >>$(1); else echo "# RTCONFIG_DSL_ANNEX_B is not set" >>$(1); fi; if [ "$(DSL_TCLINUX)" = "y" ]; then sed -i "/RTCONFIG_DSL_TCLINUX/d" $(1); echo "RTCONFIG_DSL_TCLINUX=y" >>$(1); else echo "# RTCONFIG_DSL_TCLINUX is not set" >>$(1); fi; if [ "$(VDSL)" = "y" ]; then sed -i "/RTCONFIG_VDSL/d" $(1); echo "RTCONFIG_VDSL=y" >>$(1); else echo "# RTCONFIG_VDSL is not set" >>$(1); fi; if [ "$(DSL_BCM)" = "y" ]; then sed -i "/RTCONFIG_DSL_BCM/d" $(1); echo "RTCONFIG_DSL_BCM=y" >>$(1); else echo "# RTCONFIG_DSL_BCM is not set" >>$(1); fi; if [ "$(DSL_HOST)" = "y" ]; then sed -i "/RTCONFIG_DSL_HOST/d" $(1); echo "RTCONFIG_DSL_HOST=y" >>$(1); else echo "# RTCONFIG_DSL_HOST is not set" >>$(1); fi; if [ "$(DSL_REMOTE)" = "y" ]; then sed -i "/RTCONFIG_DSL_REMOTE/d" $(1); echo "RTCONFIG_DSL_REMOTE=y" >>$(1); else echo "# RTCONFIG_DSL_REMOTE is not set" >>$(1); fi; fi; if [ "$(SFPP)" = "y" ]; then sed -i "/RTCONFIG_SFPP\>/d" $(1); echo "RTCONFIG_SFPP=y" >>$(1); fi; if [ "$(DUALWAN)" = "y" ]; then sed -i "/RTCONFIG_DUALWAN/d" $(1); echo "RTCONFIG_DUALWAN=y" >>$(1); fi; if [ "$(HW_DUALWAN)" = "y" ]; then sed -i "/RTCONFIG_HW_DUALWAN/d" $(1); echo "RTCONFIG_HW_DUALWAN=y" >>$(1); fi; if [ "$(FRS_FEEDBACK)" = "y" ]; then sed -i "/RTCONFIG_FRS_FEEDBACK/d" $(1); echo "RTCONFIG_FRS_FEEDBACK=y" >>$(1); sed -i "/RTCONFIG_HTTPS/d" $(1); echo "RTCONFIG_HTTPS=y" >>$(1); fi; if [ "$(EMAIL)" = "y" ]; then sed -i "/RTCONFIG_PUSH_EMAIL/d" $(1); echo "RTCONFIG_PUSH_EMAIL=y" >>$(1); fi; if [ "$(AHS)" = "y" ]; then sed -i "/RTCONFIG_AHS/d" $(1); echo "RTCONFIG_AHS=y" >>$(1); sed -i "/RTCONFIG_HTTPS/d" $(1); echo "RTCONFIG_HTTPS=y" >>$(1); sed -i "/RTCONFIG_LIBASC/d" $(1); echo "RTCONFIG_LIBASC=y" >>$(1); fi; if [ "$(ASD)" = "y" ]; then sed -i "/RTCONFIG_ASD/d" $(1); echo "RTCONFIG_ASD=y" >>$(1); sed -i "/RTCONFIG_LIBASC/d" $(1); echo "RTCONFIG_LIBASC=y" >>$(1); fi; if [ "$(RSYSLOGD)" = "y" ]; then sed -i "/RTCONFIG_RSYSLOGD/d" $(1); echo "RTCONFIG_RSYSLOGD=y" >>$(1); fi; if [ "$(DBLOG)" = "y" ]; then sed -i "/RTCONFIG_DBLOG/d" $(1); echo "RTCONFIG_DBLOG=y" >>$(1); fi; if [ "$(ACCOUNT_BINDING)" = "y" ]; then sed -i "/RTCONFIG_ACCOUNT_BINDING/d" $(1); echo "RTCONFIG_ACCOUNT_BINDING=y" >>$(1); fi; if [ "$(SYSSTATE)" = "y" ]; then sed -i "/RTCONFIG_SYSSTATE/d" $(1); echo "RTCONFIG_SYSSTATE=y" >>$(1); else sed -i "/RTCONFIG_SYSSTATE/d" $(1); echo "# RTCONFIG_SYSSTATE is not set" >>$(1); fi; if [ "$(USER_LOW_RSSI)" = "y" ]; then sed -i "/RTCONFIG_USER_LOW_RSSI/d" $(1); echo "RTCONFIG_USER_LOW_RSSI=y" >>$(1); fi; if [ "$(ADV_RAST)" = "y" ]; then sed -i "/RTCONFIG_ADV_RAST/d" $(1); echo "RTCONFIG_ADV_RAST=y" >>$(1); fi; if [ "$(BCN_RPT)" = "y" ]; then sed -i "/RTCONFIG_BCN_RPT/d" $(1); echo "RTCONFIG_BCN_RPT=y" >>$(1); sed -i "/RTCONFIG_11K_RCPI_CHECK/d" $(1); echo "RTCONFIG_11K_RCPI_CHECK=y" >>$(1); fi; if [ "$(BTM_11V)" = "y" ]; then sed -i "/RTCONFIG_BTM_11V/d" $(1); echo "RTCONFIG_BTM_11V=y" >>$(1); fi; if [ "$(FAST_ACL_SET)" = "y" ]; then sed -i "/RTCONFIG_FAST_ACL_SET/d" $(1); echo "RTCONFIG_FAST_ACL_SET=y" >>$(1); fi; if [ "$(ADTBW_RADAR)" = "y" ]; then sed -i "/RTCONFIG_ADTBW_AFTER_RADARDETECTED/d" $(1); echo "RTCONFIG_ADTBW_AFTER_RADARDETECTED=y" >>$(1); fi; if [ "$(RCPI_CHECK)" = "y" ]; then sed -i "/RTCONFIG_11K_RCPI_CHECK/d" $(1); echo "RTCONFIG_11K_RCPI_CHECK=y" >>$(1); fi; if [ "$(NO_PTHREAD_TIMEDWAIT)" = "y" ]; then sed -i "/RTCONFIG_NO_PTHREAD_TIMEDWAIT/d" $(1); echo "RTCONFIG_NO_PTHREAD_TIMEDWAIT=y" >>$(1); fi; if [ "$(NEW_USER_LOW_RSSI)" = "y" ]; then sed -i "/RTCONFIG_NEW_USER_LOW_RSSI/d" $(1); echo "RTCONFIG_NEW_USER_LOW_RSSI=y" >>$(1); fi; if [ "$(CONNDIAG)" = "y" ]; then sed -i "/RTCONFIG_CONNDIAG/d" $(1); echo "RTCONFIG_CONNDIAG=y" >>$(1); fi; if [ "$(USB)" = "USB" ]; then sed -i "/RTCONFIG_USB\b/d" $(1); echo "RTCONFIG_USB=y" >>$(1); if [ "$(USBEXTRAS)" = "y" ]; then sed -i "/RTCONFIG_USB_EXTRAS/d" $(1); echo "RTCONFIG_USB_EXTRAS=y" >>$(1); fi; if [ "$(E2FSPROGS)" = "y" ]; then sed -i "/RTCONFIG_E2FSPROGS/d" $(1); echo "RTCONFIG_E2FSPROGS=y" >>$(1); fi; if [ "$(EXT4FS)" = "y" ]; then sed -i "/RTCONFIG_EXT4FS/d" $(1); echo "RTCONFIG_EXT4FS=y" >>$(1); fi; if [ "$(TFAT)" != "" -a "$(TFAT)" != "n" ]; then sed -i "/RTCONFIG_TFAT/d" $(1); echo "RTCONFIG_TFAT=y" >>$(1); if [ "$(TFAT)" != "y" ]; then sed -i "/RTCONFIG_OPENPLUS_TFAT/d" $(1); echo "RTCONFIG_OPENPLUS_TFAT=y" >>$(1); fi; fi; if [ "$(NTFS)" != "" ]; then sed -i "/RTCONFIG_NTFS\>/d" $(1); echo "RTCONFIG_NTFS=y" >>$(1); if [ "$(findstring open, $(NTFS))" = "open" ]; then sed -i "/RTCONFIG_OPEN_NTFS3G/d" $(1); echo "RTCONFIG_OPEN_NTFS3G=y" >>$(1); if [ "$(findstring paragon, $(NTFS))" = "paragon" ]; then sed -i "/RTCONFIG_OPENPLUSPARAGON_NTFS/d" $(1); echo "RTCONFIG_OPENPLUSPARAGON_NTFS=y" >>$(1); elif [ "$(findstring tuxera, $(NTFS))" = "tuxera" ]; then sed -i "/RTCONFIG_OPENPLUSTUXERA_NTFS/d" $(1); echo "RTCONFIG_OPENPLUSTUXERA_NTFS=y" >>$(1); fi; if [ "$(findstring 2016, $(NTFS))" = "2016" ]; then sed -i "/RTCONFIG_OPEN_NTFS3G_2016/d" $(1); echo "RTCONFIG_OPEN_NTFS3G_2016=y" >>$(1); else echo "# RTCONFIG_OPEN_NTFS3G_2016 is not set" >>$(1); fi; fi; if [ "$(findstring paragon, $(NTFS))" = "paragon" ]; then sed -i "/RTCONFIG_PARAGON_NTFS/d" $(1); echo "RTCONFIG_PARAGON_NTFS=y" >>$(1); fi; if [ "$(findstring tuxera, $(NTFS))" = "tuxera" ]; then sed -i "/RTCONFIG_TUXERA_NTFS/d" $(1); echo "RTCONFIG_TUXERA_NTFS=y" >>$(1); fi; if [ "$(findstring ntfs3, $(NTFS))" = "ntfs3" ]; then sed -i "/RTCONFIG_NTFS3/d" $(1); echo "RTCONFIG_NTFS3=y" >>$(1); fi; fi; if [ "$(HFS)" != "" ]; then sed -i "/RTCONFIG_HFS/d" $(1); echo "RTCONFIG_HFS=y" >>$(1); if [ "$(findstring open, $(HFS))" = "open" ]; then sed -i "/RTCONFIG_KERNEL_HFSPLUS/d" $(1); echo "RTCONFIG_KERNEL_HFSPLUS=y" >>$(1); if [ "$(findstring paragon, $(HFS))" = "paragon" ]; then sed -i "/RTCONFIG_OPENPLUSPARAGON_HFS/d" $(1); echo "RTCONFIG_OPENPLUSPARAGON_HFS=y" >>$(1); elif [ "$(findstring tuxera, $(HFS))" = "tuxera" ]; then sed -i "/RTCONFIG_OPENPLUSTUXERA_HFS/d" $(1); echo "RTCONFIG_OPENPLUSTUXERA_HFS=y" >>$(1); fi; fi; if [ "$(findstring paragon, $(HFS))" = "paragon" ]; then sed -i "/RTCONFIG_PARAGON_HFS/d" $(1); echo "RTCONFIG_PARAGON_HFS=y" >>$(1); fi; if [ "$(findstring tuxera, $(HFS))" = "tuxera" ]; then sed -i "/RTCONFIG_TUXERA_HFS/d" $(1); echo "RTCONFIG_TUXERA_HFS=y" >>$(1); fi; fi; if [ "$(APFS)" != "" ]; then sed -i "/RTCONFIG_APFS/d" $(1); echo "RTCONFIG_APFS=y" >>$(1); if [ "$(findstring tuxera, $(APFS))" = "tuxera" ]; then sed -i "/RTCONFIG_TUXERA_APFS/d" $(1); echo "RTCONFIG_TUXERA_APFS=y" >>$(1); fi; fi; if [ "$(UFSDDEBUG)" = "y" ]; then sed -i "/RTCONFIG_UFSD_DEBUG/d" $(1); echo "RTCONFIG_UFSD_DEBUG=y" >>$(1); fi; if [ "$(DISK_MONITOR)" = "y" ]; then sed -i "/RTCONFIG_DISK_MONITOR/d" $(1); echo "RTCONFIG_DISK_MONITOR=y" >>$(1); fi; if [ "$(MEDIASRV)" = "y" ]; then sed -i "/RTCONFIG_MEDIA_SERVER/d" $(1); echo "RTCONFIG_MEDIA_SERVER=y" >>$(1); if [ "$(MEDIASRV_LIMIT)" = "y" ]; then sed -i "/RTCONFIG_MEDIASERVER_LIMIT/d" $(1); echo "RTCONFIG_MEDIASERVER_LIMIT=y" >>$(1); fi; sed -i "/RTCONFIG_NO_DAAPD/d" $(1); if [ "$(NO_DAAPD)" = "y" ]; then echo "RTCONFIG_NO_DAAPD=y" >>$(1); else echo "# RTCONFIG_NO_DAAPD is not set" >>$(1); fi; fi; if [ "$(SMARTSYNCBASE)" = "y" ]; then sed -i "/RTCONFIG_SWEBDAVCLIENT/d" $(1); echo "RTCONFIG_SWEBDAVCLIENT=y" >>$(1); sed -i "/RTCONFIG_DROPBOXCLIENT/d" $(1); echo "RTCONFIG_DROPBOXCLIENT=y" >>$(1); sed -i "/RTCONFIG_GOOGLECLIENT/d" $(1); echo "RTCONFIG_GOOGLECLIENT=y" >>$(1); sed -i "/RTCONFIG_FTPCLIENT/d" $(1); echo "RTCONFIG_FTPCLIENT=y" >>$(1); sed -i "/RTCONFIG_SAMBACLIENT/d" $(1); echo "RTCONFIG_SAMBACLIENT=y" >>$(1); sed -i "/RTCONFIG_USBCLIENT/d" $(1); echo "RTCONFIG_USBCLIENT=y" >>$(1); sed -i "/RTCONFIG_CLOUDSYNC/d" $(1); echo "RTCONFIG_CLOUDSYNC=y" >>$(1); else if [ "$(SWEBDAVCLIENT)" = "y" ]; then sed -i "/RTCONFIG_SWEBDAVCLIENT/d" $(1); echo "RTCONFIG_SWEBDAVCLIENT=y" >>$(1); fi; if [ "$(DROPBOXCLIENT)" = "y" ]; then sed -i "/RTCONFIG_DROPBOXCLIENT/d" $(1); echo "RTCONFIG_DROPBOXCLIENT=y" >>$(1); fi; if [ "$(GOOGLECLIENT)" = "y" ]; then sed -i "/RTCONFIG_GOOGLECLIENT/d" $(1); echo "RTCONFIG_GOOGLECLIENT=y" >>$(1); fi; if [ "$(FTPCLIENT)" = "y" ]; then sed -i "/RTCONFIG_FTPCLIENT/d" $(1); echo "RTCONFIG_FTPCLIENT=y" >>$(1); fi; if [ "$(SAMBACLIENT)" = "y" ]; then sed -i "/RTCONFIG_SAMBACLIENT/d" $(1); echo "RTCONFIG_SAMBACLIENT=y" >>$(1); fi; if [ "$(USBCLIENT)" = "y" ]; then sed -i "/RTCONFIG_USBCLIENT/d" $(1); echo "RTCONFIG_USBCLIENT=y" >>$(1); fi; if [ "$(FLICKRCLIENT)" = "y" ]; then sed -i "/RTCONFIG_FLICKRCLIENT/d" $(1); echo "RTCONFIG_FLICKRCLIENT=y" >>$(1); fi; if [ "$(CLOUDSYNC)" = "y" ]; then sed -i "/RTCONFIG_CLOUDSYNC/d" $(1); echo "RTCONFIG_CLOUDSYNC=y" >>$(1); fi; fi; if [ "$(CDROM)" = "y" ]; then sed -i "/RTCONFIG_USB_CDROM/d" $(1); echo "RTCONFIG_USB_CDROM=y" >>$(1); fi; if [ "$(MODEM)" = "y" ]; then sed -i "/RTCONFIG_USB_MODEM/d" $(1); echo "RTCONFIG_USB_MODEM=y" >>$(1); if [ "$(MODEMPIN)" = "n" ]; then echo "# RTCONFIG_USB_MODEM_PIN is not set" >>$(1); else echo "RTCONFIG_USB_MODEM_PIN=y" >>$(1); fi; if [ "$(GOBI)" = "y" ]; then sed -i "/RTCONFIG_INTERNAL_GOBI/d" $(1); echo "RTCONFIG_INTERNAL_GOBI=y" >>$(1); fi; if [ "$(LESSMODEM)" = "y" ]; then sed -i "/RTCONFIG_USB_LESSMODEM/d" $(1); echo "RTCONFIG_USB_LESSMODEM=y" >>$(1); fi; if [ "$(DYNMODEM)" = "y" ]; then sed -i "/RTCONFIG_DYN_MODEM/d" $(1); echo "RTCONFIG_DYN_MODEM=y" >>$(1); fi; if [ "$(USBSMS)" = "y" ]; then sed -i "/RTCONFIG_USB_SMS_MODEM/d" $(1); echo "RTCONFIG_USB_SMS_MODEM=y" >>$(1); fi; if [ "$(MULTIMODEM)" = "y" ]; then sed -i "/RTCONFIG_USB_MULTIMODEM/d" $(1); echo "RTCONFIG_USB_MULTIMODEM=y" >>$(1); fi; if [ "$(MODEMBRIDGE)" = "y" ]; then sed -i "/RTCONFIG_MODEM_BRIDGE/d" $(1); echo "RTCONFIG_MODEM_BRIDGE=y" >>$(1); fi; fi; if [ "$(PRINTER)" = "y" ]; then sed -i "/RTCONFIG_USB_PRINTER/d" $(1); echo "RTCONFIG_USB_PRINTER=y" >>$(1); fi; if [ "$(QFIREHOSE)" = "y" ]; then sed -i "/RTCONFIG_QFIREHOSE/d" $(1); echo "RTCONFIG_QFIREHOSE=y" >>$(1); fi; if [ "$(DLOADER)" = "y" ]; then sed -i "/RTCONFIG_DLOADER/d" $(1); echo "RTCONFIG_DLOADER=y" >>$(1); else sed -i "/RTCONFIG_DLOADER/d" $(1); echo "# RTCONFIG_DLOADER is not set" >>$(1); fi; if [ "$(FIBOCOM_FG621)" = "y" ]; then sed -i "/RTCONFIG_FIBOCOM_FG621/d" $(1); echo "RTCONFIG_FIBOCOM_FG621=y" >>$(1); else sed -i "/RTCONFIG_FIBOCOM_FG621/d" $(1); echo "# RTCONFIG_FIBOCOM_FG621 is not set" >>$(1); fi; if [ "$(WEBDAV)" = "y" ]; then sed -i "/RTCONFIG_WEBDAV/d" $(1); echo "RTCONFIG_WEBDAV=y" >>$(1); fi; if [ "$(USBAP)" = "y" ]; then sed -i "/RTCONFIG_BRCM_USBAP/d" $(1); echo "RTCONFIG_BRCM_USBAP=y" >>$(1); fi; if [ "$(XHCI)" = "y" ]; then sed -i "/RTCONFIG_USB_XHCI/d" $(1); echo "RTCONFIG_USB_XHCI=y" >>$(1); fi; else sed -i "/RTCONFIG_USB\b/d" $(1); echo "# RTCONFIG_USB is not set" >>$(1); fi; if [ "$(HTTPS)" = "y" ]; then sed -i "/RTCONFIG_HTTPS/d" $(1); echo "RTCONFIG_HTTPS=y" >>$(1); sed -i "/RTCONFIG_FORCE_AUTO_UPGRADE/d" $(1); echo "# RTCONFIG_FORCE_AUTO_UPGRADE is not set" >>$(1); sed -i "/RTCONFIG_CAPTCHA/d" $(1); echo "RTCONFIG_CAPTCHA=y" >>$(1); if [ "$(AUTO_FW_UPGRADE)" = "y" ]; then sed -i "/RTCONFIG_AUTO_FW_UPGRADE/d" $(1); echo "RTCONFIG_AUTO_FW_UPGRADE=y" >>$(1); fi; else sed -i "/RTCONFIG_FTP_SSL/d" $(1); echo "# RTCONFIG_FTP_SSL is not set" >>$(1); fi; if [ "$(NO_FTP_SSL)" = "y" ]; then sed -i "/RTCONFIG_FTP_SSL/d" $(1); echo "# RTCONFIG_FTP_SSL is not set" >>$(1); fi; if [ "$(USBRESET)" = "y" ]; then sed -i "/RTCONFIG_USBRESET/d" $(1); echo "RTCONFIG_USBRESET=y" >>$(1); else sed -i "/RTCONFIG_USBRESET/d" $(1); echo "# RTCONFIG_USBRESET is not set" >>$(1); fi; if [ "$(WIFIPWR)" = "y" ]; then sed -i "/RTCONFIG_WIFIPWR/d" $(1); echo "RTCONFIG_WIFIPWR=y" >>$(1); fi; if [ "$(XHCIMODE)" = "y" ]; then sed -i "/RTCONFIG_XHCIMODE/d" $(1); echo "RTCONFIG_XHCIMODE=y" >>$(1); fi; if [ "$(NO_SAMBA)" = "y" ]; then sed -i "/RTCONFIG_SAMBASRV/d" $(1); echo "# RTCONFIG_SAMBASRV is not set" >>$(1); fi; if [ "$(NO_FTP)" = "y" ]; then sed -i "/RTCONFIG_FTP/d" $(1); echo "# RTCONFIG_FTP is not set" >>$(1); sed -i "/RTCONFIG_FTP_SSL/d" $(1); echo "# RTCONFIG_FTP_SSL is not set" >>$(1); fi; if [ "$(NO_USBSTORAGE)" = "y" ]; then sed -i "/RTCONFIG_NO_USBPORT/d" $(1); echo "RTCONFIG_NO_USBPORT=y" >>$(1); sed -i "/RTCONFIG_SAMBASRV/d" $(1); echo "# RTCONFIG_SAMBASRV is not set" >>$(1); sed -i "/RTCONFIG_FTP/d" $(1); echo "# RTCONFIG_FTP is not set" >>$(1); sed -i "/RTCONFIG_FTP_SSL/d" $(1); echo "# RTCONFIG_FTP_SSL is not set" >>$(1); fi; if [ "$(ZEBRA)" = "y" ]; then sed -i "/RTCONFIG_ZEBRA/d" $(1); echo "RTCONFIG_ZEBRA=y" >>$(1); fi; if [ "$(JFFS2)" = "y" ]; then sed -i "/RTCONFIG_JFFS2/d" $(1); echo "RTCONFIG_JFFS2=y" >>$(1); fi; if [ "$(BRCM_NAND_JFFS2)" = "y" ]; then sed -i "/RTCONFIG_BRCM_NAND_JFFS2/d" $(1); echo "RTCONFIG_BRCM_NAND_JFFS2=y" >>$(1); fi; if [ "$(JFFS_NVRAM)" = "y" ]; then sed -i "/RTCONFIG_JFFS_NVRAM/d" $(1); echo "RTCONFIG_JFFS_NVRAM=y" >>$(1); fi; if [ "$(JFFS1)" = "y" ]; then sed -i "/RTCONFIG_JFFSV1/d" $(1); echo "RTCONFIG_JFFSV1=y" >>$(1); fi; if [ "$(CIFS)" = "y" ]; then sed -i "/RTCONFIG_CIFS/d" $(1); echo "RTCONFIG_CIFS=y" >>$(1); fi; if [ "$(SSH)" = "y" ]; then sed -i "/RTCONFIG_SSH/d" $(1); echo "RTCONFIG_SSH=y" >>$(1); fi; if [ "$(NO_LIBOPT)" = "y" ]; then sed -i "/RTCONFIG_OPTIMIZE_SHARED_LIBS/d" $(1); echo "# RTCONFIG_OPTIMIZE_SHARED_LIBS is not set" >>$(1); fi; if [ "$(EBTABLES)" = "y" ]; then sed -i "/RTCONFIG_EBTABLES/d" $(1); echo "RTCONFIG_EBTABLES=y" >>$(1); fi; if [ "$(IPV6SUPP)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/RTCONFIG_IPV6/d" $(1); echo "RTCONFIG_IPV6=y" >>$(1); if [ "$(IPV6S46)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/RTCONFIG_SOFTWIRE46/d" $(1); echo "RTCONFIG_SOFTWIRE46=y" >>$(1); fi; fi; if [ "$(IPSEC)" = "y" ] || [ "$(IPSEC)" = "QUICKSEC" ] || [ "$(IPSEC)" = "STRONGSWAN" ] ; then sed -i "/RTCONFIG_IPSEC/d" $(1); echo "RTCONFIG_IPSEC=y" >>$(1); for ipsec in $(IPSEC_ID_POOL) ; do sed -i "/RTCONFIG_$${ipsec}\>/d" $(1); if [ "$(IPSEC)" = "$${ipsec}" ] ; then echo "RTCONFIG_$${ipsec}=y" >> $(1); if [ "$(IPSEC_SRVCLI_ONLY)" = "SRV" ]; then sed -i "/RTCONFIG_IPSEC_SERVER/d" $(1); echo "RTCONFIG_IPSEC_SERVER=y" >>$(1); echo "# RTCONFIG_IPSEC_CLIENT is not set" >>$(1); elif [ "$(IPSEC_SRVCLI_ONLY)" = "CLI" ]; then sed -i "/RTCONFIG_IPSEC_CLIENT/d" $(1); echo "RTCONFIG_IPSEC_CLIENT=y" >>$(1); echo "# RTCONFIG_IPSEC_SERVER is not set" >>$(1); else echo "RTCONFIG_IPSEC_SERVER=y" >>$(1); echo "RTCONFIG_IPSEC_CLIENT=y" >>$(1); fi; elif [ "$(IPSEC)" = "y" -a "$${ipsec}" = "STRONGSWAN" ] ; then sed -i "/RTCONFIG_STRONGSWAN/d" $(1); echo "RTCONFIG_STRONGSWAN=y" >>$(1); else echo "# RTCONFIG_$${ipsec} is not set" >> $(1); fi; done; else sed -i "/RTCONFIG_IPSEC/d" $(1); echo "# RTCONFIG_IPSEC is not set" >>$(1); for ipsec in $(IPSEC_ID_POOL) ; do sed -i "/RTCONFIG_$${ipsec}\>/d" $(1); echo "# RTCONFIG_$${ipsec} is not set" >> $(1); done; echo "# RTCONFIG_IPSEC_SERVER is not set" >>$(1); echo "# RTCONFIG_IPSEC_CLIENT is not set" >>$(1); fi; if [ "$(OPENVPN)" = "y" ]; then sed -i "/RTCONFIG_LZO/d" $(1); echo "RTCONFIG_LZO=y" >>$(1); sed -i "/RTCONFIG_OPENVPN/d" $(1); echo "RTCONFIG_OPENVPN=y" >>$(1); fi; if [ "$(APP)" = "installed" ]; then sed -i "/RTCONFIG_APP_PREINSTALLED/d" $(1); echo "RTCONFIG_APP_PREINSTALLED=y" >>$(1); elif [ "$(APP)" = "network" ]; then sed -i "/RTCONFIG_APP_NETINSTALLED/d" $(1); echo "RTCONFIG_APP_NETINSTALLED=y" >>$(1); fi; sed -i "/RTCONFIG_APP_FILEFLEX/d" $(1); if [ "$(FILEFLEX)" = "y" ]; then echo "RTCONFIG_APP_FILEFLEX=y" >>$(1); else echo "# RTCONFIG_APP_FILEFLEX is not set" >>$(1); fi; if [ "$(STRACE)" = "y" ] ; then sed -i "/RTCONFIG_STRACE/d" $(1); echo "RTCONFIG_STRACE=y" >>$(1); fi; if [ "$(ISP_METER)" = "y" ]; then sed -i "/RTCONFIG_ISP_METER/d" $(1); echo "RTCONFIG_ISP_METER=y" >>$(1); fi; if [ "$(NVRAM_64K)" = "y" ]; then sed -i "/RTCONFIG_NVRAM_64K/d" $(1); echo "RTCONFIG_NVRAM_64K=y" >>$(1); fi; if [ "$(DUAL_TRX)" = "y" ]; then sed -i "/RTCONFIG_DUAL_TRX\>/d" $(1); echo "RTCONFIG_DUAL_TRX=y" >>$(1); fi; if [ "$(PSISTLOG)" = "y" ]; then sed -i "/RTCONFIG_PSISTLOG/d" $(1); echo "RTCONFIG_PSISTLOG=y" >>$(1); fi; if [ "$(UBI)" = "y" ]; then sed -i "/RTCONFIG_UBI/d" $(1); echo "RTCONFIG_UBI=y" >>$(1); if [ "$(UBIFS)" = "y" ]; then sed -i "/RTCONFIG_UBIFS/d" $(1); echo "RTCONFIG_UBIFS=y" >>$(1); sed -i "/RTCONFIG_JFFS2/d" $(1); echo "# RTCONFIG_JFFS2 is not set" >>$(1); sed -i "/RTCONFIG_JFFSV1/d" $(1); echo "# RTCONFIG_JFFSV1 is not set" >>$(1); sed -i "/RTCONFIG_JFFS2USERICON/d" $(1); echo "RTCONFIG_JFFS2USERICON=y" >>$(1); else sed -i "/RTCONFIG_UBIFS/d" $(1); echo "# RTCONFIG_UBIFS is not set" >>$(1); fi; else sed -i "/RTCONFIG_UBI/d" $(1); echo "# RTCONFIG_UBI is not set" >>$(1); sed -i "/RTCONFIG_UBIFS/d" $(1); echo "# RTCONFIG_UBIFS is not set" >>$(1); fi; if [ "$(UBI)" = "y" ] || [ "$(JFFS2)" = "y" ] ; then if [ "$(SAVEJFFS)" = "y" ] ; then sed -i "/RTCONFIG_SAVEJFFS/d" $(1); echo "RTCONFIG_SAVEJFFS=y" >>$(1); fi; fi; if [ "$(OPTIMIZE_XBOX)" = "y" ]; then sed -i "/RTCONFIG_OPTIMIZE_XBOX/d" $(1); echo "RTCONFIG_OPTIMIZE_XBOX=y" >>$(1); fi; if [ "$(NEW_RGDM)" = "y" ]; then sed -i "/RTCONFIG_NEW_REGULATION_DOMAIN/d" $(1); echo "RTCONFIG_NEW_REGULATION_DOMAIN=y" >>$(1); else sed -i "/RTCONFIG_NEW_REGULATION_DOMAIN/d" $(1); echo "# RTCONFIG_NEW_REGULATION_DOMAIN is not set" >>$(1); fi; if [ "$(DYN_DICT_NAME)" = "y" ]; then sed -i "/RTCONFIG_DYN_DICT_NAME/d" $(1); echo "RTCONFIG_DYN_DICT_NAME=y" >>$(1); fi; if [ "$(DMALLOC)" = "y" ]; then sed -i "/RTCONFIG_DMALLOC/d" $(1); echo "RTCONFIG_DMALLOC=y" >>$(1); else sed -i "/RTCONFIG_DMALLOC/d" $(1); echo "# RTCONFIG_DMALLOC is not set" >>$(1); fi; if [ "$(JFFS2ND_BACKUP)" = "y" ]; then sed -i "/RTCONFIG_JFFS2ND_BACKUP/d" $(1); echo "RTCONFIG_JFFS2ND_BACKUP=y" >>$(1); else sed -i "/RTCONFIG_JFFS2ND_BACKUP/d" $(1); echo "# RTCONFIG_JFFS2ND_BACKUP is not set" >>$(1); fi; if [ "$(TEMPROOTFS)" = "y" ]; then sed -i "/RTCONFIG_TEMPROOTFS/d" $(1); echo "RTCONFIG_TEMPROOTFS=y" >>$(1); else sed -i "/RTCONFIG_TEMPROOTFS/d" $(1); echo "# RTCONFIG_TEMPROOTFS is not set" >>$(1); fi; if [ "$(ATEUSB3_FORCE)" = "y" ]; then sed -i "/RTCONFIG_ATEUSB3_FORCE/d" $(1); echo "RTCONFIG_ATEUSB3_FORCE=y" >>$(1); else sed -i "/RTCONFIG_ATEUSB3_FORCE/d" $(1); echo "# RTCONFIG_ATEUSB3_FORCE is not set" >>$(1); fi; if [ "$(JFFS2LOG)" = "y" ]; then sed -i "/RTCONFIG_JFFS2LOG/d" $(1); echo "RTCONFIG_JFFS2LOG=y" >>$(1); sed -i "/RTCONFIG_JFFS2USERICON/d" $(1); echo "RTCONFIG_JFFS2USERICON=y" >>$(1); else sed -i "/RTCONFIG_JFFS2LOG/d" $(1); echo "# RTCONFIG_JFFS2LOG is not set" >>$(1); if [ "$(UBIFS)" = "y" ]; then sed -i "/RTCONFIG_JFFS2USERICON/d" $(1); echo "RTCONFIG_JFFS2USERICON=y" >>$(1); else sed -i "/RTCONFIG_JFFS2USERICON/d" $(1); echo "# RTCONFIG_JFFS2USERICON is not set" >>$(1); fi; fi; if [ "$(WPSMULTIBAND)" = "y" ]; then sed -i "/RTCONFIG_WPSMULTIBAND/d" $(1); echo "RTCONFIG_WPSMULTIBAND=y" >>$(1); else sed -i "/RTCONFIG_WPSMULTIBAND/d" $(1); echo "# RTCONFIG_WPSMULTIBAND is not set" >>$(1); fi; if [ "$(RALINK_DFS)" = "y" ]; then sed -i "/RTCONFIG_RALINK_DFS/d" $(1); echo "RTCONFIG_RALINK_DFS=y" >>$(1); else sed -i "/RTCONFIG_RALINK_DFS/d" $(1); echo "# RTCONFIG_RALINK_DFS is not set" >>$(1); fi; if [ "$(EM)" = "y" ]; then sed -i "/RTCONFIG_ENGINEERING_MODE/d" $(1); echo "RTCONFIG_ENGINEERING_MODE=y" >>$(1); else sed -i "/RTCONFIG_ENGINEERING_MODE/d" $(1); echo "# RTCONFIG_ENGINEERING_MODE is not set" >>$(1); fi; if [ "$(VPNC)" = "y" ]; then sed -i "/RTCONFIG_VPNC/d" $(1); echo "RTCONFIG_VPNC=y" >>$(1); fi; if [ "$(KYIVSTAR)" = "y" ]; then sed -i "/RTCONFIG_KYIVSTAR/d" $(1); echo "RTCONFIG_KYIVSTAR=y" >>$(1); fi; if [ "$(TFTPSRV)" = "y" ]; then sed -i "/RTCONFIG_TFTP_SERVER/d" $(1); echo "RTCONFIG_TFTP_SERVER=y" >>$(1); fi; if [ "$(ETRON_XHCI)" = "y" ]; then sed -i "/RTCONFIG_ETRON_XHCI\>/d" $(1); echo "RTCONFIG_ETRON_XHCI=y" >>$(1); if [ "$(ETRON_XHCI_USB3_LED)" = "y" ]; then sed -i "/RTCONFIG_ETRON_XHCI_USB3_LED/d" $(1); echo "RTCONFIG_ETRON_XHCI_USB3_LED=y" >>$(1); else sed -i "/RTCONFIG_ETRON_XHCI_USB3_LED/d" $(1); echo "# RTCONFIG_ETRON_XHCI_USB3_LED is not set" >>$(1); fi; fi; if [ "$(WANPORT2)" = "y" ]; then sed -i "/RTCONFIG_WANPORT2/d" $(1); echo "RTCONFIG_WANPORT2=y" >>$(1); fi; if [ "$(MTWANCFG)" = "y" ]; then sed -i "/RTCONFIG_MULTIWAN_CFG/d" $(1); echo "RTCONFIG_MULTIWAN_CFG=y" >>$(1); fi; if [ "$(WPS_LED)" = "y" ]; then sed -i "/RTCONFIG_WPS_LED/d" $(1); echo "RTCONFIG_WPS_LED=y" >>$(1); fi; if [ "$(WANRED_LED)" = "y" ]; then sed -i "/RTCONFIG_WANRED_LED/d" $(1); echo "RTCONFIG_WANRED_LED=y" >>$(1); fi; if [ "$(PWRRED_LED)" = "y" ]; then sed -i "/RTCONFIG_PWRRED_LED/d" $(1); echo "RTCONFIG_PWRRED_LED=y" >>$(1); fi; if [ "$(FO_LED)" = "y" ]; then sed -i "/RTCONFIG_FAILOVER_LED/d" $(1); echo "RTCONFIG_FAILOVER_LED=y" >>$(1); fi; if [ "$(BLINK_LED)" = "y" ]; then sed -i "/RTCONFIG_BLINK_LED/d" $(1); echo "RTCONFIG_BLINK_LED=y" >>$(1); fi; if [ "$(EJUSB_BTN)" = "y" ]; then sed -i "/RTCONFIG_EJUSB_BTN/d" $(1); echo "RTCONFIG_EJUSB_BTN=y" >>$(1); fi; if [ "$(M2_SSD)" = "y" ]; then sed -i "/RTCONFIG_M2_SSD/d" $(1); echo "RTCONFIG_M2_SSD=y" >>$(1); fi; if [ "$(WIGIG)" = "y" ]; then sed -i "/RTCONFIG_WIGIG/d" $(1); echo "RTCONFIG_WIGIG=y" >>$(1); fi; if [ "$(ATF)" = "y" ]; then sed -i "/RTCONFIG_AIR_TIME_FAIRNESS/d" $(1); echo "RTCONFIG_AIR_TIME_FAIRNESS=y" >>$(1); fi; if [ "$(PWRSAVE)" = "y" ]; then sed -i "/RTCONFIG_POWER_SAVE/d" $(1); echo "RTCONFIG_POWER_SAVE=y" >>$(1); fi; if [ "$(CFE_NVRAM_CHK)" = "y" ]; then sed -i "/RTCONFIG_CFE_NVRAM_CHK/d" $(1); echo "RTCONFIG_CFE_NVRAM_CHK=y" >>$(1); fi; if [ "$(DEBUG)" = "y" ]; then sed -i "/RTCONFIG_DEBUG/d" $(1); echo "RTCONFIG_DEBUG=y" >>$(1); sed -i "/RTCONFIG_GDB/d" $(1); echo "RTCONFIG_GDB=y" >>$(1); fi; if [ "$(UIDEBUG)" = "y" ]; then sed -i "/RTCONFIG_UIDEBUG/d" $(1); echo "RTCONFIG_UIDEBUG=y" >>$(1); sed -i "/RTCONFIG_CIFS/d" $(1); echo "RTCONFIG_CIFS=y" >>$(1); sed -i "/RTCONFIG_AUTODICT/d" $(1); echo "# RTCONFIG_AUTODICT is not set" >>$(1); fi; if [ "$(ROG)" = "y" ]; then sed -i "/RTCONFIG_ROG/d" $(1); echo "RTCONFIG_ROG=y" >>$(1); fi; sed -i "/RTCONFIG_ROG_UI/d" $(1); if [ "$(ROG_UI)" = "y" ]; then echo "RTCONFIG_ROG_UI=y" >>$(1); sed -i "/RTCONFIG_OPEN_NAT/d" $(1); echo "RTCONFIG_OPEN_NAT=y" >>$(1); else echo "# RTCONFIG_ROG_UI is not set" >>$(1); fi; if [ "$(GEOIP)" = "y" ]; then sed -i "/RTCONFIG_GEOIP/d" $(1); echo "RTCONFIG_GEOIP=y" >>$(1); fi; if [ "$(GEOIP_EG)" = "y" ]; then sed -i "/RTCONFIG_GEOIP_EG/d" $(1); echo "RTCONFIG_GEOIP_EG=y" >>$(1); fi; if [ "$(TRANSMISSION)" = "y" ]; then sed -i "/RTCONFIG_TRANSMISSION/d" $(1); echo "RTCONFIG_TRANSMISSION=y" >>$(1); fi; if [ "$(SINGLE_2G)" = "y" ]; then sed -i "/RTCONFIG_HAS_5G\>/d" $(1); echo "# RTCONFIG_HAS_5G is not set" >>$(1); fi; if [ "$(HAS_5G_2)" = "y" ]; then sed -i "/RTCONFIG_HAS_5G_2\>/d" $(1); echo "RTCONFIG_HAS_5G_2=y" >>$(1); fi; if [ "$(TFTP)" = "y" ]; then sed -i "/RTCONFIG_TFTP\>/d" $(1); echo "RTCONFIG_TFTP=y" >>$(1); fi; if [ "$(QTN)" = "y" ]; then sed -i "/RTCONFIG_QTN/d" $(1); echo "RTCONFIG_QTN=y" >>$(1); fi; if [ "$(LACP)" = "y" ]; then sed -i "/RTCONFIG_LACP/d" $(1); echo "RTCONFIG_LACP=y" >>$(1); fi; if [ "$(BCM_RECVFILE)" = "y" ] && [ "$(HND_ROUTER)" != "y" ]; then sed -i "/RTCONFIG_RECVFILE/d" $(1); echo "RTCONFIG_RECVFILE=y" >>$(1); fi; if [ "$(RGMII_BRCM5301X)" = "y" ]; then sed -i "/RTCONFIG_RGMII_BRCM5301X/d" $(1); echo "RTCONFIG_RGMII_BRCM5301X=y" >>$(1); fi; if [ "$(WPS_DUALBAND)" = "y" ]; then sed -i "/RTCONFIG_WPS_DUALBAND/d" $(1); echo "RTCONFIG_WPS_DUALBAND=y" >>$(1); fi; if [ "$(WIFICLONE)" = "y" ]; then sed -i "/RTCONFIG_WPS_ENROLLEE/d" $(1); echo "RTCONFIG_WPS_ENROLLEE=y" >>$(1); sed -i "/RTCONFIG_WIFI_CLONE/d" $(1); echo "RTCONFIG_WIFI_CLONE=y" >>$(1); fi; if [ "$(N18UTXBF)" = "y" ]; then sed -i "/RTCONFIG_N18UTXBF/d" $(1); echo "RTCONFIG_N18UTXBF=y" >>$(1); fi; if [ "$(BWDPI)" = "y" ]; then sed -i "/RTCONFIG_BWDPI\>/d" $(1); echo "RTCONFIG_BWDPI=y" >>$(1); sed -i "/RTCONFIG_NOTIFICATION_CENTER/d" $(1); echo "RTCONFIG_NOTIFICATION_CENTER=y" >>$(1); fi; if [ "$(NOTIFICATION_CENTER)" = "y" ]; then sed -i "/RTCONFIG_NOTIFICATION_CENTER/d" $(1); echo "RTCONFIG_NOTIFICATION_CENTER=y" >>$(1); fi; if [ "$(PROTECTION_SERVER)" = "y" ]; then sed -i "/RTCONFIG_PROTECTION_SERVER/d" $(1); echo "RTCONFIG_PROTECTION_SERVER=y" >>$(1); fi; if [ "$(WLCEVENTD)" = "y" ] || [ "$(CONFIG_BCMWL5)" = "y" ]; then sed -i "/RTCONFIG_WLCEVENTD/d" $(1); echo "RTCONFIG_WLCEVENTD=y" >>$(1); fi; if [ "$(FBT)" = "y" ]; then sed -i "/RTCONFIG_FBT/d" $(1); echo "RTCONFIG_FBT=y" >>$(1); fi; if [ "$(HAPDEVENT)" = "y" ] || [ "$(CONFIG_LANTIQ)" = "y" ]; then sed -i "/RTCONFIG_HAPDEVENT/d" $(1); echo "RTCONFIG_HAPDEVENT=y" >>$(1); fi; if [ "$(TRAFFIC_LIMITER)" = "y" ]; then sed -i "/RTCONFIG_TRAFFIC_LIMITER/d" $(1); echo "RTCONFIG_TRAFFIC_LIMITER=y" >>$(1); sed -i "/RTCONFIG_NOTIFICATION_CENTER/d" $(1); echo "RTCONFIG_NOTIFICATION_CENTER=y" >>$(1); fi; if [ "$(BCM5301X_TRAFFIC_MONITOR)" = "y" ]; then sed -i "/RTCONFIG_BCM5301X_TRAFFIC_MONITOR/d" $(1); echo "RTCONFIG_BCM5301X_TRAFFIC_MONITOR=y" >>$(1); fi; if [ "$(SPEEDTEST)" = "y" ]; then sed -i "/RTCONFIG_SPEEDTEST/d" $(1); echo "RTCONFIG_SPEEDTEST=y" >>$(1); fi; if [ "$(FPROBE)" = "y" ]; then sed -i "/RTCONFIG_FPROBE/d" $(1); echo "RTCONFIG_FPROBE=y" >>$(1); fi; if [ "$(BCM_7114)" = "y" ]; then sed -i "/RTCONFIG_BCM_7114/d" $(1); echo "RTCONFIG_BCM_7114=y" >>$(1); sed -i "/RTCONFIG_BCMBSD/d" $(1); echo "RTCONFIG_BCMBSD=y" >>$(1); sed -i "/RTCONFIG_WLEXE/d" $(1); echo "RTCONFIG_WLEXE=y" >>$(1); fi; if [ "$(GMAC3)" = "y" ]; then sed -i "/RTCONFIG_GMAC3/d" $(1); echo "RTCONFIG_GMAC3=y" >>$(1); sed -i "/RTCONFIG_BCMFA/d" $(1); echo "# RTCONFIG_BCMFA is not set" >>$(1); fi; if [ "$(BCM9)" = "y" ]; then sed -i "/RTCONFIG_BCM9/d" $(1); echo "RTCONFIG_BCM9=y" >>$(1); sed -i "/RTCONFIG_WLEXE/d" $(1); echo "RTCONFIG_WLEXE=y" >>$(1); fi; if [ "$(BCM7)" = "y" ]; then sed -i "/RTCONFIG_BCM7/d" $(1); echo "RTCONFIG_BCM7=y" >>$(1); sed -i "/RTCONFIG_TOAD/d" $(1); echo "RTCONFIG_TOAD=y" >>$(1); sed -i "/RTCONFIG_BCMBSD/d" $(1); echo "RTCONFIG_BCMBSD=y" >>$(1); sed -i "/RTCONFIG_GMAC3/d" $(1); echo "# RTCONFIG_GMAC3 is not set" >>$(1); fi; if [ "$(HND_ROUTER)" = "y" ]; then sed -i "/RTCONFIG_HND_ROUTER/d" $(1); echo "RTCONFIG_HND_ROUTER=y" >>$(1); sed -i "/RTCONFIG_HND_ROUTER_AX/d" $(1); echo "# RTCONFIG_HND_ROUTER_AX is not set" >>$(1); sed -i "/RTCONFIG_EMF/d" $(1); echo "RTCONFIG_EMF=y" >>$(1); sed -i "/RTCONFIG_BCMBSD/d" $(1); echo "RTCONFIG_BCMBSD=y" >>$(1); sed -i "/RTCONFIG_LBR_AGGR/d" $(1); echo "RTCONFIG_LBR_AGGR=y" >>$(1); sed -i "/RTCONFIG_WLEXE/d" $(1); echo "RTCONFIG_WLEXE=y" >>$(1); sed -i "/RTCONFIG_VISUALIZATION/d" $(1); if [ "$(VISUALIZATION)" = "y" ]; then echo "RTCONFIG_VISUALIZATION=y" >>$(1); else echo "# RTCONFIG_VISUALIZATION is not set" >>$(1); fi; if [ "$(DFS_US)" = "y" ]; then echo "RTCONFIG_DFS_US=y" >>$(1); else echo "# RTCONFIG_DFS_US is not set" >>$(1); fi; fi; if [ "$(HND_ROUTER_AX)" = "y" ]; then sed -i "/RTCONFIG_HND_ROUTER_AX/d" $(1); echo "RTCONFIG_HND_ROUTER_AX=y" >>$(1); sed -i "/RTCONFIG_BCM_CEVENTD/d" $(1); if [ "$(BCM_CEVENTD)" = "y" ]; then echo "RTCONFIG_BCM_CEVENTD=y" >>$(1); else echo "# RTCONFIG_BCM_CEVENTD is not set" >>$(1); fi; sed -i "/RTCONFIG_HND_WL/d" $(1); if [ "$(HND_WL)" = "y" ]; then echo "RTCONFIG_HND_WL=y" >>$(1); else echo "# RTCONFIG_HND_WL is not set" >>$(1); fi; fi; sed -i "/RTCONFIG_HND_ROUTER_AX_675X/d" $(1); sed -i "/RTCONFIG_SDK502L07P1_121_37/d" $(1); if [ "$(HND_ROUTER_AX_675X)" = "y" ]; then echo "RTCONFIG_HND_ROUTER_AX_675X=y" >>$(1); if [ "$(SDK502L07P1_121_37)" = "y" ]; then echo "RTCONFIG_SDK502L07P1_121_37=y" >>$(1); else echo "# RTCONFIG_SDK502L07P1_121_37 is not set" >>$(1); fi; else echo "# RTCONFIG_HND_ROUTER_AX_675X is not set" >>$(1); echo "# RTCONFIG_SDK502L07P1_121_37 is not set" >>$(1); fi; sed -i "/RTCONFIG_HND_ROUTER_AX_6756/d" $(1); sed -i "/RTCONFIG_SDK504L02_188_1303/d" $(1); if [ "$(HND_ROUTER_AX_6756)" = "y" ]; then echo "RTCONFIG_HND_ROUTER_AX_6756=y" >>$(1); if [ "$(SDK504L02_188_1303)" = "y" ]; then echo "RTCONFIG_SDK504L02_188_1303=y" >>$(1); else echo "# RTCONFIG_SDK504L02_188_1303 is not set" >>$(1); fi; else echo "# RTCONFIG_HND_ROUTER_AX_6756 is not set" >>$(1); echo "# RTCONFIG_SDK504L02_188_1303 is not set" >>$(1); fi; sed -i "/RTCONFIG_HND_ROUTER_AX_6710/d" $(1); if [ "$(HND_ROUTER_AX_6710)" = "y" ]; then echo "RTCONFIG_HND_ROUTER_AX_6710=y" >>$(1); else echo "# RTCONFIG_HND_ROUTER_AX_6710 is not set" >>$(1); fi; if [ "$(HND_ROUTER_F1)" = "y" ]; then sed -i "/RTCONFIG_WBD/d" $(1); echo "RTCONFIG_WBD=y" >>$(1); fi; if [ "$(BUILD_BCM7)" = "y" ]; then sed -i "/RTCONFIG_BUILDBCM7/d" $(1); echo "RTCONFIG_BUILDBCM7=y" >>$(1); fi; if [ "$(DHDAP)" = "y" ]; then sed -i "/RTCONFIG_DHDAP/d" $(1); echo "RTCONFIG_DHDAP=y" >>$(1); if [ "$(BW160M)" = "y" ]; then echo "RTCONFIG_BW160M=y" >>$(1); else echo "# RTCONFIG_BW160M is not set" >>$(1); fi; fi; if [ "$(DPSTA)" = "y" ]; then sed -i "/RTCONFIG_DPSTA/d" $(1); echo "RTCONFIG_DPSTA=y" >>$(1); else sed -i "/RTCONFIG_DPSTA/d" $(1); echo "# RTCONFIG_DPSTA is not set" >>$(1); fi; sed -i "/RTCONFIG_DPSR/d" $(1); if [ "$(DPSR)" = "y" ]; then echo "RTCONFIG_DPSR=y" >>$(1); else echo "# RTCONFIG_DPSR is not set" >>$(1); fi; if [ "$(ROMCFE)" = "y" ]; then sed -i "/RTCONFIG_ROMCFE/d" $(1); echo "RTCONFIG_ROMCFE=y" >>$(1); fi; if [ "$(ROMCCODE)" = "y" ]; then sed -i "/RTCONFIG_ROMATECCODEFIX/d" $(1); echo "RTCONFIG_ROMATECCODEFIX=y" >>$(1); fi; if [ "$(SSD)" = "y" ]; then sed -i "/RTCONFIG_BCMSSD/d" $(1); echo "RTCONFIG_BCMSSD=y" >>$(1); fi; if [ "$(HSPOT)" = "y" ]; then sed -i "/RTCONFIG_HSPOT/d" $(1); echo "RTCONFIG_HSPOT=y" >>$(1); fi; if [ "$(NVSIZE)" != "" ]; then sed -i "/RTCONFIG_NV$(NVSIZE)/d" $(1); echo "RTCONFIG_NV$(NVSIZE)=y" >>$(1); fi; if [ "$(RALINK)" = "y" ] || [ "$(QCA)" = "y" ]; then if [ "$(NVRAM_SIZE)" != "" ]; then sed -i "/RTCONFIG_NVRAM_SIZE/d" $(1); echo "RTCONFIG_NVRAM_SIZE=`printf 0x%x $(NVRAM_SIZE)`" >>$(1); fi; fi; if [ "$(BONDING_WAN)" = "y" ]; then sed -i "/RTCONFIG_BONDING_WAN/d" $(1); echo "RTCONFIG_BONDING_WAN=y" >>$(1); fi; if [ "$(BONDING)" = "y" ]; then sed -i "RTCONFIG_BONDING\b/d" $(1); echo "RTCONFIG_BONDING=y" >>$(1); fi; if [ "$(WIFILOGO)" = "y" ]; then sed -i "/RTCONFIG_WIFILOGO/d" $(1); echo "RTCONFIG_WIFILOGO=y" >>$(1); fi; if [ "$(JFFS2USERICON)" = "y" ]; then sed -i "/RTCONFIG_JFFS2USERICON/d" $(1); echo "RTCONFIG_JFFS2USERICON=y" >>$(1); fi; if [ "$(SWITCH2)" = "RTL8365MB" ]; then sed -i "/RTCONFIG_EXT_RTL8365MB/d" $(1); echo "RTCONFIG_EXT_RTL8365MB=y" >>$(1); sed -i "/RTCONFIG_EXT_RTL8370MB/d" $(1); echo "# RTCONFIG_EXT_RTL8370MB is not set" >>$(1); sed -i "/RTCONFIG_EXT_BCM53134/d" $(1); echo "# RTCONFIG_EXT_BCM53134 is not set" >>$(1); elif [ "$(SWITCH2)" = "RTL8370MB" ]; then sed -i "/RTCONFIG_EXT_RTL8365MB/d" $(1); echo "# RTCONFIG_EXT_RTL8365MB is not set" >>$(1); sed -i "/RTCONFIG_EXT_RTL8370MB/d" $(1); echo "RTCONFIG_EXT_RTL8370MB=y" >>$(1); sed -i "/RTCONFIG_EXT_BCM53134/d" $(1); echo "# RTCONFIG_EXT_BCM53134 is not set" >>$(1); elif [ "$(SWITCH2)" = "BCM53134" ]; then sed -i "/RTCONFIG_EXT_RTL8365MB/d" $(1); echo "# RTCONFIG_EXT_RTL8365MB is not set" >>$(1); sed -i "/RTCONFIG_EXT_RTL8370MB/d" $(1); echo "# RTCONFIG_EXT_RTL8370MB is not set" >>$(1); sed -i "/RTCONFIG_EXT_BCM53134/d" $(1); echo "RTCONFIG_EXT_BCM53134=y" >>$(1); elif [ "$(SWITCH2)" = "" ]; then sed -i "/RTCONFIG_EXT_RTL8365MB/d" $(1); echo "# RTCONFIG_EXT_RTL8365MB is not set" >>$(1); sed -i "/RTCONFIG_EXT_RTL8370MB/d" $(1); echo "# RTCONFIG_EXT_RTL8370MB is not set" >>$(1); sed -i "/RTCONFIG_EXT_BCM53134/d" $(1); echo "# RTCONFIG_EXT_BCM53134 is not set" >>$(1); fi; if [ "$(EXT_PHY)" = "BCM84880" ]; then sed -i "/RTCONFIG_EXTPHY_BCM84880/d" $(1); echo "RTCONFIG_EXTPHY_BCM84880=y" >>$(1); fi; if [ "$(CRASHLOG)" = "y" ]; then sed -i "/RTCONFIG_BCM_HND_CRASHLOG/d" $(1); echo "RTCONFIG_BCM_HND_CRASHLOG=y" >>$(1); fi; if [ "$(TOR)" = "y" ]; then sed -i "/RTCONFIG_TOR/d" $(1); echo "RTCONFIG_TOR=y" >>$(1); fi; if [ "$(CFEZ)" = "y" ]; then sed -i "/RTCONFIG_CFEZ/d" $(1); echo "RTCONFIG_CFEZ=y" >>$(1); fi; if [ "$(TR069)" = "y" ]; then sed -i "/RTCONFIG_TR069/d" $(1); echo "RTCONFIG_TR069=y" >>$(1); fi; if [ "$(TR181)" = "y" ]; then sed -i "/RTCONFIG_TR181/d" $(1); echo "RTCONFIG_TR181=y" >>$(1); fi; if [ "$(TR143_110)" = "y" ]; then sed -i "/RTCONFIG_TR143_110/d" $(1); echo "RTCONFIG_TR143_110=y" >>$(1); fi; if [ "$(TR_ISP)" = "OPTUS" ]; then sed -i "/RTCONFIG_ISP_OPTUS/d" $(1); echo "RTCONFIG_ISP_OPTUS=y" >>$(1); sed -i "/RTCONFIG_TR143_110/d" $(1); echo "RTCONFIG_TR143_110=y" >>$(1); fi; if [ "$(STAINFO)" = "y" ]; then sed -i "/RTCONFIG_STAINFO/d" $(1); echo "RTCONFIG_STAINFO=y" >>$(1); fi; if [ "$(CLOUDCHECK)" = "y" ]; then sed -i "/RTCONFIG_CLOUDCHECK/d" $(1); echo "RTCONFIG_CLOUDCHECK=y" >>$(1); fi; if [ "$(GETREALIP)" = "y" ]; then sed -i "/RTCONFIG_GETREALIP/d" $(1); echo "RTCONFIG_GETREALIP=y" >>$(1); fi; if [ "$(BCM_MMC)" = "y" ]; then sed -i "/RTCONFIG_MMC_LED/d" $(1); echo "RTCONFIG_MMC_LED=y" >>$(1); fi; if [ "$(NATNL)" = "y" ]; then sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "RTCONFIG_TUNNEL=y" >>$(1); else sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "# RTCONFIG_TUNNEL is not set" >>$(1); fi; if [ "$(UPLOADER)" = "y" ]; then sed -i "/RTCONFIG_UPLOADER/d" $(1); echo "RTCONFIG_UPLOADER=y" >>$(1); fi; if [ "$(NATNL_AICLOUD)" = "y" ]; then sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "RTCONFIG_TUNNEL=y" >>$(1); sed -i "/RTCONFIG_AICLOUD_TUNNEL/d" $(1); echo "RTCONFIG_AICLOUD_TUNNEL=y" >>$(1); else sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "# RTCONFIG_TUNNEL is not set" >>$(1); sed -i "/RTCONFIG_AICLOUD_TUNNEL/d" $(1); echo "# RTCONFIG_AICLOUD_TUNNEL is not set" >>$(1); fi; if [ "$(NATNL_AIHOME)" = "y" ]; then sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "RTCONFIG_TUNNEL=y" >>$(1); sed -i "/RTCONFIG_AIHOME_TUNNEL/d" $(1); echo "RTCONFIG_AIHOME_TUNNEL=y" >>$(1); else sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "# RTCONFIG_TUNNEL is not set" >>$(1); sed -i "/RTCONFIG_AIHOME_TUNNEL/d" $(1); echo "# RTCONFIG_AIHOME_TUNNEL is not set" >>$(1); fi; if [ "$(ERPTEST)" = "y" ]; then sed -i "/RTCONFIG_ERP_TEST/d" $(1); echo "RTCONFIG_ERP_TEST=y" >>$(1); fi; if [ "$(RESET_SWITCH)" = "y" ]; then sed -i "/RTCONFIG_RESET_SWITCH/d" $(1); echo "RTCONFIG_RESET_SWITCH=y" >>$(1); fi; if [ "$(DEF_AP)" = "y" ]; then sed -i "/RTCONFIG_DEFAULT_AP_MODE/d" $(1); echo "RTCONFIG_DEFAULT_AP_MODE=y" >>$(1); fi; if [ "$(DEF_REPEATER)" = "y" ]; then sed -i "/RTCONFIG_DEFAULT_REPEATER_MODE/d" $(1); echo "RTCONFIG_DEFAULT_REPEATER_MODE=y" >>$(1); fi; if [ "$(DHCP_OVERRIDE)" = "y" ]; then sed -i "/RTCONFIG_DHCP_OVERRIDE/d" $(1); echo "RTCONFIG_DHCP_OVERRIDE=y" >>$(1); fi; if [ "$(RES_GUI)" = "y" ]; then sed -i "/RTCONFIG_RESTRICT_GUI/d" $(1); echo "RTCONFIG_RESTRICT_GUI=y" >>$(1); fi; if [ "$(KEY_GUARD)" = "y" ]; then sed -i "/RTCONFIG_KEY_GUARD/d" $(1); echo "RTCONFIG_KEY_GUARD=y" >>$(1); fi; if [ "$(WTFAST)" = "y" ]; then sed -i "/RTCONFIG_WTFAST/d" $(1); echo "RTCONFIG_WTFAST=y" >>$(1); fi; if [ "$(IFTTT)" = "y" ]; then sed -i "/RTCONFIG_IFTTT/d" $(1); echo "RTCONFIG_IFTTT=y" >>$(1); sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "RTCONFIG_TUNNEL=y" >>$(1); sed -i "/RTCONFIG_AIHOME_TUNNEL/d" $(1); echo "RTCONFIG_AIHOME_TUNNEL=y" >>$(1); fi; if [ "$(ALEXA)" = "y" ]; then sed -i "/RTCONFIG_ALEXA/d" $(1); echo "RTCONFIG_ALEXA=y" >>$(1); sed -i "/RTCONFIG_TUNNEL/d" $(1); echo "RTCONFIG_TUNNEL=y" >>$(1); sed -i "/RTCONFIG_AIHOME_TUNNEL/d" $(1); echo "RTCONFIG_AIHOME_TUNNEL=y" >>$(1); sed -i "/RTCONFIG_INTERNETCTRL/d" $(1); echo " 
RTCONFIG_INTERNETCTRL=y" >>$(1); fi; if [ "$(UTF8_SSID)" = "y" ]; then sed -i "/RTCONFIG_UTF8_SSID/d" $(1); echo "RTCONFIG_UTF8_SSID=y" >>$(1); fi; if [ "$(REBOOT_SCHEDULE)" = "y" ]; then sed -i "/RTCONFIG_REBOOT_SCHEDULE/d" $(1); echo "RTCONFIG_REBOOT_SCHEDULE=y" >>$(1); fi; if [ "$(CAPTIVE_PORTAL)" = "y" ]; then sed -i "/RTCONFIG_CAPTIVE_PORTAL/d" $(1); echo "RTCONFIG_CAPTIVE_PORTAL=y" >>$(1); sed -i "/RTCONFIG_COOVACHILLI/d" $(1); echo "RTCONFIG_COOVACHILLI=y" >>$(1); sed -i "/RTCONFIG_FREERADIUS/d" $(1); echo "RTCONFIG_FREERADIUS=y" >>$(1); if [ "$(CP_FREEWIFI)" = "y" ]; then sed -i "/RTCONFIG_CP_FREEWIFI/d" $(1); echo "RTCONFIG_CP_FREEWIFI=y" >>$(1); else sed -i "/RTCONFIG_CP_FREEWIFI/d" $(1); echo "# RTCONFIG_CP_FREEWIFI is not set" >>$(1); fi; if [ "$(CP_ADVANCED)" = "y" ]; then sed -i "/RTCONFIG_CP_ADVANCED/d" $(1); echo "RTCONFIG_CP_ADVANCED=y" >>$(1); else sed -i "/RTCONFIG_CP_ADVANCED/d" $(1); echo "# RTCONFIG_CP_ADVANCED is not set" >>$(1); fi; else if [ "$(CHILLISPOT)" = "y" ]; then sed -i "/RTCONFIG_CHILLISPOT/d" $(1); echo "RTCONFIG_CHILLISPOT=y" >>$(1); fi; if [ "$(FREERADIUS)" = "y" ]; then sed -i "/RTCONFIG_FREERADIUS/d" $(1); echo "RTCONFIG_FREERADIUS=y" >>$(1); fi; fi; if [ "$(FBWIFI)" = "y" ]; then sed -i "/RTCONFIG_FBWIFI/d" $(1); echo "RTCONFIG_FBWIFI=y" >>$(1); fi; if [ "$(FORCE_AUTO_UPGRADE)" = "y" ]; then sed -i "/RTCONFIG_FORCE_AUTO_UPGRADE/d" $(1); echo "RTCONFIG_FORCE_AUTO_UPGRADE=y" >>$(1); fi; if [ "$(TUXERA_SMBD)" = "y" ]; then sed -i "/RTCONFIG_TUXERA_SMBD/d" $(1); echo "RTCONFIG_TUXERA_SMBD=y" >>$(1); fi; if [ "$(QUAGGA)" = "y" ]; then sed -i "/RTCONFIG_QUAGGA/d" $(1); echo "RTCONFIG_QUAGGA=y" >>$(1); fi; if [ "$(ASPMD)" = "y" ]; then sed -i "/RTCONFIG_BCMASPMD/d" $(1); echo "RTCONFIG_BCMASPMD=y" >>$(1); fi; if [ "$(BCMEVENTD)" = "y" ]; then sed -i "/RTCONFIG_BCMEVENTD/d" $(1); echo "RTCONFIG_BCMEVENTD=y" >>$(1); fi; if [ "$(BCM_MEVENT)" = "y" ]; then sed -i "/RTCONFIG_BCM_MEVENT/d" $(1); echo "RTCONFIG_BCM_MEVENT=y" >>$(1); fi; if [ "$(BCM_APPEVENTD)" = "y" ]; then sed -i "/RTCONFIG_BCM_APPEVENTD/d" $(1); echo "RTCONFIG_BCM_APPEVENTD=y" >>$(1); fi; if [ "$(WLCLMLOAD)" = "y" ]; then sed -i "/RTCONFIG_WLCLMLOAD/d" $(1); echo "RTCONFIG_WLCLMLOAD=y" >>$(1); fi; if [ "$(BCM_MUMIMO)" = "y" ] || [ "$(MTK_MUMIMO)" = "y" ]; then sed -i "/RTCONFIG_MUMIMO/d" $(1); echo "RTCONFIG_MUMIMO=y" >>$(1); fi; if [ "$(MUMIMO_5G)" = "y" ]; then sed -i "/RTCONFIG_MUMIMO_5G/d" $(1); echo "RTCONFIG_MUMIMO_5G=y" >>$(1); else sed -i "/RTCONFIG_MUMIMO_5G/d" $(1); echo "# RTCONFIG_MUMIMO_5G is not set" >>$(1); fi; if [ "$(MUMIMO_2G)" = "y" ]; then sed -i "/RTCONFIG_MUMIMO_2G/d" $(1); echo "RTCONFIG_MUMIMO_2G=y" >>$(1); else sed -i "/RTCONFIG_MUMIMO_2G/d" $(1); echo "# RTCONFIG_MUMIMO_2G is not set" >>$(1); fi; if [ "$(QAM256_2G)" = "y" ]; then sed -i "/RTCONFIG_QAM256_2G/d" $(1); echo "RTCONFIG_QAM256_2G=y" >>$(1); else sed -i "/RTCONFIG_QAM256_2G/d" $(1); echo "# RTCONFIG_QAM256_2G is not set" >>$(1); fi; if [ "$(QAM1024_5G)" = "y" ]; then sed -i "/RTCONFIG_QAM1024_5G/d" $(1); echo "RTCONFIG_QAM1024_5G=y" >>$(1); else sed -i "/RTCONFIG_QAM1024_5G/d" $(1); echo "# RTCONFIG_QAM1024_5G is not set" >>$(1); fi; if [ "$(MULTICASTIPTV)" = "y" ]; then sed -i "/RTCONFIG_MULTICAST_IPTV/d" $(1); echo "RTCONFIG_MULTICAST_IPTV=y" >>$(1); fi; if [ "$(VLAN)" = "y" ]; then sed -i "/RTCONFIG_PORT_BASED_VLAN/d" $(1); echo "RTCONFIG_PORT_BASED_VLAN=y" >>$(1); fi; if [ "$(VLAN_TAGGED_BASE)" = "y" ]; then sed -i "/RTCONFIG_TAGGED_BASED_VLAN/d" $(1); echo "RTCONFIG_TAGGED_BASED_VLAN=y" >>$(1); fi; if [ "$(MTK_NAND)" = "y" ]; then sed -i "/RTCONFIG_MTK_NAND/d" $(1); echo "RTCONFIG_MTK_NAND=y" >>$(1); else sed -i "/RTCONFIG_MTK_NAND/d" $(1); echo "# RTCONFIG_MTK_NAND is not set" >>$(1); fi; if [ "$(MTK_NAND_BLOCK2)" = "y" ]; then sed -i "/RTCONFIG_MTK_NAND_BLOCK2/d" $(1); echo "RTCONFIG_MTK_NAND_BLOCK2=y" >>$(1); else sed -i "/RTCONFIG_MTK_NAND_BLOCK2/d" $(1); echo "# RTCONFIG_MTK_NAND_BLOCK2 is not set" >>$(1); fi; if [ "$(DISABLE_NETWORKMAP)" = "y" ]; then sed -i "/RTCONFIG_DISABLE_NETWORKMAP/d" $(1); echo "RTCONFIG_DISABLE_NETWORKMAP=y" >>$(1); else sed -i "/RTCONFIG_DISABLE_NETWORKMAP/d" $(1); echo "# RTCONFIG_DISABLE_NETWORKMAP is not set" >>$(1); fi; if [ "$(WAN_AT_P4)" = "y" ]; then sed -i "/RTCONFIG_WAN_AT_P4/d" $(1); echo "RTCONFIG_WAN_AT_P4=y" >>$(1); else sed -i "/RTCONFIG_WAN_AT_P4/d" $(1); echo "# RTCONFIG_WAN_AT_P4 is not set" >>$(1); fi; if [ "$(MTK_REP)" = "y" ]; then sed -i "/RTCONFIG_MTK_REP/d" $(1); echo "RTCONFIG_MTK_REP=y" >>$(1); else sed -i "/RTCONFIG_MTK_REP/d" $(1); echo "# RTCONFIG_MTK_REP is not set" >>$(1); fi; if [ "$(ATED122)" = "y" ]; then sed -i "/RTCONFIG_ATED122/d" $(1); echo "RTCONFIG_ATED122=y" >>$(1); else sed -i "/RTCONFIG_ATED122/d" $(1); echo "# RTCONFIG_ATED122 is not set" >>$(1); fi; if [ "$(EDCCA_NEW)" = "y" ]; then sed -i "/RTCONFIG_RALINK_EDCCA/d" $(1); echo "RTCONFIG_RALINK_EDCCA=y" >>$(1); fi; if [ "$(RT3883)" = "y" ]; then sed -i "/RTCONFIG_RALINK_RT3883/d" $(1); echo "RTCONFIG_RALINK_RT3883=y" >>$(1); fi; if [ "$(RT3052)" = "y" ]; then sed -i "/RTCONFIG_RALINK_RT3052/d" $(1); echo "RTCONFIG_RALINK_RT3052=y" >>$(1); fi; if [ "$(NOIPTV)" = "y" ]; then sed -i "/RTCONFIG_NOIPTV/d" $(1); echo "RTCONFIG_NOIPTV=y" >>$(1); fi; if [ "$(ATCOVER)" = "y" ]; then sed -i "/RTCONFIG_AUTOCOVER_SIP/d" $(1); echo "RTCONFIG_AUTOCOVER_SIP=y" >>$(1); fi; if [ "$(LAN50)" = "y" ]; then sed -i "/RTCONFIG_DEFLAN50/d" $(1); echo "RTCONFIG_DEFLAN50=y" >>$(1); sed -i "/RTCONFIG_ALL_DEF_LAN50/d" $(1); echo "# RTCONFIG_ALL_DEF_LAN50 is not set" >>$(1); elif [ "$(LAN50)" = "all" ] ; then sed -i "/RTCONFIG_DEFLAN50/d" $(1); echo "# RTCONFIG_DEFLAN50 is not set" >>$(1); sed -i "/RTCONFIG_ALL_DEF_LAN50/d" $(1); echo "RTCONFIG_ALL_DEF_LAN50=y" >>$(1); else sed -i "/RTCONFIG_DEFLAN50/d" $(1); echo "# RTCONFIG_DEFLAN50 is not set" >>$(1); sed -i "/RTCONFIG_ALL_DEF_LAN50/d" $(1); echo "# RTCONFIG_ALL_DEF_LAN50 is not set" >>$(1); fi; if [ "$(PERMISSION_MANAGEMENT)" = "y" ]; then sed -i "/RTCONFIG_PERMISSION_MANAGEMENT/d" $(1); echo "RTCONFIG_PERMISSION_MANAGEMENT=y" >>$(1); fi; if [ "$(DETWAN)" = "y" ]; then sed -i "/RTCONFIG_DETWAN/d" $(1); echo "RTCONFIG_DETWAN=y" >>$(1); fi; if [ "$(CFGSYNC)" = "y" ]; then sed -i "/RTCONFIG_CFGSYNC/d" $(1); echo "RTCONFIG_CFGSYNC=y" >>$(1); if [ "$(MASTER_DET)" = "y" ]; then sed -i "/RTCONFIG_MASTER_DET/d" $(1); echo "RTCONFIG_MASTER_DET=y" >>$(1); fi; fi; if [ "$(LP5523)" = "y" ]; then sed -i "/RTCONFIG_LP5523/d" $(1); echo "RTCONFIG_LP5523=y" >>$(1); fi; if [ "$(RALINK)" = "y" -o "$(QCA)" = "y" ]; then sed -i "/CONFIG_LIBBCM/d" $(1); echo "# CONFIG_LIBBCM is not set" >>$(1); fi; if [ "$(WEBMON)" = "y" ]; then sed -i "/RTCONFIG_WEBMON/d" $(1); echo "RTCONFIG_WEBMON=y" >>$(1); fi; if [ "$(BACKUP_LOG)" = "y" ]; then sed -i "/RTCONFIG_BACKUP_LOG/d" $(1); echo "RTCONFIG_BACKUP_LOG=y" >>$(1); sed -i "/RTCONFIG_NOTIFICATION_CENTER/d" $(1); echo "RTCONFIG_NOTIFICATION_CENTER=y" >>$(1); fi; if [ "$(LETSENCRYPT)" = "y" ]; then sed -i "/RTCONFIG_LETSENCRYPT/d" $(1); echo "RTCONFIG_LETSENCRYPT=y" >>$(1); fi; if [ "$(WLCSCAN_RSSI)" = "y" ]; then sed -i "/RTCONFIG_WLCSCAN_RSSI/d" $(1); echo "RTCONFIG_WLCSCAN_RSSI=y" >>$(1); else echo "# RTCONFIG_WLCSCAN_RSSI is not set" >>$(1); fi; if [ "$(BT_CONN)" != "" ]; then sed -i "/RTCONFIG_BT_CONN/d" $(1); echo "RTCONFIG_BT_CONN=y" >>$(1); if [ "$(BT_CONN)" = "UART" ]; then echo "# RTCONFIG_BT_CONN_USB is not set" >>$(1); sed -i "/RTCONFIG_BT_CONN_UART/d" $(1); echo "RTCONFIG_BT_CONN_UART=y" >>$(1); else sed -i "/RTCONFIG_BT_CONN_USB/d" $(1); echo "RTCONFIG_BT_CONN_USB=y" >>$(1); echo "# RTCONFIG_BT_CONN_UART is not set" >>$(1); fi; if [ "$(CSR8811)" = "y" ]; then sed -i "/RTCONFIG_CSR8811/d" $(1); echo "RTCONFIG_CSR8811=y" >>$(1); fi; fi; if [ "$(SINGLE_SSID)" = "y" ]; then sed -i "/RTCONFIG_SINGLE_SSID/d" $(1); echo "RTCONFIG_SINGLE_SSID=y" >>$(1); fi; if [ "$(SSID_AMAPS)" = "y" ]; then sed -i "/RTCONFIG_SSID_AMAPS/d" $(1); echo "RTCONFIG_SSID_AMAPS=y" >>$(1); fi; if [ "$(QCA)" = "y" ]; then if [ "$(MESH)" = "y" ]; then sed -i "/RTCONFIG_WIFI_SON/d" $(1); echo "RTCONFIG_WIFI_SON=y" >>$(1); if [ "$(ETHBACKHAUL)" = "y" ]; then sed -i "/RTCONFIG_ETHBACKHAUL/d" $(1); echo "RTCONFIG_ETHBACKHAUL=y" >>$(1); fi; if [ "$(DUAL_BACKHAUL)" = "y" ]; then sed -i "/RTCONFIG_DUAL_BACKHAUL/d" $(1); echo "RTCONFIG_DUAL_BACKHAUL=y" >>$(1); fi; fi; if [ "$(HIDDEN_BACKHAUL)" = "y" ]; then sed -i "/RTCONFIG_HIDDEN_BACKHAUL/d" $(1); echo "RTCONFIG_HIDDEN_BACKHAUL=y" >>$(1); fi; if [ "$(CFG80211)" = "y" ]; then sed -i "/RTCONFIG_CFG80211/d" $(1); echo "RTCONFIG_CFG80211=y" >>$(1); fi; if [ "$(QCA_LBD)" = "y" ]; then sed -i "/RTCONFIG_QCA_LBD/d" $(1); echo "RTCONFIG_QCA_LBD=y" >>$(1); fi; if [ "$(QCA_MCSD)" = "y" ]; then sed -i "/RTCONFIG_QCA_MCSD\>/d" $(1); echo "RTCONFIG_QCA_MCSD=y" >>$(1); fi; fi; if [ "$(AUTHSUPP)" = "y" ]; then sed -i "/RTCONFIG_AUTHSUPP/d" $(1); echo "RTCONFIG_AUTHSUPP=y" >>$(1); fi; if [ "$(VPN_FUSION)" = "y" ]; then sed -i "/RTCONFIG_VPN_FUSION/d" $(1); echo "RTCONFIG_VPN_FUSION=y" >>$(1); sed -i "/RTCONFIG_TPVPN/d" $(1); echo "RTCONFIG_TPVPN=y" >>$(1); fi; if [ "$(TPVPN)" = "y" ]; then sed -i "/RTCONFIG_TPVPN/d" $(1); echo "RTCONFIG_TPVPN=y" >>$(1); fi; if [ "$(MTK_8021X3000)" = "y" ]; then sed -i "/RTCONFIG_MTK_8021X3000/d" $(1); echo "RTCONFIG_MTK_8021X3000=y" >>$(1); fi; if [ "$(MTK_8021XD3000)" = "y" ]; then sed -i "/RTCONFIG_MTK_8021XD3000/d" $(1); echo "RTCONFIG_MTK_8021XD3000=y" >>$(1); fi; if [ "$(DBG_BLUECAVE_OBD)" = "y" ]; then sed -i "/RTCONFIG_DBG_BLUECAVE_OBD/d" $(1); echo "RTCONFIG_DBG_BLUECAVE_OBD=y" >>$(1); fi; if [ "$(RTL8221VB)" = "y" ]; then sed -i "/RTCONFIG_RTL8221VB/d" $(1); echo "RTCONFIG_RTL8221VB=y" >>$(1); fi; if [ "$(AMAS)" = "y" ]; then sed -i "/RTCONFIG_AMAS/d" $(1); echo "RTCONFIG_AMAS=y" >>$(1); sed -i "/RTCONFIG_DBLOG/d" $(1); echo "RTCONFIG_DBLOG=y" >>$(1); sed -i "/RTCONFIG_CFGSYNC/d" $(1); echo "RTCONFIG_CFGSYNC=y" >>$(1); sed -i "/RTCONFIG_CFGSYNC_LOCSYNC/d" $(1); if [ "$(CFGSYNC_LOCSYNC)" = "y" ]; then echo "RTCONFIG_CFGSYNC_LOCSYNC=y" >>$(1); else echo "# RTCONFIG_CFGSYNC_LOCSYNC is not set" >>$(1); fi; sed -i "/RTCONFIG_MASTER_DET/d" $(1); echo "RTCONFIG_MASTER_DET=y" >>$(1); sed -i "/RTCONFIG_ADV_RAST/d" $(1); echo "RTCONFIG_ADV_RAST=y" >>$(1); if [ "$(INFO_EXAP)" = "y" ]; then sed -i "/RTCONFIG_CONN_EVENT_TO_EX_AP/d" $(1); echo "RTCONFIG_CONN_EVENT_TO_EX_AP=y" >>$(1); fi; if [ "$(LANTIQ)" = "y" ]; then sed -i "/RTCONFIG_HAPDEVENT/d" $(1); echo "RTCONFIG_HAPDEVENT=y" >>$(1); sed -i "/RTCONFIG_WPS_ENROLLEE/d" $(1); echo "RTCONFIG_WPS_ENROLLEE=y" >>$(1); elif [ "$(QCA)" = "y" ]; then sed -i "/RTCONFIG_PTHSAFE_POPEN/d" $(1); echo "RTCONFIG_PTHSAFE_POPEN=y" >>$(1); sed -i "/RTCONFIG_HAPDEVENT/d" $(1); echo "RTCONFIG_HAPDEVENT=y" >>$(1); sed -i "/RTCONFIG_WPS_ENROLLEE/d" $(1); echo "RTCONFIG_WPS_ENROLLEE=y" >>$(1); elif [ "$(RALINK)" = "y" ]; then sed -i "/RTCONFIG_WLCEVENTD/d" $(1); echo "RTCONFIG_WLCEVENTD=y" >>$(1); else sed -i "/RTCONFIG_WLCEVENTD/d" $(1); echo "RTCONFIG_WLCEVENTD=y" >>$(1); sed -i "/RTCONFIG_DPSTA/d" $(1); if [ "$(BUILD_NAME)" = "RT-AX58U_V2" ] || [ "$(DPSTA)" != "y" ]; then echo "# RTCONFIG_DPSTA is not set" >>$(1); else echo "RTCONFIG_DPSTA=y" >>$(1); fi; sed -i "/RTCONFIG_PTHSAFE_POPEN/d" $(1); echo "RTCONFIG_PTHSAFE_POPEN=y" >>$(1); fi; sed -i "/RTCONFIG_LIBASUSLOG/d" $(1); echo "RTCONFIG_LIBASUSLOG=y" >>$(1); if [ "$(NoETH)" != "y" ]; then sed -i "/RTCONFIG_ETHOBD/d" $(1); echo "RTCONFIG_ETHOBD=y" >>$(1); fi; sed -i "/RTCONFIG_DWB/d" $(1); echo "RTCONFIG_DWB=y" >>$(1); sed -i "/RTCONFIG_AMAS_WGN/d" $(1); echo "RTCONFIG_AMAS_WGN=y" >>$(1); if [ "$(ARM)" = "y" ] && [ "$(PROXYSTA)" = "y" ]; then sed -i "/RTCONFIG_PSR_GUEST/d" $(1); echo "RTCONFIG_PSR_GUEST=y" >>$(1); fi; sed -i "/RTCONFIG_AMASDB/d" $(1); if [ "$(AMASDB)" = "y" ]; then echo "RTCONFIG_AMASDB=y" >>$(1); else echo "# RTCONFIG_AMASDB is not set" >>$(1); fi; if [ "$(AVBLCHAN)" = "y" ]; then echo "RTCONFIG_AVBLCHAN=y" >>$(1); else echo "# RTCONFIG_AVBLCHAN is not set" >>$(1); fi; if [ "$(AMAS_ADTBW)" = "y" ]; then echo "RTCONFIG_AMAS_ADTBW=y" >>$(1); else echo "# RTCONFIG_AMAS_ADTBW is not set" >>$(1); fi; if [ "$(AMAS_UNIQUE_MAC)" = "y" ]; then echo "RTCONFIG_AMAS_UNIQUE_MAC=y" >>$(1); else echo "# RTCONFIG_AMAS_UNIQUE_MAC is not set" >>$(1); fi; if [ "$(PRELINK)" = "y" ]; then sed -i "/RTCONFIG_PRELINK/d" $(1); echo "RTCONFIG_PRELINK=y" >>$(1); fi; if [ "$(MSSID_PRELINK)" = "y" ]; then sed -i "/RTCONFIG_PRELINK/d" $(1); echo "RTCONFIG_PRELINK=y" >>$(1); sed -i "/RTCONFIG_MSSID_PRELINK/d" $(1); echo "RTCONFIG_MSSID_PRELINK=y" >>$(1); if [ "$(ARM)" = "y" ] && [ "$(PROXYSTA)" = "y" ]; then sed -i "/RTCONFIG_PSR_GUEST/d" $(1); echo "RTCONFIG_PSR_GUEST=y" >>$(1); fi; fi; if [ "$(FRONTHAUL_DWB)" = "y" ]; then sed -i "/RTCONFIG_DWB/d" $(1); echo "RTCONFIG_DWB=y" >>$(1); sed -i "/RTCONFIG_FRONTHAUL_DWB/d" $(1); echo "RTCONFIG_FRONTHAUL_DWB=y" >>$(1); if [ "$(ARM)" = "y" ] && [ "$(PROXYSTA)" = "y" ]; then sed -i "/RTCONFIG_PSR_GUEST/d" $(1); echo "RTCONFIG_PSR_GUEST=y" >>$(1); fi; fi; sed -i "/RTCONFIG_BHCOST_OPT/d" $(1); echo "RTCONFIG_BHCOST_OPT=y" >>$(1); if [ "$(AMAS_ETHDETECT)" = "y" ]; then echo "RTCONFIG_AMAS_ETHDETECT=y" >>$(1); else echo "# RTCONFIG_AMAS_ETHDETECT is not set" >>$(1); fi; if [ "$(FRONTHAUL_DBG)" = "y" ]; then echo "RTCONFIG_FRONTHAUL_DBG=y" >>$(1); else echo "# RTCONFIG_FRONTHAUL_DBG is not set" >>$(1); fi; if [ "$(AMAS_QCA_WDS)" = "y" ]; then echo "RTCONFIG_AMAS_QCA_WDS=y" >>$(1); else echo "# RTCONFIG_AMAS_QCA_WDS is not set" >>$(1); fi; if [ "$(BH_SWITCH_ETH_FIRST)" = "y" ]; then echo "RTCONFIG_BH_SWITCH_ETH_FIRST=y" >>$(1); else echo "# RTCONFIG_BH_SWITCH_ETH_FIRST is not set" >>$(1); fi; sed -i "/RTCONFIG_FORCE_ROAMING/d" $(1); echo "RTCONFIG_FORCE_ROAMING=y" >>$(1); sed -i "/RTCONFIG_STA_AP_BAND_BIND/d" $(1); echo "RTCONFIG_STA_AP_BAND_BIND=y" >>$(1); sed -i "/RTCONFIG_RE_RECONNECT/d" $(1); echo "RTCONFIG_RE_RECONNECT=y" >>$(1); sed -i "/RTCONFIG_CONN_EVENT_TO_EX_AP/d" $(1); echo "RTCONFIG_CONN_EVENT_TO_EX_AP=y" >>$(1); sed -i "/RTCONFIG_BCN_RPT/d" $(1); echo "RTCONFIG_BCN_RPT=y" >>$(1); sed -i "/RTCONFIG_11K_RCPI_CHECK/d" $(1); echo "RTCONFIG_11K_RCPI_CHECK=y" >>$(1); sed -i "/RTCONFIG_BTM_11V/d" $(1); echo "RTCONFIG_BTM_11V=y" >>$(1); if [ "$(CONFIG_BCMWL5)" = "y" ]; then if [ "$(BUILD_NAME)" != "RT-AC68U" ] && [ "$(BUILD_NAME)" != "DSL-AC68U" ] && [ "$(BUILD_NAME)" != "RT4G-AC68U" ]; then sed -i "/RTCONFIG_BCMEVENTD/d" $(1); echo "RTCONFIG_BCMEVENTD=y" >>$(1); fi; fi; sed -i "/RTCONFIG_VIF_ONBOARDING/d" $(1); echo "RTCONFIG_VIF_ONBOARDING=y" >>$(1); if [ "$(ARM)" = "y" ] && [ "$(PROXYSTA)" = "y" ]; then sed -i "/RTCONFIG_PSR_GUEST/d" $(1); echo "RTCONFIG_PSR_GUEST=y" >>$(1); fi; sed -i "/RTCONFIG_AMAS_SYNC_2G_BW/d" $(1); echo "RTCONFIG_AMAS_SYNC_2G_BW=y" >>$(1); sed -i "/RTCONFIG_ACCOUNT_BINDING/d" $(1); echo "RTCONFIG_ACCOUNT_BINDING=y" >>$(1); sed -i "/RTCONFIG_NOTIFICATION_CENTER/d" $(1); echo "RTCONFIG_NOTIFICATION_CENTER=y" >>$(1); sed -i "/RTCONFIG_BHSWITCH_RE_SELFOPT/d" $(1); echo "RTCONFIG_BHSWITCH_RE_SELFOPT=y" >>$(1); sed -i "/RTCONFIG_PREFERAP_RE_SELFOPT/d" $(1); echo "RTCONFIG_PREFERAP_RE_SELFOPT=y" >>$(1); if [ "$(MAX_RE)" != "" ]; then sed -i "/RTCONFIG_MAX_RE/d" $(1); echo "RTCONFIG_MAX_RE=$(MAX_RE)" >>$(1); fi; fi; sed -i "/RTCONFIG_BATMAN_ADV/d" $(1); if [ "$(BATMAN)" = "y" ]; then echo "RTCONFIG_BATMAN_ADV=y" >>$(1); else echo "# RTCONFIG_BATMAN_ADV is not set" >>$(1); fi; sed -i "/RTCONFIG_WATCH_WLREINIT/d" $(1); if [ "$(WATCH_REINIT)" = "y" ]; then echo "RTCONFIG_WATCH_WLREINIT=y" >>$(1); else echo "# RTCONFIG_WATCH_WLREINIT is not set" >>$(1); fi; sed -i "/RTCONFIG_MFGFW/d" $(1); if [ "$(MFGFW)" = "y" ]; then echo "RTCONFIG_MFGFW=y" >>$(1); else echo "# RTCONFIG_MFGFW is not set" >>$(1); fi; sed -i "/RTCONFIG_LYRA_5G_SWAP/d" $(1); if [ "$(LYRA_5G_SWAP)" = "y" ]; then echo "RTCONFIG_LYRA_5G_SWAP=y" >>$(1); else echo "# RTCONFIG_LYRA_5G_SWAP is not set" >>$(1); fi; if [ "$(NO_SELECT_CHANNEL)" = "y" ]; then sed -i "/RTCONFIG_NO_SELECT_CHANNEL/d" $(1); echo "RTCONFIG_NO_SELECT_CHANNEL=y" >>$(1); else sed -i "/RTCONFIG_NO_SELECT_CHANNEL/d" $(1); echo "# RTCONFIG_NO_SELECT_CHANNEL is not set" >>$(1); fi; if [ "$(USB_SWAP)" = "y" ]; then sed -i "/RTCONFIG_USB_SWAP/d" $(1); echo "RTCONFIG_USB_SWAP=y" >>$(1); fi; if [ "$(SW_DEVLED)" = "y" ]; then sed -i "/RTCONFIG_SW_DEVLED/d" $(1); echo "RTCONFIG_SW_DEVLED=y" >>$(1); fi; if [ "$(LYRA_HIDE)" = "y" ]; then sed -i "/RTCONFIG_LYRA_HIDE/d" $(1); echo "RTCONFIG_LYRA_HIDE=y" >>$(1); fi; if [ "$(NVRAM_ENCRYPT)" != "n" ] && [ "$(NVRAM_ENCRYPT)" != "" ]; then sed -i "/RTCONFIG_NVRAM_ENCRYPT/d" $(1); echo "RTCONFIG_NVRAM_ENCRYPT=y" >>$(1); fi; if [ "$(WIFI_PROXY)" = "y" ]; then sed -i "/RTCONFIG_WIFI_PROXY/d" $(1); echo "RTCONFIG_WIFI_PROXY=y" >>$(1); fi; if [ "$(HD_SPINDOWN)" = "y" ]; then sed -i "/RTCONFIG_HD_SPINDOWN/d" $(1); echo "RTCONFIG_HD_SPINDOWN=y" >>$(1); fi; if [ "$(ADTBW)" = "y" ]; then sed -i "/RTCONFIG_ADTBW/d" $(1); echo "RTCONFIG_ADTBW=y" >>$(1); fi; if [ "$(TXBF_BAND3ONLY)" = "y" ]; then sed -i "/RTCONFIG_TXBF_BAND3ONLY/d" $(1); echo "RTCONFIG_TXBF_BAND3ONLY=y" >>$(1); fi; if [ "$(SW_HW_AUTH)" = "y" ]; then sed -i "/RTCONFIG_SW_HW_AUTH\>/d" $(1); echo "RTCONFIG_SW_HW_AUTH=y" >>$(1); fi; if [ "$(LIBASUSLOG)" = "y" ]; then sed -i "/RTCONFIG_LIBASUSLOG\>/d" $(1); echo "RTCONFIG_LIBASUSLOG=y" >>$(1); fi; if [ "$(PORT2_DEVICE)" = "y" ]; then sed -i "/RTCONFIG_PORT2_DEVICE/d" $(1); echo "RTCONFIG_PORT2_DEVICE=y" >>$(1); fi; if [ "$(ETHOBD)" = "y" ]; then sed -i "/RTCONFIG_ETHOBD/d" $(1); echo "RTCONFIG_ETHOBD=y" >>$(1); fi; if [ "$(DWB)" = "y" ]; then sed -i "/RTCONFIG_DWB/d" $(1); echo "RTCONFIG_DWB=y" >>$(1); fi; if [ "$(WTF_REDEEM)" = "y" ]; then sed -i "/RTCONFIG_WTF_REDEEM/d" $(1); echo "RTCONFIG_WTF_REDEEM=y" >>$(1); fi; if [ "$(GEFORCENOW)" = "y" ]; then sed -i "/RTCONFIG_GEFORCENOW/d" $(1); echo "RTCONFIG_GEFORCENOW=y" >>$(1); fi; if [ "$(ISP_CUSTOMIZE)" = "y" ]; then sed -i "/RTCONFIG_ISP_CUSTOMIZE/d" $(1); echo "RTCONFIG_ISP_CUSTOMIZE=y" >>$(1); sed -i "/RTCONFIG_ISP_CUSTOMIZE_TOOL/d" $(1); echo "RTCONFIG_ISP_CUSTOMIZE_TOOL=y" >>$(1); fi; if [ "$(ISP_CUSTOMIZE_TOOL)" = "y" ]; then sed -i "/RTCONFIG_ISP_CUSTOMIZE_TOOL/d" $(1); echo "RTCONFIG_ISP_CUSTOMIZE_TOOL=y" >>$(1); sed -i "/RTCONFIG_ISP_CUSTOMIZE/d" $(1); echo "RTCONFIG_ISP_CUSTOMIZE=y" >>$(1); fi; if [ "$(IPERF3)" = "y" ]; then sed -i "/RTCONFIG_IPERF3/d" $(1); echo "RTCONFIG_IPERF3=y" >>$(1); fi; if [ "$(NFCM)" = "y" ]; then sed -i "/RTCONFIG_NFCM/d" $(1); echo "RTCONFIG_NFCM=y" >>$(1); fi; if [ "$(ASUSCTRL)" = "y" ]; then sed -i "/RTCONFIG_ASUSCTRL/d" $(1); echo "RTCONFIG_ASUSCTRL=y" >>$(1); fi; if [ "$(ARM)" = "y" ] && [ "$(BCMWL6)" = "y" ] && [ "$(BCM_MFG)" = "y" ]; then sed -i "/RTCONFIG_BCM_MFG/d" $(1); if [ "$(BCM_MFG)" = "y" ]; then echo "RTCONFIG_BCM_MFG=y" >>$(1); else echo "# RTCONFIG_BCM_MFG is not set" >>$(1); fi; fi; if [ "$(OPEN_NAT)" = "y" ]; then sed -i "/RTCONFIG_OPEN_NAT/d" $(1); echo "RTCONFIG_OPEN_NAT=y" >>$(1); fi; if [ "$(BRCM_HOSTAPD)" = "y" ]; then sed -i "/RTCONFIG_BRCM_HOSTAPD/d" $(1); echo "RTCONFIG_BRCM_HOSTAPD=y" >>$(1); fi; if [ "$(FRS_LIVE_UPDATE)" = "y" ]; then sed -i "/RTCONFIG_FRS_LIVE_UPDATE/d" $(1); echo "RTCONFIG_FRS_LIVE_UPDATE=y" >>$(1); fi; if [ "$(ASUSDDNS_ACCOUNT_BASE)" = "y" ]; then sed -i "/RTCONFIG_ASUSDDNS_ACCOUNT_BASE/d" $(1); echo "RTCONFIG_ASUSDDNS_ACCOUNT_BASE=y" >>$(1); fi; if [ "$(LIVE_UPDATE_RSA)" != "n" ] && [ "$(LIVE_UPDATE_RSA)" != "" ]; then sed -i "/RTCONFIG_LIVE_UPDATE_RSA/d" $(1); echo "RTCONFIG_LIVE_UPDATE_RSA=y" >>$(1); fi; if [ "$(UUPLUGIN)" = "y" ]; then sed -i "/RTCONFIG_UUPLUGIN/d" $(1); echo "RTCONFIG_UUPLUGIN=y" >>$(1); fi; if [ "$(TCPLUGIN)" = "y" ]; then sed -i "/RTCONFIG_TCPLUGIN/d" $(1); echo "RTCONFIG_TCPLUGIN=y" >>$(1); fi; if [ "$(RAST_NONMESH_KVONLY)" = "y" ]; then sed -i "/RTCONFIG_RAST_NONMESH_KVONLY/d" $(1); echo "RTCONFIG_RAST_NONMESH_KVONLY=y" >>$(1); sed -i "/RTCONFIG_BCN_RPT/d" $(1); echo "RTCONFIG_BCN_RPT=y" >>$(1); sed -i "/RTCONFIG_11K_RCPI_CHECK/d" $(1); echo "RTCONFIG_11K_RCPI_CHECK=y" >>$(1); sed -i "/RTCONFIG_BTM_11V/d" $(1); echo "RTCONFIG_BTM_11V=y" >>$(1); sed -i "/RTCONFIG_NEW_USER_LOW_RSSI/d" $(1); echo "RTCONFIG_NEW_USER_LOW_RSSI=y" >>$(1); sed -i "/RTCONFIG_ADV_RAST/d" $(1); echo "RTCONFIG_ADV_RAST=y" >>$(1); fi; if [ "$(NO_TRY_DWB_PROFILE)" = "y" ]; then sed -i "/RTCONFIG_NO_TRY_DWB_PROFILE/d" $(1); echo "RTCONFIG_NO_TRY_DWB_PROFILE=y" >>$(1); fi; if [ "$(IPERF3)" = "y" ]; then sed -i "/RTCONFIG_IPERF3/d" $(1); echo "RTCONFIG_IPERF3=y" >>$(1); fi; if [ -n "$(FW_JUMP)" ]; then sed -i "/RTCONFIG_FW_JUMP/d" $(1); echo "RTCONFIG_FW_JUMP=y" >>$(1); fi; if [ -n "$(BROOP)" ]; then sed -i "/RTCONFIG_BROOP/d" $(1); echo "RTCONFIG_BROOP=y" >>$(1); sed -i "/RTCONFIG_BROOP_LED/d" $(1); echo "# RTCONFIG_BROOP_LED is not set" >>$(1); fi; if [ "$(GN_WBL)" = "y" ]; then sed -i "/RTCONFIG_GN_WBL\>/d" $(1); echo "RTCONFIG_GN_WBL=y" >>$(1); fi; if [ "$(AMAZON_WSS)" = "y" ]; then sed -i "/RTCONFIG_AMAZON_WSS\>/d" $(1); echo "RTCONFIG_AMAZON_WSS=y" >>$(1); sed -i "/RTCONFIG_GN_WBL\>/d" $(1); echo "RTCONFIG_GN_WBL=y" >>$(1); fi; if [ "$(OOKLA)" = "y" ]; then sed -i "/RTCONFIG_OOKLA\>/d" $(1); echo "RTCONFIG_OOKLA=y" >>$(1); fi; if [ "$(OOKLA_LITE)" = "y" ]; then sed -i "/RTCONFIG_OOKLA_LITE\>/d" $(1); echo "RTCONFIG_OOKLA_LITE=y" >>$(1); fi; if [ "$(NoETH)" = "y" ]; then sed -i "/RTCONFIG_NoETH\>/d" $(1); echo "RTCONFIG_NoETH=y" >>$(1); fi; if [ "$(TRX_TAIL_INFO)" = "y" ]; then sed -i "/RTCONFIG_TAIL_INFO\>/d" $(1); echo "RTCONFIG_TAIL_INFO=y" >>$(1); fi; if [ "$(WL_SCHED_V2)" = "y" ]; then sed -i "/RTCONFIG_WL_SCHED_V2\>/d" $(1); echo "RTCONFIG_WL_SCHED_V2=y" >>$(1); sed -i "/RTCONFIG_SCHED_V2\>/d" $(1); echo "RTCONFIG_SCHED_V2=y" >>$(1); fi; if [ "$(PC_SCHED_V2)" = "y" ]; then sed -i "/RTCONFIG_PC_SCHED_V2\>/d" $(1); echo "RTCONFIG_PC_SCHED_V2=y" >>$(1); sed -i "/RTCONFIG_SCHED_V2\>/d" $(1); echo "RTCONFIG_SCHED_V2=y" >>$(1); fi; if [ "$(WL_SCHED_V3)" = "y" ]; then sed -i "/RTCONFIG_WL_SCHED_V2\>/d" $(1); echo "RTCONFIG_WL_SCHED_V2=y" >>$(1); sed -i "/RTCONFIG_WL_SCHED_V3\>/d" $(1); echo "RTCONFIG_WL_SCHED_V3=y" >>$(1); sed -i "/RTCONFIG_SCHED_V2\>/d" $(1); echo "RTCONFIG_SCHED_V2=y" >>$(1); fi; if [ "$(PC_SCHED_V3)" != "n" ]; then sed -i "/RTCONFIG_PC_SCHED_V2\>/d" $(1); echo "RTCONFIG_PC_SCHED_V2=y" >>$(1); sed -i "/RTCONFIG_PC_SCHED_V3\>/d" $(1); echo "RTCONFIG_PC_SCHED_V3=y" >>$(1); sed -i "/RTCONFIG_SCHED_V2\>/d" $(1); echo "RTCONFIG_SCHED_V2=y" >>$(1); fi; if [ "$(SCHED_V2)" = "y" ]; then sed -i "/RTCONFIG_SCHED_V2\>/d" $(1); echo "RTCONFIG_SCHED_V2=y" >>$(1); fi; if [ "$(SCHED_V3)" = "y" ]; then sed -i "/RTCONFIG_SCHED_V3\>/d" $(1); echo "RTCONFIG_SCHED_V3=y" >>$(1); fi; if [ "$(MULTISERVICE_WAN)" = "y" ]; then sed -i "/RTCONFIG_MULTISERVICE_WAN\>/d" $(1); echo "RTCONFIG_MULTISERVICE_WAN=y" >>$(1); fi; if [ -n "$(OUTFOX)" ]; then sed -i "/RTCONFIG_OUTFOX/d" $(1); echo "RTCONFIG_OUTFOX=y" >>$(1); fi; if [ -n "$(CAPTCHA)" ]; then sed -i "/RTCONFIG_CAPTCHA/d" $(1); echo "RTCONFIG_CAPTCHA=y" >>$(1); fi; if [ "$(REMOVE_ROUTER_UI)" = "y" ]; then sed -i "/RTCONFIG_L2TP\>/d" $(1); echo "# RTCONFIG_L2TP is not set" >>$(1); sed -i "/RTCONFIG_PPTP\>/d" $(1); echo "# RTCONFIG_PPTP is not set" >>$(1); sed -i "/RTCONFIG_EAPOL\>/d" $(1); echo "# RTCONFIG_EAPOL is not set" >>$(1); fi; if [ "$(WIFI6E)" = "y" ]; then sed -i "/RTCONFIG_WIFI6E/d" $(1); echo "RTCONFIG_WIFI6E=y" >>$(1); fi; if [ "$(SAVE_WL_NVRAM_BOTH)" = "y" ]; then sed -i "/RTCONFIG_SAVE_WL_NVRAM_BOTH/d" $(1); echo "RTCONFIG_SAVE_WL_NVRAM_BOTH=y" >>$(1); fi; if [ "$(SWCONFIG)" = "y" ]; then sed -i "/RTCONFIG_SWCONFIG/d" $(1); echo "RTCONFIG_SWCONFIG=y" >>$(1); fi; if [ "$(OWE_TRANS)" = "y" ]; then sed -i "/RTCONFIG_OWE_TRANS/d" $(1); echo "RTCONFIG_OWE_TRANS=y" >>$(1); fi; if [ "$(VAR_NVRAM)" = "y" ]; then sed -i "/RTCONFIG_VAR_NVRAM/d" $(1); echo "RTCONFIG_VAR_NVRAM=y" >>$(1); fi; if [ "$(QCA_PLC2)" = "y" ]; then sed -i "/RTCONFIG_QCA_PLC2/d" $(1); echo "RTCONFIG_QCA_PLC2=y" >>$(1); fi; if [ "$(NEW_PHYMAP)" = "y" ]; then sed -i "/RTCONFIG_NEW_PHYMAP/d" $(1); echo "RTCONFIG_NEW_PHYMAP=y" >>$(1); fi; if [ "$(INSTANT_GUARD)" = "y" ]; then sed -i "/RTCONFIG_INSTANT_GUARD/d" $(1); echo "RTCONFIG_INSTANT_GUARD=y" >>$(1); fi; if [ "$(GAME_MODE)" = "y" ]; then sed -i "/RTCONFIG_GAME_MODE/d" $(1); echo "RTCONFIG_GAME_MODE=y" >>$(1); fi; if [ "$(WIREGUARD)" = "y" ]; then sed -i "/RTCONFIG_WIREGUARD/d" $(1); echo "RTCONFIG_WIREGUARD=y" >>$(1); fi; if [ "$(SPECIFIC_PPPOE)" = "y" ]; then sed -i "/RTCONFIG_SPECIFIC_PPPOE/d" $(1); echo "RTCONFIG_SPECIFIC_PPPOE=y" >>$(1); fi; if [ "$(ACL96)" = "y" ]; then sed -i "/RTCONFIG_ACL96/d" $(1); echo "RTCONFIG_ACL96=y" >>$(1); fi; if [ "$(ISPCTRL)" = "y" ]; then sed -i "/RTCONFIG_ISPCTRL\>/d" $(1); echo "RTCONFIG_ISPCTRL=y" >>$(1); fi; if [ "$(GOOGLE_ASST)" = "y" ]; then sed -i "/RTCONFIG_GOOGLE_ASST/d" $(1); echo "RTCONFIG_GOOGLE_ASST=y" >>$(1); fi; if [ "$(EXTEND_LIMIT)" = "y" ]; then sed -i "/RTCONFIG_EXTEND_LIMIT/d" $(1); echo "RTCONFIG_EXTEND_LIMIT=y" >>$(1); fi; if [ "$(LLDPD_1_0_11)" = "y" ]; then sed -i "/RTCONFIG_LLDPD/d" $(1); echo "# RTCONFIG_LLDPD_0_9_8 is not set" >>$(1); echo "RTCONFIG_LLDPD_1_0_11=y" >>$(1); elif [ "$(LLDPD_0_9_8)" = "y" ]; then sed -i "/RTCONFIG_LLDPD/d" $(1); echo "RTCONFIG_LLDPD_0_9_8=y" >>$(1); echo "# RTCONFIG_LLDPD_1_0_11 is not set" >>$(1); fi; if [ "$(QUADBAND)" = "y" ]; then sed -i "/RTCONFIG_QUADBAND/d" $(1); echo "RTCONFIG_QUADBAND=y" >>$(1); fi; if [ "$(COMFW)" = "y" ]; then sed -i "/RTCONFIG_COMFW/d" $(1); echo "RTCONFIG_COMFW=y" >>$(1); fi; if [ "$(SYSCLASSGPIO)" = "y" ]; then sed -i "/RTCONFIG_SYSCLASSGPIO/d" $(1); echo "RTCONFIG_SYSCLASSGPIO=y" >>$(1); fi; if [ "$(MUSL_LIBC)" = "y" ]; then sed -i "/RTCONFIG_MUSL_LIBC/d" $(1); echo "RTCONFIG_MUSL_LIBC=y" >>$(1); fi; if [ "$(RALINK_BUILDIN_WIFI)" = "y" ]; then sed -i "/RTCONFIG_RALINK_BUILDIN_WIFI/d" $(1); echo "RTCONFIG_RALINK_BUILDIN_WIFI=y" >>$(1); else sed -i "/RTCONFIG_RALINK_BUILDIN_WIFI/d" $(1); echo "# RTCONFIG_RALINK_BUILDIN_WIFI is not set" >>$(1); fi; if [ "$(SPECIFIC_PPPOE)" = "y" ]; then sed -i "/RTCONFIG_SPECIFIC_PPPOE/d" $(1); echo "RTCONFIG_SPECIFIC_PPPOE=y" >>$(1); fi; if [ "$(3LANPORT_DEVICE)" = "y" ]; then sed -i "/RTCONFIG_3LANPORT_DEVICE/d" $(1); echo "RTCONFIG_3LANPORT_DEVICE=y" >>$(1); fi; if [ "$(VHT160)" = "y" ]; then sed -i "/RTCONFIG_VHT160/d" $(1); echo "RTCONFIG_VHT160=y" >>$(1); else sed -i "/RTCONFIG_VHT160/d" $(1); echo "# RTCONFIG_VHT160 is not set" >>$(1); fi; if [ "$(VHT80_80)" = "y" ]; then sed -i "/RTCONFIG_VHT80_80/d" $(1); echo "RTCONFIG_VHT80_80=y" >>$(1); else sed -i "/RTCONFIG_VHT80_80/d" $(1); echo "# RTCONFIG_VHT80_80 is not set" >>$(1); fi; if [ "$(BW160M)" = "y" ]; then sed -i "/RTCONFIG_BW160M/d" $(1); echo "RTCONFIG_BW160M=y" >>$(1); else sed -i "/RTCONFIG_BW160M/d" $(1); echo "# RTCONFIG_BW160M is not set" >>$(1); fi; if [ "$(SOFTCENTER)" = "y" ]; then sed -i "/RTCONFIG_SOFTCENTER/d" $(1); echo "RTCONFIG_SOFTCENTER=y" >>$(1); fi; if [ "$(SMARTDNS)" = "y" ]; then sed -i "/RTCONFIG_SMARTDNS/d" $(1); echo "RTCONFIG_SMARTDNS=y" >>$(1); fi; if [ "$(SWRT)" = "y" ]; then sed -i "/RTCONFIG_SWRT\>/d" $(1); echo "RTCONFIG_SWRT=y" >>$(1); fi; if [ "$(SWRT_LED)" = "y" ]; then sed -i "/RTCONFIG_SWRT_LED\>/d" $(1); echo "RTCONFIG_SWRT_LED=y" >>$(1); fi; if [ "$(SWRT_UU)" = "y" ]; then sed -i "/RTCONFIG_SWRT_UU/d" $(1); echo "RTCONFIG_SWRT_UU=y" >>$(1); fi; if [ "$(SWRT_FULLCONE)" = "y" ]; then sed -i "/RTCONFIG_SWRT_FULLCONE/d" $(1); echo "RTCONFIG_SWRT_FULLCONE=y" >>$(1); fi; if [ "$(SWRT_I2CLED)" = "y" ]; then sed -i "/RTCONFIG_SWRT_I2CLED/d" $(1); echo "RTCONFIG_SWRT_I2CLED=y" >>$(1); fi; if [ "$(SWRT_FASTPATH)" = "y" ]; then sed -i "/RTCONFIG_SWRT_FASTPATH/d" $(1); echo "RTCONFIG_SWRT_FASTPATH=y" >>$(1); fi; if [ "$(SWRT_KVR)" = "y" ]; then sed -i "/RTCONFIG_SWRT_KVR/d" $(1); echo "RTCONFIG_SWRT_KVR=y" >>$(1); fi; if [ "$(SWRT_LED_RGB)" = "y" ]; then sed -i "/RTCONFIG_SWRT_LED_RGB/d" $(1); echo "RTCONFIG_SWRT_LED_RGB=y" >>$(1); fi; if [ "$(ENTWARE)" = "y" ]; then sed -i "/RTCONFIG_ENTWARE/d" $(1); echo "RTCONFIG_ENTWARE=y" >>$(1); fi; if [ "$(EASYMESH)" = "y" ]; then sed -i "/RTCONFIG_EASYMESH/d" $(1); echo "RTCONFIG_EASYMESH=y" >>$(1); fi; )
	$(call platformRouterOptions, $(1))
endef
# makefile (from 'target.mak', line 58)
GT-AC2900 := HND_ROUTER=y PROFILE="94908HND" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="GT-AC2900" NVSIZE="128" DHDAP=y DPSTA=y LACP=y WTFAST=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n CRASHLOG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50=all ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV4=y LAN4WAN_LED=n NEW_APP_ARM=y VISUALIZATION=y BONDING=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y HD_SPINDOWN=y VPN_FUSION=y ASPMD=n BCM_MEVENT=y BCMEVENTD=y BCM_APPEVENTD=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AICLOUD=y NATNL_AIHOME=y RGBLED=y I2CTOOLS=y BTN_TURBO=y BW160M=y ROG_UI=y GEFORCENOW=y OPEN_NAT=y UUPLUGIN=y AVBLCHAN=y SW_CTRL_ALLLED=y GAME_MODE=y INSTANT_GUARD=y GOOGLE_ASST=y IPV6S46=y
# makefile (from 'platform.mak', line 91)
CONFIG_SUPPORT_OPENWRT = y
# makefile (from 'Makefile', line 4344)
define KernelConfig
	@( sed -i "/CONFIG_PPP_DEFLATE/d" $(1); echo "CONFIG_PPP_DEFLATE=m" >>$(1); sed -i "/CONFIG_PPP_FILTER/d" $(1); echo "# CONFIG_PPP_FILTER is not set" >>$(1); sed -i "/CONFIG_PPP_MULTILINK/d" $(1); echo "CONFIG_PPP_MULTILINK=y" >>$(1); if [ "$(TUNEK)" != "n" ]; then if [ "$(RALINK)" = "y" ] || [ "$(QCA)" = "y" ]; then sed -i "/CONFIG_NVRAM_SIZE/d" $(1); echo "CONFIG_NVRAM_SIZE=`printf 0x%x $(NVRAM_SIZE)`" >>$(1); fi; sed -i "/CONFIG_CC_OPTIMIZE_FOR_SIZE/d" $(1); if [ "$(KERN_SIZE_OPT)" = "y" ]; then echo "CONFIG_CC_OPTIMIZE_FOR_SIZE=y" >>$(1); else echo "# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set" >>$(1); fi; if [ "$(CONFIG_LINUX26)" = "y" ] && [ "$(MIPS32)" = "r2" ]; then sed -i "/CONFIG_CPU_MIPS32_R1/d" $(1); echo "# CONFIG_CPU_MIPS32_R1 is not set" >>$(1); sed -i "/CONFIG_CPU_MIPS32_R2/d" $(1); echo "CONFIG_CPU_MIPS32_R2=y" >>$(1); sed -i "/CONFIG_CPU_MIPSR1/d" $(1); echo "CONFIG_CPU_MIPSR2=y" >>$(1); fi; if [ "$(RTN11P)" = "y" ] || [ "$(RTN300)" = "y" ]; then sed -i "/CONFIG_USB/d" $(1); echo "# CONFIG_USB is not set" >>$(1); sed -i "/CONFIG_USB_SUPPORT/d" $(1); echo "# CONFIG_USB_SUPPORT is not set" >>$(1); sed -i "/CONFIG_USB_ARCH_HAS_OHCI/d" $(1); echo "# CONFIG_USB_ARCH_HAS_OHCI is not set" >>$(1); sed -i "/CONFIG_USB_ARCH_HAS_EHCI/d" $(1); echo "# CONFIG_USB_ARCH_HAS_EHCI is not set" >>$(1); sed -i "/CONFIG_SWAP/d" $(1); echo "# CONFIG_SWAP is not set" >>$(1); sed -i "/CONFIG_RD_GZIP/d" $(1); echo "# CONFIG_RD_GZIP is not set" >>$(1); sed -i "/CONFIG_SCSI/d" $(1); echo "# CONFIG_SCSI is not set" >>$(1); sed -i "/CONFIG_EXT2_FS/d" $(1); echo "# CONFIG_EXT2_FS is not set" >>$(1); sed -i "/CONFIG_EXT3_FS/d" $(1); echo "# CONFIG_EXT3_FS is not set" >>$(1); sed -i "/CONFIG_FAT_FS/d" $(1); echo "# CONFIG_FAT_FS is not set" >>$(1); sed -i "/CONFIG_VFAT_FS/d" $(1); echo "# CONFIG_VFAT_FS is not set" >>$(1); sed -i "/CONFIG_HFS_FS/d" $(1); echo "# CONFIG_HFS_FS is not set" >>$(1); sed -i "/CONFIG_HFSPLUS_FS/d" $(1); echo "# CONFIG_HFSPLUS_FS is not set" >>$(1); sed -i "/CONFIG_REISERFS_FS/d" $(1); echo "# CONFIG_REISERFS_FS is not set" >>$(1); sed -i "/CONFIG_JFFS2_FS/d" $(1); echo "# CONFIG_JFFS2_FS is not set" >>$(1); sed -i "/CONFIG_FUSE_FS/d" $(1); echo "# CONFIG_FUSE_FS is not set" >>$(1); sed -i "/CONFIG_CONFIGFS_FS/d" $(1); echo "# CONFIG_CONFIGFS_FS is not set" >>$(1); sed -i "/CONFIG_SERIAL_NONSTANDARD/d" $(1); echo "# CONFIG_SERIAL_NONSTANDARD is not set" >>$(1); sed -i "/CONFIG_NETWORK_FILESYSTEMS/d" $(1); echo "# CONFIG_NETWORK_FILESYSTEMS is not set" >>$(1); sed -i "/CONFIG_CC_OPTIMIZE_FOR_SIZE/d" $(1); echo "CONFIG_CC_OPTIMIZE_FOR_SIZE=y" >>$(1); sed -i "/CONFIG_KALLSYMS/d" $(1); echo "# CONFIG_KALLSYMS is not set" >>$(1); sed -i "/CONFIG_RALINK_TIMER/d" $(1); echo "# CONFIG_RALINK_TIMER is not set" >>$(1); sed -i "/CONFIG_BUG/d" $(1); echo "# CONFIG_BUG is not set" >>$(1); fi; if [ "$(RTN19)" = "y" ] || [ "$(PLN12)" = "y" ] || [ "$(PLAC56)" = "y" ] || [ "$(RPAC66)" = "y" ] || [ "$(RPAC51)" = "y" ] ; then sed -i "/CONFIG_USB/d" $(1); echo "# CONFIG_USB is not set" >>$(1); sed -i "/CONFIG_USB_SUPPORT/d" $(1); echo "# CONFIG_USB_SUPPORT is not set" >>$(1); sed -i "/CONFIG_USB_ARCH_HAS_OHCI/d" $(1); echo "# CONFIG_USB_ARCH_HAS_OHCI is not set" >>$(1); sed -i "/CONFIG_USB_ARCH_HAS_EHCI/d" $(1); echo "# CONFIG_USB_ARCH_HAS_EHCI is not set" >>$(1); sed -i "/CONFIG_SWAP/d" $(1); echo "# CONFIG_SWAP is not set" >>$(1); sed -i "/CONFIG_RD_GZIP/d" $(1); echo "# CONFIG_RD_GZIP is not set" >>$(1); sed -i "/CONFIG_SCSI/d" $(1); echo "# CONFIG_SCSI is not set" >>$(1); sed -i "/CONFIG_EXT2_FS/d" $(1); echo "# CONFIG_EXT2_FS is not set" >>$(1); sed -i "/CONFIG_EXT3_FS/d" $(1); echo "# CONFIG_EXT3_FS is not set" >>$(1); sed -i "/CONFIG_FAT_FS/d" $(1); echo "# CONFIG_FAT_FS is not set" >>$(1); sed -i "/CONFIG_VFAT_FS/d" $(1); echo "# CONFIG_VFAT_FS is not set" >>$(1); sed -i "/CONFIG_HFS_FS/d" $(1); echo "# CONFIG_HFS_FS is not set" >>$(1); sed -i "/CONFIG_HFSPLUS_FS/d" $(1); echo "# CONFIG_HFSPLUS_FS is not set" >>$(1); sed -i "/CONFIG_REISERFS_FS/d" $(1); echo "# CONFIG_REISERFS_FS is not set" >>$(1); sed -i "/CONFIG_JFFS2_FS/d" $(1); echo "# CONFIG_JFFS2_FS is not set" >>$(1); sed -i "/CONFIG_FUSE_FS/d" $(1); echo "# CONFIG_FUSE_FS is not set" >>$(1); sed -i "/CONFIG_CONFIGFS_FS/d" $(1); echo "# CONFIG_CONFIGFS_FS is not set" >>$(1); sed -i "/CONFIG_SERIAL_NONSTANDARD/d" $(1); echo "# CONFIG_SERIAL_NONSTANDARD is not set" >>$(1); sed -i "/CONFIG_NETWORK_FILESYSTEMS/d" $(1); echo "# CONFIG_NETWORK_FILESYSTEMS is not set" >>$(1); sed -i "/CONFIG_CC_OPTIMIZE_FOR_SIZE/d" $(1); echo "CONFIG_CC_OPTIMIZE_FOR_SIZE=y" >>$(1); sed -i "/CONFIG_KALLSYMS/d" $(1); echo "# CONFIG_KALLSYMS is not set" >>$(1); fi; if [ "$(AP_CARRIER_DETECTION)" = "y" ]; then if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_RALINK_TIMER_DFS/d" $(1); echo "CONFIG_RALINK_TIMER_DFS=y" >>$(1); sed -i "/CONFIG_RT2860V2_AP_DFS/d" $(1); echo "CONFIG_RT2860V2_AP_DFS=y" >>$(1); sed -i "/CONFIG_RT2860V2_AP_CARRIER/d" $(1); echo "CONFIG_RT2860V2_AP_CARRIER=y" >>$(1); sed -i "/CONFIG_RTPCI_AP_CARRIER/d" $(1); echo "CONFIG_RTPCI_AP_CARRIER=y" >>$(1); fi; else if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_RALINK_TIMER_DFS/d" $(1); echo "# CONFIG_RALINK_TIMER_DFS is not set" >>$(1); sed -i "/CONFIG_RT2860V2_AP_DFS/d" $(1); echo "# CONFIG_RT2860V2_AP_DFS is not set" >>$(1); sed -i "/CONFIG_RT2860V2_AP_CARRIER/d" $(1); echo "# CONFIG_RT2860V2_AP_CARRIER is not set" >>$(1); sed -i "/CONFIG_RTPCI_AP_CARRIER/d" $(1); echo "# CONFIG_RTPCI_AP_CARRIER is not set" >>$(1); fi; fi; if [ "$(CONFIG_LINUX30)" = "y" ]; then if [ "$(RPAC92)" != "y" ]; then sed -i "/CONFIG_USB_XHCI_HCD/d" $(1); echo "# CONFIG_USB_XHCI_HCD is not set" >>$(1); fi; if [ "$(USB)" = "USB" ]; then if [ "$(XHCI)" = "y" ]; then if [ "$(ALPINE)" = "y" ] || [ "$(LANTIQ)" = "y" ] || [ "$(RALINK)" = "y" ] ; then sed -i "/CONFIG_USB_XHCI_HCD/d" $(1); echo "CONFIG_USB_XHCI_HCD=m" >>$(1); sed -i "/CONFIG_USB_XHCI_HCD_DEBUGGING/d" $(1); echo "# CONFIG_USB_XHCI_HCD_DEBUGGING is not set" >>$(1); sed -i "/CONFIG_USB_EHCI_HCD/d" $(1); echo "CONFIG_USB_EHCI_HCD=m" >>$(1); sed -i "/CONFIG_USB_EHCI_HCD_PLATFORM/d" $(1); echo "CONFIG_USB_EHCI_HCD_PLATFORM=y">>$(1); sed -i "/CONFIG_USB_EHCI_ROOT_HUB_TT/d" $(1); echo "CONFIG_USB_EHCI_ROOT_HUB_TT=y" >>$(1); sed -i "/CONFIG_USB_EHCI_TT_NEWSCHED/d" $(1); echo "CONFIG_USB_EHCI_TT_NEWSCHED=y" >>$(1); else sed -i "/CONFIG_USB_XHCI_HCD/d" $(1); echo "CONFIG_USB_XHCI_HCD=y" >>$(1); sed -i "/CONFIG_USB_XHCI_HCD_DEBUGGING/d" $(1); echo "# CONFIG_USB_XHCI_HCD_DEBUGGING is not set" >>$(1); fi; fi; fi; fi; if [ "$(IPV6SUPP)" = "y" -o "$(IPV6FULL)" = "y" ]; then if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_IPV6 is not set/d" $(1); echo "CONFIG_IPV6=y" >>$(1); sed -i "/CONFIG_IP6_NF_IPTABLES/d" $(1); echo "CONFIG_IP6_NF_IPTABLES=y" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_RT/d" $(1); echo "CONFIG_IP6_NF_MATCH_RT=y" >>$(1); sed -i "/CONFIG_IP6_NF_FILTER/d" $(1); echo "CONFIG_IP6_NF_FILTER=m" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_LOG/d" $(1); echo "CONFIG_IP6_NF_TARGET_LOG=m" >>$(1); if [ "$(CONFIG_BCMWL5)" = "y" ] && [ "$(ARM)" != "y" ]; then sed -i "/CONFIG_IP6_NF_TARGET_SKIPLOG/d" $(1); echo "CONFIG_IP6_NF_TARGET_SKIPLOG=m" >>$(1); fi; sed -i "/CONFIG_IP6_NF_TARGET_REJECT\>/d" $(1); echo "CONFIG_IP6_NF_TARGET_REJECT=m" >>$(1); sed -i "/CONFIG_IP6_NF_MANGLE/d" $(1); echo "CONFIG_IP6_NF_MANGLE=m" >>$(1); if [ "$(CONFIG_LINUX26)" = "y" ]; then sed -i "/CONFIG_NF_CONNTRACK_IPV6/d" $(1); echo "CONFIG_NF_CONNTRACK_IPV6=y" >>$(1); sed -i "/CONFIG_IPV6_ROUTER_PREF/d" $(1); echo "CONFIG_IPV6_ROUTER_PREF=y" >>$(1); sed -i "/CONFIG_IPV6_SIT\b/d" $(1); echo "CONFIG_IPV6_SIT=m" >>$(1); sed -i "/CONFIG_IPV6_SIT_6RD/d" $(1); echo "CONFIG_IPV6_SIT_6RD=y" >>$(1); sed -i "/CONFIG_IPV6_MULTIPLE_TABLES/d" $(1); echo "CONFIG_IPV6_MULTIPLE_TABLES=y" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_ROUTE/d" $(1); echo "CONFIG_IP6_NF_TARGET_ROUTE=m" >>$(1); sed -i "/CONFIG_IPV6_MROUTE\b/d" $(1); echo "CONFIG_IPV6_MROUTE=y" >>$(1); fi; if [ "$(CONFIG_LINUX30)" = "y" ]; then sed -i "/CONFIG_IP6_NF_CONNTRACK/d" $(1); echo "CONFIG_IP6_NF_CONNTRACK=m" >>$(1); sed -i "/CONFIG_IPV6_ROUTER_PREF/d" $(1); echo "CONFIG_IPV6_ROUTER_PREF=y" >>$(1); sed -i "/CONFIG_IPV6_SIT\b/d" $(1); echo "CONFIG_IPV6_SIT=m" >>$(1); sed -i "/CONFIG_IPV6_SIT_6RD/d" $(1); echo "CONFIG_IPV6_SIT_6RD=y" >>$(1); sed -i "/CONFIG_IPV6_MULTIPLE_TABLES/d" $(1); echo "CONFIG_IPV6_MULTIPLE_TABLES=y" >>$(1); sed -i "/CONFIG_IP6_NF_FTP/d" $(1); echo "CONFIG_IP6_NF_FTP=m" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_LIMIT/d" $(1); echo "CONFIG_IP6_NF_MATCH_LIMIT=m" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_CONDITION/d" $(1); echo "CONFIG_IP6_NF_MATCH_CONDITION=m" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_MAC/d" $(1); echo "CONFIG_IP6_NF_MATCH_MAC=m" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_MULTIPORT/d" $(1); echo "CONFIG_IP6_NF_MATCH_MULTIPORT=m" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_MARK/d" $(1); echo "CONFIG_IP6_NF_MATCH_MARK=m" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_LENGTH/d" $(1); echo "CONFIG_IP6_NF_MATCH_LENGTH=m" >>$(1); sed -i "/CONFIG_IP6_NF_MATCH_STATE/d" $(1); echo "CONFIG_IP6_NF_MATCH_STATE=m" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_MARK/d" $(1); echo "CONFIG_IP6_NF_TARGET_MARK=m" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_TCPMSS/d" $(1); echo "CONFIG_IP6_NF_TARGET_TCPMSS=m" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_ROUTE/d" $(1); echo "CONFIG_IP6_NF_TARGET_ROUTE=m" >>$(1); sed -i "/CONFIG_IPV6_MROUTE\b/d" $(1); echo "CONFIG_IPV6_MROUTE=y" >>$(1); fi; fi; else sed -i "/CONFIG_IPV6/d" $(1); echo "# CONFIG_IPV6 is not set" >>$(1); fi; sed -i "/CONFIG_BCM57XX/d" $(1); if [ "$(BCM57)" = "y" ]; then sed -i "/CONFIG_ET_ALL_PASSIVE/d" $(1); echo "CONFIG_BCM57XX=m" >>$(1); echo "# CONFIG_ET_ALL_PASSIVE_ON is not set" >>$(1); echo "CONFIG_ET_ALL_PASSIVE_RUNTIME=y" >>$(1); else echo "# CONFIG_BCM57XX is not set" >>$(1); fi; sed -i "/CONFIG_WL_USE_HIGH/d" $(1); sed -i "/CONFIG_WL_USBAP/d" $(1); if [ "$(USBAP)" = "y" ]; then echo "CONFIG_WL_USE_HIGH=y" >> $(1); echo "CONFIG_WL_USBAP=y" >>$(1); else echo "# CONFIG_WL_USE_HIGH is not set" >> $(1); echo "# CONFIG_WL_USBAP is not set" >>$(1); fi; if [ "$(CONFIG_LINUX26)" = "y" ] && [ "$(EBTABLES)" = "y" ]; then if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_BRIDGE_NF_EBTABLES/d" $(1); echo "CONFIG_BRIDGE_NF_EBTABLES=m" >>$(1); if [ "$(IPV6SUPP)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/CONFIG_BRIDGE_EBT_IP6/d" $(1); echo "CONFIG_BRIDGE_EBT_IP6=m" >>$(1); fi; fi; fi; sed -i "/CONFIG_NVRAM_64K/d" $(1); if [ "$(NVRAM_64K)" = "y" ]; then echo "CONFIG_NVRAM_64K=y" >>$(1); else echo "# CONFIG_NVRAM_64K is not set" >>$(1); fi; sed -i "/CONFIG_LOCALE2012/d" $(1); if [ "$(LOCALE2012)" = "y" ]; then echo "CONFIG_LOCALE2012=y" >>$(1); else echo "# CONFIG_LOCALE2012 is not set" >>$(1); fi; sed -i "/CONFIG_N56U_SR2/d" $(1); if [ "$(N56U_SR2)" = "y" ]; then echo "CONFIG_N56U_SR2=y" >>$(1); else echo "# CONFIG_N56U_SR2 is not set" >>$(1); fi; if [ "$(EXT4FS)" = "y" ]; then if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_EXT4_FS/d" $(1); echo "CONFIG_EXT4_FS=m" >>$(1); sed -i "/CONFIG_EXT4_FS_XATTR/d" $(1); echo "CONFIG_EXT4_FS_XATTR=y" >>$(1); sed -i "/CONFIG_EXT4_FS_POSIX_ACL/d" $(1); echo "# CONFIG_EXT4_FS_POSIX_ACL is not set" >>$(1); sed -i "/CONFIG_EXT4_FS_SECURITY/d" $(1); echo "# CONFIG_EXT4_FS_SECURITY is not set" >>$(1); sed -i "/CONFIG_EXT4_DEBUG/d" $(1); echo "# CONFIG_EXT4_DEBUG is not set" >>$(1); fi; if [ "$(IPV6S46)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/CONFIG_IPV6_TUNNEL/d" $(1); echo "CONFIG_IPV6_TUNNEL=m" >>$(1); fi; else if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_EXT4_FS/d" $(1); echo "# CONFIG_EXT4_FS is not set" >>$(1); fi; fi; fi; if [ "$(SHP)" = "y" ] || [ "$(LFP)" = "y" ]; then if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_IP_NF_LFP/d" $(1); echo "CONFIG_IP_NF_LFP=y" >>$(1); fi; fi; if [ "$(DNSMQ)" = "y" ]; then sed -i "/CONFIG_IP_NF_DNSMQ/d" $(1); echo "CONFIG_IP_NF_DNSMQ=y" >>$(1); fi; if [ "$(CTFNAT)" = "y" ]; then sed -i "/CONFIG_IP_NF_CTFNAT/d" $(1); echo "CONFIG_IP_NF_CTFNAT=y" >>$(1); fi; if [ "$(BROOP)" = "y" ]; then sed -i "/CONFIG_BRIDGE_OOP/d" $(1); echo "CONFIG_BRIDGE_OOP=y" >>$(1); fi; if [ "$(USB)" = "" ]; then sed -i "/CONFIG_MSDOS_PARTITION/d" $(1); echo "# CONFIG_MSDOS_PARTITION is not set" >>$(1); sed -i "/CONFIG_EFI_PARTITION/d" $(1); echo "# CONFIG_EFI_PARTITION is not set" >>$(1); sed -i "/CONFIG_MAC_PARTITION/d" $(1); echo "# CONFIG_MAC_PARTITION is not set" >>$(1); else if [ "$(PRINTER)" != "y" ]; then sed -i "/CONFIG_USB_PRINTER/d" $(1); echo "# CONFIG_USB_PRINTER is not set" >>$(1); else sed -i "/CONFIG_USB_PRINTER/d" $(1); echo "CONFIG_USB_PRINTER=m" >>$(1); fi; if [ "$(CDROM)" = "y" ]; then sed -i "/CONFIG_ISO9660_FS/d" $(1); echo "CONFIG_ISO9660_FS=m" >>$(1); sed -i "/CONFIG_JOLIET/d" $(1); echo "CONFIG_JOLIET=y" >>$(1); sed -i "/CONFIG_ZISOFS/d" $(1); echo "CONFIG_ZISOFS=y" >>$(1); sed -i "/CONFIG_UDF_FS/d" $(1); echo "CONFIG_UDF_FS=m" >>$(1); sed -i "/CONFIG_UDF_NLS/d" $(1); echo "CONFIG_UDF_NLS=y" >>$(1); fi; if [ "$(MODEM)" = "y" ]; then if [ "$(LESSMODEM)" = "y" ]; then sed -i "/CONFIG_HSO/d" $(1); echo "# CONFIG_HSO is not set" >>$(1); sed -i "/CONFIG_USB_IPHETH/d" $(1); echo "# CONFIG_USB_IPHETH is not set" >>$(1); fi; if [ "$(GOBI)" = "y" ] && [ "$(MULTIMODEM)" != "y" ]; then if [ "$(LTE_MFG)" != ".Quectel_1.6" ] && [ "$(FIBOCOM_FG621)" != "y" ]; then sed -i "/CONFIG_USB_SERIAL/d" $(1); echo "# CONFIG_USB_SERIAL is not set" >>$(1); sed -i "/CONFIG_USB_NET_QMI_WWAN/d" $(1); echo "# CONFIG_USB_NET_QMI_WWAN is not set" >>$(1); sed -i "/CONFIG_USB_WDM/d" $(1); echo "# CONFIG_USB_WDM is not set" >>$(1); fi; sed -i "/CONFIG_USB_NET_AX8817X/d" $(1); echo "# CONFIG_USB_NET_AX8817X is not set" >>$(1); sed -i "/CONFIG_USB_NET_CDCETHER/d" $(1); echo "CONFIG_USB_NET_CDCETHER=m" >>$(1); if [ "$(FIBOCOM_FG621)" != "y" ]; then sed -i "/CONFIG_USB_NET_CDC_NCM/d" $(1); echo "# CONFIG_USB_NET_CDC_NCM is not set" >>$(1); fi; sed -i "/CONFIG_USB_NET_CDC_MBIM/d" $(1); echo "# CONFIG_USB_NET_CDC_MBIM is not set" >>$(1); sed -i "/CONFIG_USB_NET_RNDIS_HOST/d" $(1); echo "# CONFIG_USB_NET_RNDIS_HOST is not set" >>$(1); sed -i "/CONFIG_USB_NET_QMI_WWAN/d" $(1); echo "# CONFIG_USB_NET_QMI_WWAN is not set" >>$(1); sed -i "/CONFIG_USB_IPHETH/d" $(1); echo "# CONFIG_USB_IPHETH is not set" >>$(1); sed -i "/CONFIG_USB_WDM/d" $(1); echo "# CONFIG_USB_WDM is not set" >>$(1); fi; else sed -i "/CONFIG_USB_SERIAL/d" $(1); echo "# CONFIG_USB_SERIAL is not set" >>$(1); sed -i "/CONFIG_USB_ACM/d" $(1); echo "# CONFIG_USB_ACM is not set" >>$(1); sed -i "/CONFIG_USB_USBNET/d" $(1); echo "# CONFIG_USB_USBNET is not set" >>$(1); sed -i "/CONFIG_USB_IPHETH/d" $(1); echo "# CONFIG_USB_IPHETH is not set" >>$(1); sed -i "/CONFIG_USB_WDM/d" $(1); echo "# CONFIG_USB_WDM is not set" >>$(1); fi; fi; if [ "$(ARMCPUSMP)" = "up" ]; then sed -i "/CONFIG_GENERIC_CLOCKEVENTS_BROADCAST/d" $(1); echo "CONFIG_HAVE_LATENCYTOP_SUPPORT=y" >>$(1); sed -i "/CONFIG_GENERIC_LOCKBREAK/d" $(1); echo "CONFIG_BROKEN_ON_SMP=y" >>$(1); sed -i "/CONFIG_TREE_RCU/d" $(1); echo "# CONFIG_TREE_RCU is not set" >>$(1); sed -i "/CONFIG_TREE_PREEMPT_RCU/d" $(1); echo "CONFIG_TREE_PREEMPT_RCU=y" >>$(1); sed -i "/CONFIG_TINY_RCU/d" $(1); echo "# CONFIG_TINY_RCU is not set" >>$(1); sed -i "/CONFIG_USE_GENERIC_SMP_HELPERS/d" $(1); sed -i "/CONFIG_STOP_MACHINE/d" $(1); sed -i "/CONFIG_MUTEX_SPIN_ON_OWNER/d" $(1); echo "# CONFIG_MUTEX_SPIN_ON_OWNER is not set" >>$(1); sed -i "/CONFIG_ARM_ERRATA_742230/d" $(1); sed -i "/CONFIG_ARM_ERRATA_742231/d" $(1); sed -i "/CONFIG_ARM_ERRATA_720789/d" $(1); sed -i "/CONFIG_SMP\b/d" $(1); echo "# CONFIG_SMP is not set" >>$(1); sed -i "/CONFIG_NR_CPUS=2/d" $(1); sed -i "/CONFIG_HOTPLUG_CPU/d" $(1); sed -i "/CONFIG_RPS=y/d" $(1); fi; if [ "$(ALPINE)" = "y" ]; then sed -i "/CONFIG_SENSORS_AMC6821/d" $(1); echo "CONFIG_SENSORS_AMC6821=m" >>$(1); sed -i "/CONFIG_THERMAL_HWMON/d" $(1); echo "CONFIG_THERMAL_HWMON=y" >>$(1); fi ; if [ "$(DUALWAN)" = "y" ]; then if [ "$(CONFIG_LINUX26)" = "y" ] || [ "$(CONFIG_LINUX30)" = "y" ]; then sed -i "/CONFIG_IP_ADVANCED_ROUTER/d" $(1); echo "CONFIG_IP_ADVANCED_ROUTER=y" >>$(1); if [ "$(ALPINE)" = "y" ] || [ "$(LANTIQ)" = "y" ] ; then echo "# CONFIG_IP_FIB_TRIE_STATS is not set" >>$(1); fi ; sed -i "/CONFIG_ASK_IP_FIB_HASH/d" $(1); echo "CONFIG_ASK_IP_FIB_HASH=y" >>$(1); sed -i "/CONFIG_IP_FIB_TRIE\b/d" $(1); echo "# CONFIG_IP_FIB_TRIE is not set" >>$(1); sed -i "/CONFIG_IP_MULTIPLE_TABLES/d" $(1); echo "CONFIG_IP_MULTIPLE_TABLES=y" >>$(1); sed -i "/CONFIG_IP_ROUTE_MULTIPATH\>/d" $(1); echo "CONFIG_IP_ROUTE_MULTIPATH=y" >>$(1); sed -i "/CONFIG_IP_ROUTE_MULTIPATH_CACHED/d" $(1); echo "# CONFIG_IP_ROUTE_MULTIPATH_CACHED is not set" >>$(1); sed -i "/CONFIG_IP_ROUTE_VERBOSE/d" $(1); echo "# CONFIG_IP_ROUTE_VERBOSE is not set" >>$(1); sed -i "/CONFIG_IP_MROUTE_MULTIPLE_TABLES/d" $(1); echo "CONFIG_IP_MROUTE_MULTIPLE_TABLES=y" >>$(1); sed -i "/CONFIG_NETFILTER_XT_MATCH_STATISTIC/d" $(1); echo "CONFIG_NETFILTER_XT_MATCH_STATISTIC=y" >>$(1); fi ; fi; if [ "$(BRCM_HOSTAPD)" = "y" ]; then sed -i "/CONFIG_WIRELESS\b/d" $(1); echo "CONFIG_WIRELESS=y" >>$(1); sed -i "/\bCONFIG_CFG80211\b/d" $(1); echo "CONFIG_CFG80211=m" >>$(1); sed -i "/CONFIG_NL80211_TESTMODE/d" $(1); echo "CONFIG_NL80211_TESTMODE=y" >>$(1); sed -i "/CONFIG_CFG80211_DEFAULT_PS/d" $(1); echo "CONFIG_CFG80211_DEFAULT_PS=y" >>$(1); sed -i "/CONFIG_BCM_HOSTAPD/d" $(1); echo "CONFIG_BCM_HOSTAPD=y" >>$(1); fi ; if [ "$(BT_CONN)" = "y" ]; then if [ "$(HND_ROUTER_AX)" = "y" ]; then sed -i "/CONFIG_BT\b/d" $(1); echo "CONFIG_BT=y" >>$(1); sed -i "/CONFIG_BT_BREDR/d" $(1); echo "CONFIG_BT_BREDR=y" >>$(1); sed -i "/CONFIG_BT_RFCOMM/d" $(1); echo "# CONFIG_BT_RFCOMM is not set" >>$(1); sed -i "/CONFIG_BT_BNEP/d" $(1); echo "# CONFIG_BT_BNEP is not set" >>$(1); sed -i "/CONFIG_BT_HIDP/d" $(1); echo "# CONFIG_BT_HIDP is not set" >>$(1); sed -i "/CONFIG_BT_HS/d" $(1); echo "CONFIG_BT_HS=y" >>$(1); sed -i "/CONFIG_BT_LE/d" $(1); echo "CONFIG_BT_LE=y" >>$(1); sed -i "/CONFIG_BT_LEDS/d" $(1); echo "# CONFIG_BT_LEDS is not set" >>$(1); sed -i "/CONFIG_BT_SELFTEST/d" $(1); echo "# CONFIG_BT_SELFTEST is not set" >>$(1); sed -i "/CONFIG_BT_DEBUGFS/d" $(1); echo "CONFIG_BT_DEBUGFS=y" >>$(1); sed -i "/CONFIG_BT_HCIBTUSB/d" $(1); echo "CONFIG_BT_HCIBTUSB=m" >>$(1); sed -i "/CONFIG_BT_HCIBTUSB_AUTOSUSPEND/d" $(1); echo "# CONFIG_BT_HCIBTUSB_AUTOSUSPEND is not set" >>$(1); sed -i "/CONFIG_BT_HCIBTUSB_BCM/d" $(1); echo "# CONFIG_BT_HCIBTUSB_BCM is not set" >>$(1); sed -i "/CONFIG_BT_HCIBTUSB_RTL/d" $(1); echo "CONFIG_BT_HCIBTUSB_RTL=y" >>$(1); sed -i "/CONFIG_BT_HCIBTSDIO/d" $(1); echo "# CONFIG_BT_HCIBTSDIO is not set" >>$(1); sed -i "/CONFIG_BT_HCIUART/d" $(1); echo "# CONFIG_BT_HCIUART is not set" >>$(1); sed -i "/CONFIG_BT_HCIBCM203X/d" $(1); echo "# CONFIG_BT_HCIBCM203X is not set" >>$(1); sed -i "/CONFIG_BT_HCIBPA10X/d" $(1); echo "# CONFIG_BT_HCIBPA10X is not set" >>$(1); sed -i "/CONFIG_BT_HCIBFUSB/d" $(1); echo "# CONFIG_BT_HCIBFUSB is not set" >>$(1); sed -i "/CONFIG_BT_HCIVHCI/d" $(1); echo "# CONFIG_BT_HCIVHCI is not set" >>$(1); sed -i "/CONFIG_BT_MRVL/d" $(1); echo "# CONFIG_BT_MRVL is not set" >>$(1); sed -i "/CONFIG_BT_ATH3K/d" $(1); echo "CONFIG_BT_ATH3K=m" >>$(1); sed -i "/CONFIG_FW_LOADER/d" $(1); echo "CONFIG_FW_LOADER=y" >>$(1); sed -i "/CONFIG_FIRMWARE_IN_KERNEL/d" $(1); echo "# CONFIG_FIRMWARE_IN_KERNEL is not set" >>$(1); sed -i "/CONFIG_EXTRA_FIRMWARE/d" $(1); echo "CONFIG_EXTRA_FIRMWARE=\"\"" >>$(1); sed -i "/CONFIG_FW_LOADER_USER_HELPER/d" $(1); echo "# CONFIG_FW_LOADER_USER_HELPER is not set" >>$(1); sed -i "/CONFIG_FW_LOADER_USER_HELPER_FALLBACK/d" $(1); echo "CONFIG_FW_LOADER_USER_HELPER_FALLBACK=y" >>$(1); sed -i "/CONFIG_TEST_FIRMWARE/d" $(1); echo "# CONFIG_TEST_FIRMWARE is not set" >>$(1); sed -i "/CONFIG_$(MODEL)/d" $(1); echo "CONFIG_$(MODEL)=y" >>$(1); elif [ "$(LANTIQ)" = "y" ]; then sed -i "/CONFIG_BT\b/d" $(1); echo "CONFIG_BT=m" >>$(1); sed -i "/CONFIG_BT_RFCOMM/d" $(1); echo "# CONFIG_BT_RFCOMM is not set" >>$(1); sed -i "/CONFIG_BT_BNEP/d" $(1); echo "# CONFIG_BT_BNEP is not set" >>$(1); sed -i "/CONFIG_BT_HIDP/d" $(1); echo "# CONFIG_BT_HIDP is not set" >>$(1); sed -i "/CONFIG_BT_HCIBTUSB/d" $(1); echo "CONFIG_BT_HCIBTUSB=m" >>$(1); sed -i "/CONFIG_BT_HCIUART/d" $(1); echo "# CONFIG_BT_HCIUART is not set" >>$(1); sed -i "/CONFIG_BT_HCIBCM203X/d" $(1); echo "# CONFIG_BT_HCIBCM203X is not set" >>$(1); sed -i "/CONFIG_BT_HCIBPA10X/d" $(1); echo "# CONFIG_BT_HCIBPA10X is not set" >>$(1); sed -i "/CONFIG_BT_HCIBFUSB/d" $(1); echo "# CONFIG_BT_HCIBFUSB is not set" >>$(1); sed -i "/CONFIG_BT_HCIVHCI/d" $(1); echo "# CONFIG_BT_HCIVHCI is not set" >>$(1); sed -i "/CONFIG_BT_MRVL/d" $(1); echo "# CONFIG_BT_MRVL is not set" >>$(1); sed -i "/CONFIG_BT_ATH3K/d" $(1); echo "CONFIG_BT_ATH3K=m" >>$(1); elif [ "$(ALPINE)" = "y" ]; then sed -i "/CONFIG_BT\b/d" $(1); echo "CONFIG_BT=y" >>$(1); sed -i "/CONFIG_BT_RFCOMM\b/d" $(1); echo "# CONFIG_BT_RFCOMM is not set" >>$(1); sed -i "/CONFIG_BT_BNEP\b/d" $(1); echo "# CONFIG_BT_BNEP is not set" >>$(1); sed -i "/CONFIG_BT_HIDP\b/d" $(1); echo "# CONFIG_BT_HIDP is not set" >>$(1); sed -i "/CONFIG_BT_HCIBTUSB\b/d" $(1); echo "# CONFIG_BT_HCIBTUSB is not set" >>$(1); sed -i "/CONFIG_BT_HCIUART\b/d" $(1); echo "CONFIG_BT_HCIUART=y" >>$(1); sed -i "/CONFIG_BT_HCIUART_H4\b/d" $(1); echo "CONFIG_BT_HCIUART_H4=y" >>$(1); sed -i "/CONFIG_BT_HCIUART_BCSP\b/d" $(1); echo "# CONFIG_BT_HCIUART_BCSP is not set" >>$(1); sed -i "/CONFIG_BT_HCIUART_RTKH5\b/d" $(1); echo "CONFIG_BT_HCIUART_RTKH5=y" >>$(1); sed -i "/CONFIG_BT_HCIUART_ATH3K\b/d" $(1); echo "# CONFIG_BT_HCIUART_ATH3K is not set" >>$(1); sed -i "/CONFIG_BT_HCIUART_LL\b/d" $(1); echo "# CONFIG_BT_HCIUART_LL is not set" >>$(1); sed -i "/CONFIG_BT_HCIUART_3WIRE\b/d" $(1); echo "# CONFIG_BT_HCIUART_3WIRE is not set" >>$(1); sed -i "/CONFIG_BT_HCIBCM203X\b/d" $(1); echo "# CONFIG_BT_HCIBCM203X is not set" >>$(1); sed -i "/CONFIG_BT_HCIBPA10X\b/d" $(1); echo "# CONFIG_BT_HCIBPA10X is not set" >>$(1); sed -i "/CONFIG_BT_HCIBFUSB\b/d" $(1); echo "# CONFIG_BT_HCIBFUSB is not set" >>$(1); sed -i "/CONFIG_BT_HCIVHCI\b/d" $(1); echo "# CONFIG_BT_HCIVHCI is not set" >>$(1); sed -i "/CONFIG_BT_MRVL\b/d" $(1); echo "# CONFIG_BT_MRVL is not set" >>$(1); fi ; fi ; sed -i "/CONFIG_CFE_NVRAM_CHK/d" $(1); if [ "$(CFE_NVRAM_CHK)" = "y" ]; then echo "CONFIG_CFE_NVRAM_CHK=y" >>$(1); else echo "# CONFIG_CFE_NVRAM_CHK is not set" >>$(1); fi; if [ "$(DEBUG)" = "y" ] || [ "$(GDB)" = "y" ]; then sed -i "/CONFIG_ELF_CORE/d" $(1); echo "CONFIG_ELF_CORE=y" >>$(1); if [ "$(BCMWL6A)" = "y" ]; then sed -i "/CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS/d" $(1); echo "# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set" >>$(1); fi; fi; sed -i "/CONFIG_DUAL_TRX/d" $(1); if [ "$(DUAL_TRX)" = "y" ]; then echo "CONFIG_DUAL_TRX=y" >>$(1); else echo "# CONFIG_DUAL_TRX is not set" >>$(1); fi; if [ "$(DUMP_OOPS_MSG)" = "y" ]; then if [ "$(BUILD_NAME)" = "RT-AC66U" ] || [ "$(BUILD_NAME)" = "RT-N66U" ]; then echo "CONFIG_DUMP_PREV_OOPS_MSG=y" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_ADDR=0x07FFE000" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_LEN=0x2000" >>$(1); elif [ "$(BUILD_NAME)" = "RT-N65U" ]; then echo "CONFIG_DUMP_PREV_OOPS_MSG=y" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_ADDR=0x01810000" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_LEN=0x2000" >>$(1); elif [ "$(BCM_7114)" = "y" ] || [ "$(BCM7)" = "y" ]; then echo "CONFIG_DUMP_PREV_OOPS_MSG=y" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_ADDR=0x80000000" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_LEN=0x3000" >>$(1); elif [ "$(BUILD_NAME)" = "RT-AC56S" ]; then echo "CONFIG_DUMP_PREV_OOPS_MSG=y" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_ADDR=0xC0522000" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_LEN=0x3000" >>$(1); elif [ "$(BCM9)" = "y" ]; then echo "CONFIG_DUMP_PREV_OOPS_MSG=y" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_ADDR=0x87000000" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_LEN=0x2000" >>$(1); elif [ "$(ARM)" = "y" ]; then echo "CONFIG_DUMP_PREV_OOPS_MSG=y" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_ADDR=0xC0000000" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_LEN=0x2000" >>$(1); elif [ "$(RALINK)" = "y" ]; then echo "CONFIG_DUMP_PREV_OOPS_MSG=y" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_ADDR=0x03300000" >>$(1); echo "CONFIG_DUMP_PREV_OOPS_MSG_BUF_LEN=0x2000" >>$(1); elif [ "$(QCA)" = "y" ]; then echo "move to platform.mak" > /dev/null ; else echo "# CONFIG_DUMP_PREV_OOPS_MSG is not set" >>$(1); fi; else echo "# CONFIG_DUMP_PREV_OOPS_MSG is not set" >>$(1); fi; sed -i "/CONFIG_JFFS_NVRAM/d" $(1); if [ "$(JFFS_NVRAM)" = "y" ]; then echo "CONFIG_JFFS_NVRAM=y" >>$(1); else echo "# CONFIG_JFFS_NVRAM is not set" >>$(1); fi; sed -i "/CONFIG_RTAC3200/d" $(1); if [ "$(BUILD_NAME)" = "RT-AC3200" ]; then echo "CONFIG_RTAC3200=y" >>$(1); else echo "# CONFIG_RTAC3200 is not set" >>$(1); fi; sed -i "/CONFIG_RTAC88U/d" $(1); if [ "$(BUILD_NAME)" = "RT-AC88U" ]; then echo "CONFIG_RTAC88U=y" >>$(1); else echo "# CONFIG_RTAC88U is not set" >>$(1); fi; if [ "$(UUPLUGIN)" = "y" ]; then if [ "$(BUILD_NAME)" = "RT-AC86U" ] || [ "$(BUILD_NAME)" = "GT-AC2900" ] || [ "$(BUILD_NAME)" = "GT-AC5300" ] || [ "$(BUILD_NAME)" = "RT-AX88U" ] || [ "$(BUILD_NAME)" = "RT-AX92U" ] || [ "$(BUILD_NAME)" = "GT-AX11000" ] || [ "$(BUILD_NAME)" = "GT-AXE11000" ] || [ "$(BUILD_NAME)" = "RT-AC68U_V4" ] || [ "$(BUILD_NAME)" = "GT-AX11000PRO" ]; then sed -i "/CONFIG_BCM_PKTRUNNER_WAR_SKIP_TUN/d" $(1); echo "CONFIG_BCM_PKTRUNNER_WAR_SKIP_TUN=y" >>$(1); fi; fi; if [ "$(BUILD_NAME)" = "RT-AX86U" ] || [ "$(BUILD_NAME)" = "RT-AX68U" ]; then sed -i "/CONFIG_BCM_PKTRUNNER_WAR_SKIP_TUN/d" $(1); echo "CONFIG_BCM_PKTRUNNER_WAR_SKIP_TUN=y" >>$(1); fi; if [ "$(TCPLUGIN)" = "y" ] || [ "$(SWRT)" = "y" ]; then sed -i "/CONFIG_NETFILTER_XT_SET/d" $(1); echo "CONFIG_NETFILTER_XT_SET=y" >>$(1); sed -i "/CONFIG_IP_SET/d" $(1); echo "CONFIG_IP_SET=m" >>$(1); sed -i "/CONFIG_IP_SET_MAX/d" $(1); echo "CONFIG_IP_SET_MAX=256" >>$(1); sed -i "/CONFIG_IP_SET_BITMAP_IP/d" $(1); echo "CONFIG_IP_SET_BITMAP_IP=m" >>$(1); sed -i "/CONFIG_IP_SET_BITMAP_IPMAC/d" $(1); echo "CONFIG_IP_SET_BITMAP_IPMAC=m" >>$(1); sed -i "/CONFIG_IP_SET_BITMAP_PORT/d" $(1); echo "CONFIG_IP_SET_BITMAP_PORT=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_IP/d" $(1); echo "CONFIG_IP_SET_HASH_IP=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_IPMARK/d" $(1); echo "CONFIG_IP_SET_HASH_IPMARK=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_IPPORT/d" $(1); echo "CONFIG_IP_SET_HASH_IPPORT=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_IPPORTIP/d" $(1); echo "CONFIG_IP_SET_HASH_IPPORTIP=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_IPPORTNET/d" $(1); echo "CONFIG_IP_SET_HASH_IPPORTNET=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_MAC/d" $(1); echo "CONFIG_IP_SET_HASH_MAC=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_NET/d" $(1); echo "CONFIG_IP_SET_HASH_NET=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_NETNET/d" $(1); echo "CONFIG_IP_SET_HASH_NETNET=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_NETPORT/d" $(1); echo "CONFIG_IP_SET_HASH_NETPORT=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_NETPORTNET/d" $(1); echo "CONFIG_IP_SET_HASH_NETPORTNET=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_NETIFACE/d" $(1); echo "CONFIG_IP_SET_HASH_NETIFACE=m" >>$(1); sed -i "/CONFIG_IP_SET_LIST_SET/d" $(1); echo "CONFIG_IP_SET_LIST_SET=m" >>$(1); sed -i "/CONFIG_IP_SET_HASH_IPMAC/d" $(1); echo "CONFIG_IP_SET_HASH_IPMAC=m" >>$(1); fi; if [ "$(GMAC3)" = "y" ]; then sed -i "/CONFIG_BCM_GMAC3/d" $(1); echo "CONFIG_BCM_GMAC3=y" >>$(1); sed -i "/CONFIG_BCM_FA/d" $(1); echo "# CONFIG_BCM_FA is not set" >>$(1); else sed -i "/CONFIG_BCM_GMAC3/d" $(1); echo "# CONFIG_BCM_GMAC3 is not set" >>$(1); if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_BCM_FA/d" $(1); echo "CONFIG_BCM_FA=y" >>$(1); fi; fi; if [ "$(NODHD)" = "y" ]; then sed -i "/CONFIG_BCM_GMAC3=y/d" $(1); echo "# CONFIG_BCM_GMAC3 is not set" >>$(1); sed -i "/CONFIG_BCM_FA/d" $(1); echo "CONFIG_BCM_FA=y" >>$(1); sed -i "/CONFIG_DHDAP/d" $(1); echo "# CONFIG_DHDAP is not set" >>$(1); sed -i "/CONFIG_DPSTA/d" $(1); echo "# CONFIG_DPSTA is not set" >>$(1); fi; if [ "$(DHDAP)" = "y" ]; then if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_DHDAP/d" $(1); echo "CONFIG_DHDAP=m" >>$(1); fi; sed -i "/CONFIG_WL=m/d" $(1); echo "# CONFIG_WL is not set" >>$(1); sed -i "/CONFIG_WL_USE_APSTA/d" $(1); echo "# CONFIG_WL_USE_APSTA is not set" >>$(1); sed -i "/CONFIG_WL_ALL_PASSIVE_RUNTIME/d" $(1); sed -i "/CONFIG_WAPI/d" $(1); echo "# CONFIG_WAPI is not set" >>$(1); sed -i "/CONFIG_WL_USE_AP/d" $(1); echo "# CONFIG_WL_USE_AP is not set" >>$(1); sed -i "/CONFIG_WL_USE_AP_SDSTD/d" $(1); echo "# CONFIG_WL_USE_AP_SDSTD is not set" >>$(1); sed -i "/CONFIG_WL_USE_STA/d" $(1); echo "# CONFIG_WL_USE_STA is not set" >>$(1); sed -i "/CONFIG_WL_USE_AP_ONCHIP_G/d" $(1); echo "# CONFIG_WL_USE_AP_ONCHIP_G is not set" >>$(1); sed -i "/CONFIG_WL_USE_STA_ONCHIP_G/d" $(1); echo "# CONFIG_WL_USE_STA_ONCHIP_G is not set" >>$(1); sed -i "/CONFIG_WL_USE_APSTA_ONCHIP_G/d" $(1); echo "# CONFIG_WL_USE_APSTA_ONCHIP_G is not set" >>$(1); sed -i "/CONFIG_WL_ALL_PASSIVE_ON/d" $(1); echo "# CONFIG_WL_ALL_PASSIVE_ON is not set" >>$(1); sed -i "/CONFIG_DPSTA/d" $(1); echo "# CONFIG_DPSTA is not set" >>$(1); sed -i "/CONFIG_PLC/d" $(1); echo "# CONFIG_PLC is not set" >>$(1); else sed -i "/CONFIG_DHDAP/d" $(1); echo "# CONFIG_DHDAP is not set" >>$(1); sed -i "/CONFIG_BCM_DHD_RUNNER/d" $(1); echo "# CONFIG_BCM_DHD_RUNNER is not set" >>$(1); sed -i "/CONFIG_BCM_DHD_RUNNER_GSO/d" $(1); echo "# CONFIG_BCM_DHD_RUNNER_GSO is not set" >>$(1); fi; sed -i "/CONFIG_HND_WL/d" $(1); if [ "$(HND_WL)" = "y" ]; then echo "CONFIG_HND_WL=y" >>$(1); else echo "# CONFIG_HND_WL is not set" >>$(1); fi; if [ "$(DPSTA)" = "y" ]; then sed -i "/CONFIG_DPSTA/d" $(1); echo "CONFIG_DPSTA=m" >>$(1); else sed -i "/CONFIG_DPSTA/d" $(1); echo "# CONFIG_DPSTA is not set" >>$(1); fi; if [ "$(RPAX58)" = "y" ]; then sed -i "/CONFIG_BCM_WLCLED/d" $(1); echo "# CONFIG_BCM_WLCLED is not set" >>$(1); fi; sed -i "/CONFIG_LINUX_MTD/d" $(1); if [ "$(LINUX_MTD)" = "" ]; then echo "CONFIG_LINUX_MTD=32" >>$(1); else echo "CONFIG_LINUX_MTD=$(LINUX_MTD)" >>$(1); fi; sed -i "/CONFIG_NF_CONNTRACK_EVENTS/d" $(1); if [ "$(BWDPI)" = "y" ] || [ "$(HND_ROUTER)" = "y" -o "$(CONNTRACK)" = "y" ] || [ "$(PARENTAL2)" = "y" -o "$(PARENTAL)" = "y" ] && [ "$(CONFIG_BCMWL5)" = "y" ] && [ "$(ARM)" = "y" ]; then echo "CONFIG_NF_CONNTRACK_EVENTS=y" >>$(1); else echo "# CONFIG_NF_CONNTRACK_EVENTS is not set" >>$(1); fi; if [ "$(CONNTRACK)" = "y" ] || [ "$(PARENTAL2)" = "y" -o "$(PARENTAL)" = "y" ] && [ "$(CONFIG_BCMWL5)" = "y" ] && [ "$(ARM)" = "y" ]; then sed -i "/CONFIG_NF_CT_NETLINK/d" $(1); echo "CONFIG_NF_CT_NETLINK=y" >>$(1); if [ "$(HND_ROUTER_AX_675X)" = "y" ] || [ "$(HND_ROUTER_AX_6756)" = "y" ]; then sed -i "/CONFIG_NF_CT_NETLINK_TIMEOUT/d" $(1); echo "# CONFIG_NF_CT_NETLINK_TIMEOUT is not set" >>$(1); fi; fi; if [ "$(NFCM)" = "y" ]; then sed -i "/CONFIG_NF_CT_NETLINK/d" $(1); echo "CONFIG_NF_CT_NETLINK=y" >> $(1); sed -i "/CONFIG_NETFILTER_NETLINK_GLUE_CT/d" $(1); echo "# CONFIG_NETFILTER_NETLINK_GLUE_CT is not set" >> $(1); sed -i "/CONFIG_NF_CT_NETLINK_TIMEOUT/d" $(1); echo "# CONFIG_NF_CT_NETLINK_TIMEOUT is not set" >> $(1); sed -i "/CONFIG_NETFILTER_NETLINK_QUEUE_CT/d" $(1); echo "# CONFIG_NETFILTER_NETLINK_QUEUE_CT is not set" >> $(1); elif [ "$(NFCM)" = "n" ] ; then sed -i "/CONFIG_NF_CT_NETLINK/d" $(1); echo "# CONFIG_NF_CT_NETLINK is not set" >> $(1); sed -i "/CONFIG_NF_CT_NETLINK_TIMEOUT/d" $(1); echo "# CONFIG_NF_CT_NETLINK_TIMEOUT is not set" >> $(1); sed -i "/CONFIG_NETFILTER_NETLINK_QUEUE_CT/d" $(1); echo "# CONFIG_NETFILTER_NETLINK_QUEUE_CT is not set" >> $(1); else echo "# CONFIG_NFCM is not set" >> $(1); fi; if [ "$(BWDPI)" = "y" ] && [ "$(LANTIQ)" = "y" ]; then sed -i "/CONFIG_NF_CONNTRACK_EVENTS/d" $(1); echo "CONFIG_NF_CONNTRACK_EVENTS=y" >>$(1); fi; if [ "$(BWDPI)" = "y" ] && [ "$(LANTIQ)" = "y" ]; then sed -i "/CONFIG_NF_CONNTRACK_EVENTS/d" $(1); echo "CONFIG_NF_CONNTRACK_EVENTS=y" >>$(1); fi; if [ "$(BWDPI)" = "y" ]; then sed -i "/CONFIG_NET_SCH_HTB/d" $(1); echo "CONFIG_NET_SCH_HTB=y" >>$(1); sed -i "/CONFIG_NET_SCH_SFQ/d" $(1); echo "CONFIG_NET_SCH_SFQ=y" >>$(1); sed -i "/CONFIG_CLS_U32_PERF/d" $(1); echo "CONFIG_CLS_U32_PERF=y" >>$(1); sed -i "/CONFIG_CLS_U32_MARK/d" $(1); echo "CONFIG_CLS_U32_MARK=y" >>$(1); sed -i "/CONFIG_NF_CONNTRACK_EVENTS/d" $(1); echo "CONFIG_NF_CONNTRACK_EVENTS=y" >>$(1); fi; if [ "$(USB_DEBUG)" = "y" ]; then sed -i "/CONFIG_USB_DEBUG/d" $(1); echo "CONFIG_USB_DEBUG=y" >>$(1); sed -i "/CONFIG_DEBUG_FS/d" $(1); echo "CONFIG_DEBUG_FS=y" >>$(1); fi; if [ "$(TFAT)" = "y" ]; then sed -i "/CONFIG_MSDOS_FS/d" $(1); echo "# CONFIG_MSDOS_FS is not set" >>$(1); sed -i "/CONFIG_VFAT_FS/d" $(1); echo "# CONFIG_VFAT_FS is not set" >>$(1); fi; if [ "$(HFS)" = "paragon" ] || [ "$(HFS)" = "tuxera" ]; then sed -i "/CONFIG_HFS_FS/d" $(1); echo "# CONFIG_HFS_FS is not set" >>$(1); sed -i "/CONFIG_HFSPLUS_FS\>/d" $(1); echo "# CONFIG_HFSPLUS_FS is not set" >>$(1); fi; if [ "$(BLINK_LED)" = "y" ]; then sed -i "/CONFIG_USB_BUS_STATS/d" $(1); echo "CONFIG_USB_BUS_STATS=y" >>$(1); else sed -i "/CONFIG_USB_BUS_STATS/d" $(1); echo "# CONFIG_USB_BUS_STATS is not set" >>$(1); fi; if [ "$(I2CTOOLS)" = "y" ]; then sed -i "/CONFIG_I2C\>/d" $(1); echo "CONFIG_I2C=y" >>$(1); sed -i "/CONFIG_I2C_CHARDEV/d" $(1); echo "CONFIG_I2C_CHARDEV=y" >>$(1); sed -i "/CONFIG_I2C_MUX/d" $(1); echo "# CONFIG_I2C_MUX is not set" >>$(1); fi; if [ "$(DEBUGFS)" = "y" ]; then sed -i "/CONFIG_DEBUG_FS/d" $(1); echo "CONFIG_DEBUG_FS=y" >>$(1); sed -i "/CONFIG_USB_MON/d" $(1); echo "CONFIG_USB_MON=m" >>$(1); if [ "$(ARM)" = "y" ]; then sed -i "/CONFIG_GCOV_KERNEL/d" $(1); echo "# CONFIG_GCOV_KERNEL is not set" >>$(1); sed -i "/CONFIG_L2TP_DEBUGFS/d" $(1); echo "# CONFIG_L2TP_DEBUGFS is not set" >>$(1); sed -i "/CONFIG_JBD_DEBUG/d" $(1); echo "# CONFIG_JBD_DEBUG is not set" >>$(1); sed -i "/CONFIG_JBD2_DEBUG/d" $(1); echo "# CONFIG_JBD2_DEBUG is not set" >>$(1); sed -i "/CONFIG_LKDTM/d" $(1); echo "# CONFIG_LKDTM is not set" >>$(1); sed -i "/CONFIG_DYNAMIC_DEBUG/d" $(1); echo "# CONFIG_DYNAMIC_DEBUG is not set" >>$(1); fi; fi; if [ "$(BONDING)" = "y" ]; then sed -i "/CONFIG_BONDING/d" $(1); echo "CONFIG_BONDING=m" >>$(1); fi; if [ "$(BCM_7114)" = "y" ]; then sed -i "/CONFIG_CR4_OFFLOAD/d" $(1); echo "# CONFIG_CR4_OFFLOAD is not set" >>$(1); sed -i "/CONFIG_PLAT_UART_CLOCKS/d" $(1); echo "# CONFIG_PLAT_UART_CLOCKS is not set" >>$(1); fi; sed -i "/CONFIG_MFGFW/d" $(1); if [ "$(MFGFW)" = "y" ]; then echo "CONFIG_MFGFW=y" >>$(1); else echo "# CONFIG_MFGFW is not set" >>$(1); fi; if [ "$(BCM9)" = "y" ]; then sed -i "/CONFIG_CR4_OFFLOAD/d" $(1); echo "# CONFIG_CR4_OFFLOAD is not set" >>$(1); sed -i "/CONFIG_PLAT_MUX_CONSOLE_CCB/d" $(1); echo "# CONFIG_PLAT_MUX_CONSOLE_CCB is not set" >>$(1); sed -i "/CONFIG_PLAT_GPIOLIB/d" $(1); echo "# CONFIG_PLAT_GPIOLIB is not set" >>$(1); sed -i "/CONFIG_PLAT_UART_CLOCKS/d" $(1); echo "# CONFIG_PLAT_UART_CLOCKS is not set" >>$(1); sed -i "/CONFIG_GENERIC_GPIO/d" $(1); echo "# CONFIG_GENERIC_GPIO is not set" >>$(1); sed -i "/CONFIG_BCM_GMAC3/d" $(1); echo "# CONFIG_BCM_GMAC3 is not set" >>$(1); sed -i "/CONFIG_DHDAP/d" $(1); echo "# CONFIG_DHDAP is not set" >>$(1); sed -i "/CONFIG_YAFFS_FS/d" $(1); echo "# CONFIG_YAFFS_FS is not set" >>$(1); fi; if [ "$(RTAC1200G)" = "y" ]; then sed -i "/CONFIG_MTD_BRCMNAND/d" $(1); echo "# CONFIG_MTD_BRCMNAND is not set" >>$(1); sed -i "/CONFIG_MTD_BRCMNAND/d" $(1); echo "# CONFIG_MTD_BRCMNAND is not set" >>$(1); sed -i "/CONFIG_MTD_NFLASH/d" $(1); echo "# CONFIG_MTD_NFLASH is not set" >>$(1); sed -i "/CONFIG_MTD_NAND_ECC/d" $(1); echo "# CONFIG_MTD_NAND_ECC is not set" >>$(1); sed -i "/CONFIG_MTD_NAND/d" $(1); echo "# CONFIG_MTD_NAND is not set" >>$(1); sed -i "/CONFIG_MTD_NAND_IDS/d" $(1); echo "# CONFIG_MTD_NAND_I 
DS is not set" >>$(1); sed -i "/CONFIG_MTD_BCMCONF_PARTS/d" $(1); echo "# CONFIG_MTD_BCMCONF_PARTS is not set" >>$(1); fi; if [ "$(RGMII_BCM_FA)" = "y" ]; then sed -i "/CONFIG_RGMII_BCM_FA/d" $(1); echo "CONFIG_RGMII_BCM_FA=y" >>$(1); fi; if [ "$(SWITCH2)" = "RTL8365MB" ]; then sed -i "/CONFIG_RTL8370MB/d" $(1); echo "# CONFIG_RTL8370MB is not set" >>$(1); sed -i "/CONFIG_RTL8365MB/d" $(1); echo "CONFIG_RTL8365MB=m" >>$(1); else if [ "$(SWITCH2)" = "RTL8370MB" ]; then sed -i "/CONFIG_RTL8365MB/d" $(1); echo "# CONFIG_RTL8365MB is not set" >>$(1); sed -i "/CONFIG_RTL8370MB/d" $(1); echo "CONFIG_RTL8370MB=m" >>$(1); else if [ "$(SWITCH2)" = "" ]; then sed -i "/CONFIG_RTL8365MB/d" $(1); echo "# CONFIG_RTL8365MB is not set" >>$(1); sed -i "/CONFIG_RTL8370MB/d" $(1); echo "# CONFIG_RTL8370MB is not set" >>$(1); fi; fi; fi; if [ "$(BCM_MMC)" = "y" ]; then sed -i "/CONFIG_MMC/d" $(1); echo "CONFIG_MMC=y" >>$(1); sed -i "/CONFIG_MMC_BLOCK/d" $(1); echo "CONFIG_MMC_BLOCK=y" >>$(1); sed -i "/CONFIG_MMC_BLOCK_BOUNCE/d" $(1); echo "CONFIG_MMC_BLOCK_BOUNCE=y" >>$(1); sed -i "/CONFIG_MMC_TEST/d" $(1); echo "# CONFIG_MMC_TEST is not set" >>$(1); sed -i "/CONFIG_IWMC3200TOP/d" $(1); echo "# CONFIG_IWMC3200TOP is not set" >>$(1); sed -i "/CONFIG_MMC_DEBUG/d" $(1); echo "CONFIG_MMC_DEBUG=y" >>$(1); sed -i "/CONFIG_MMC_UNSAFE_RESUME/d" $(1); echo "# CONFIG_MMC_UNSAFE_RESUME is not set" >>$(1); sed -i "/CONFIG_SDIO_UART/d" $(1); echo "# CONFIG_SDIO_UART is not set" >>$(1); sed -i "/CONFIG_MMC_SDHCI/d" $(1); echo "CONFIG_MMC_SDHCI=y" >>$(1); sed -i "/CONFIG_MMC_SDHCI_PCI/d" $(1); echo "CONFIG_MMC_SDHCI_PCI=y" >>$(1); sed -i "/CONFIG_MMC_RICOH_MMC/d" $(1); echo "# CONFIG_MMC_RICOH_MMC is not set" >>$(1); sed -i "/CONFIG_MMC_SDHCI_PLTFM/d" $(1); echo "# CONFIG_MMC_SDHCI_PLTFM is not set" >>$(1); sed -i "/CONFIG_MMC_TIFM_SD/d" $(1); echo "# CONFIG_MMC_TIFM_SD is not set" >>$(1); sed -i "/CONFIG_MMC_CB710/d" $(1); echo "# CONFIG_MMC_CB710 is not set" >>$(1); sed -i "/CONFIG_MMC_VIA_SDMMC/d" $(1); echo "# CONFIG_MMC_VIA_SDMMC is not set" >>$(1); sed -i "/CONFIG_MMC_SDHCI_IO_ACCESSORS/d" $(1); echo "CONFIG_MMC_SDHCI_IO_ACCESSORS=y" >>$(1); fi; if [ "$(HND_ROUTER)" != "y" ]; then sed -i "/CONFIG_BCM_RECVFILE/d" $(1); if [ "$(BCM_RECVFILE)" = "y" ]; then echo "CONFIG_BCM_RECVFILE=y" >>$(1); else echo "# CONFIG_BCM_RECVFILE is not set" >>$(1); fi; fi; if [ "$(IPV6S46)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/CONFIG_IPV6_TUNNEL/d" $(1); echo "CONFIG_IPV6_TUNNEL=m" >>$(1); fi; if [ "$(IPSEC)" = "y" ] || [ "$(IPSEC)" = "QUICKSEC" ] || [ "$(IPSEC)" = "STRONGSWAN" ]; then sed -i "/CONFIG_XFRM is not set/d" $(1); echo "CONFIG_XFRM=y" >>$(1); sed -i "/CONFIG_XFRM_USER is not set/d" $(1); echo "CONFIG_XFRM_USER=m" >>$(1); sed -i "/CONFIG_NET_KEY is not set/d" $(1); echo "CONFIG_NET_KEY=y" >>$(1); sed -i "/ CONFIG_NETFILTER_XT_MATCH_POLICY is not set/d" $(1); echo "CONFIG_NETFILTER_XT_MATCH_POLICY=y" >>$(1); sed -i "/CONFIG_IP_ROUTE_VERBOSE is not set/d" $(1); echo "CONFIG_IP_ROUTE_VERBOSE=y" >>$(1); sed -i "/CONFIG_INET is not set/d" $(1); echo "CONFIG_INET=y" >>$(1); sed -i "/CONFIG_INET_AH is not set/d" $(1); echo "CONFIG_INET_AH=m" >>$(1); sed -i "/CONFIG_INET_ESP is not set/d" $(1); echo "CONFIG_INET_ESP=m" >>$(1); sed -i "/CONFIG_INET_IPCOMP is not set/d" $(1); echo "CONFIG_INET_IPCOMP=m" >>$(1); sed -i "/CONFIG_INET_XFRM_TUNNEL is not set/d" $(1); echo "CONFIG_INET_XFRM_TUNNEL=y" >>$(1); sed -i "/CONFIG_INET_TUNNEL is not set/d" $(1); echo "CONFIG_INET_TUNNEL=y" >>$(1); sed -i "/CONFIG_INET_XFRM_MODE_TRANSPORT is not set/d" $(1); echo "CONFIG_INET_XFRM_MODE_TRANSPORT=y" >>$(1); sed -i "/CONFIG_INET_XFRM_MODE_TUNNEL is not set/d" $(1); echo "CONFIG_INET_XFRM_MODE_TUNNEL=y" >>$(1); sed -i "/CONFIG_NETFILTER is not set/d" $(1); echo "CONFIG_NETFILTER=y" >>$(1); sed -i "/CONFIG_NETFILTER_XTABLES is not set/d" $(1); echo "CONFIG_NETFILTER_XTABLES=y" >>$(1); sed -i "/CONFIG_NETFILTER_XT_MATCH_POLICY is not set/d" $(1); echo "CONFIG_NETFILTER_XT_MATCH_POLICY=y" >>$(1); echo "# CONFIG_XFRM_SUB_POLICY is not set" >>$(1); echo "# CONFIG_XFRM_MIGRATE is not set" >>$(1); echo "# CONFIG_XFRM_STATISTICS is not set" >>$(1); echo "# CONFIG_NET_KEY_MIGRATE is not set" >>$(1); if [ "$(IPV6SUPP)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/CONFIG_INET6_AH is not set/d" $(1); echo "CONFIG_INET6_AH=y" >>$(1); sed -i "/CONFIG_INET6_ESP is not set/d" $(1); echo "CONFIG_INET6_ESP=y" >>$(1); sed -i "/CONFIG_INET6_IPCOMP is not set/d" $(1); echo "CONFIG_INET6_IPCOMP=y" >>$(1); sed -i "/CONFIG_INET6_XFRM_TUNNEL is not set/d" $(1); echo "CONFIG_INET6_XFRM_TUNNEL=y" >>$(1); sed -i "/CONFIG_INET6_TUNNEL is not set/d" $(1); echo "CONFIG_INET6_TUNNEL=y" >>$(1); sed -i "/CONFIG_INET6_XFRM_MODE_TRANSPORT is not set/d" $(1); echo "CONFIG_INET6_XFRM_MODE_TRANSPORT=y" >>$(1); sed -i "/CONFIG_INET6_XFRM_MODE_TUNNEL is not set/d" $(1); echo "CONFIG_INET6_XFRM_MODE_TUNNEL=y" >>$(1); sed -i "/CONFIG_IPV6_MULTIPLE_TABLES is not set/d" $(1); echo "CONFIG_IPV6_MULTIPLE_TABLES=y" >>$(1); sed -i "/CONFIG_INET_XFRM_MODE_BEET is not set/d" $(1); echo "CONFIG_INET_XFRM_MODE_BEET=y" >>$(1); sed -i "/CONFIG_INET6_XFRM_MODE_BEET is not set/d" $(1); echo "CONFIG_INET6_XFRM_MODE_BEET=y" >>$(1); fi; sed -i "/CONFIG_CRYPTO_NULL is not set/d" $(1); echo "CONFIG_CRYPTO_NULL=y" >>$(1); sed -i "/CONFIG_CRYPTO_SHA256 is not set/d" $(1); echo "CONFIG_CRYPTO_SHA256=y" >>$(1); sed -i "/CONFIG_CRYPTO_SHA512 is not set/d" $(1); echo "CONFIG_CRYPTO_SHA512=y" >>$(1); fi; if [ "$(WTFAST)" = "y" ]; then sed -i "/CONFIG_NETFILTER_TPROXY/d" $(1); echo "CONFIG_NETFILTER_TPROXY=m" >>$(1); sed -i "/CONFIG_NETFILTER_XT_MATCH_COMMENT/d" $(1); echo "CONFIG_NETFILTER_XT_MATCH_COMMENT=m" >>$(1); sed -i "/CONFIG_NETFILTER_XT_MATCH_SOCKET/d" $(1); echo "CONFIG_NETFILTER_XT_MATCH_SOCKET=m" >>$(1); sed -i "/CONFIG_NETFILTER_XT_TARGET_TPROXY/d" $(1); echo "CONFIG_NETFILTER_XT_TARGET_TPROXY=m" >>$(1); fi; if [ "$(OPENVPN)" = "y" ]; then sed -i "/CONFIG_TUN\>/d" $(1); echo "CONFIG_TUN=m" >>$(1); if [ "$(IPV6SUPP)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/CONFIG_NF_NAT_MASQUERADE_IPV6\>/d" $(1); echo "CONFIG_NF_NAT_MASQUERADE_IPV6=y" >>$(1); sed -i "/CONFIG_IP6_NF_NAT\>/d" $(1); echo "CONFIG_IP6_NF_NAT=y" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_MASQUERADE\>/d" $(1); echo "CONFIG_IP6_NF_TARGET_MASQUERADE=y" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_NPT\>/d" $(1); echo "CONFIG_IP6_NF_TARGET_NPT=y" >>$(1); fi; fi; if [ "$(VPN_FUSION)" = "y" ]; then sed -i "/CONFIG_PPP_MPPE/d" $(1); echo "CONFIG_PPP_MPPE=y" >>$(1); sed -i "/CONFIG_PPP_DEFLATE/d" $(1); echo "CONFIG_PPP_DEFLATE=y" >>$(1); sed -i "/CONFIG_PPP_BSDCOMP/d" $(1); echo "CONFIG_PPP_BSDCOMP=y" >>$(1); sed -i "/CONFIG_IP_NF_TARGET_ROUTE/d" $(1); echo "CONFIG_IP_NF_TARGET_ROUTE=y" >>$(1); sed -i "/CONFIG_PPP_SYNC_TTY is not set/d" $(1); echo "CONFIG_PPP_SYNC_TTY=y" >>$(1); sed -i "/CONFIG_PPP_MULTILINK/d" $(1); echo "CONFIG_PPP_MULTILINK=y" >>$(1); fi; if [ "$(DSL_HOST)" = "y" ]; then sed -i "/CONFIG_ATM is not set\>/d" $(1); echo "CONFIG_ATM=y" >>$(1); fi; sed -i "/CONFIG_BATMAN_ADV\b/d" $(1); if [ "$(BATMAN)" = "y" ]; then echo "CONFIG_BATMAN_ADV=m" >>$(1); else echo "# CONFIG_BATMAN_ADV is not set" >>$(1); fi; sed -i "/CONFIG_NETFILTER_ASUS_FILTER\b/d" $(1); if [ "$(ASUS_FLTR)" = "y" ]; then echo "CONFIG_NETFILTER_ASUS_FILTER=m" >>$(1); else echo "# CONFIG_NETFILTER_ASUS_FILTER is not set" >>$(1); fi; if [ "$(BUILD_NAME)" = "RT-AX55" ] || [ "$(BUILD_NAME)" = "RT-AX1800" ]; then sed -i "/CONFIG_BCM_PKTFLOW_MAX_FLOWS/d" $(1); echo "CONFIG_BCM_PKTFLOW_MAX_FLOWS=4096" >>$(1); fi; if [ "$(BUILD_NAME)" = "RT-AX95Q" ] || [ "$(BUILD_NAME)" = "RT-AXE95Q" ] || [ "$(BUILD_NAME)" = "RT-AX56U" ] || [ "$(BUILD_NAME)" = "RT-AX56_XD4" ]; then sed -i "/CONFIG_DEBUG_SLAB\b/d" $(1); echo "# CONFIG_DEBUG_SLAB is not set" >>$(1); fi; if [ "$(BUILD_NAME)" = "RP-AX58" ] ; then sed -i "/CONFIG_MTD_BCM_SPI_NAND/d" $(1); echo "# CONFIG_MTD_BCM_SPI_NAND is not set" >>$(1); fi; if [ "$(WIREGUARD)" = "y" ]; then sed -i "/CONFIG_WIREGUARD/d" $(1); echo "CONFIG_WIREGUARD=m" >>$(1); sed -i "/CONFIG_WIREGUARD_DEBUG/d" $(1); echo "# CONFIG_WIREGUARD_DEBUG is not set" >>$(1); if [ "$(IPV6SUPP)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/CONFIG_NF_NAT_IPV6\>/d" $(1); echo "CONFIG_NF_NAT_IPV6=y" >>$(1); sed -i "/CONFIG_NF_NAT_MASQUERADE_IPV6\>/d" $(1); echo "CONFIG_NF_NAT_MASQUERADE_IPV6=y" >>$(1); sed -i "/CONFIG_IP6_NF_NAT\>/d" $(1); echo "CONFIG_IP6_NF_NAT=y" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_MASQUERADE\>/d" $(1); echo "CONFIG_IP6_NF_TARGET_MASQUERADE=y" >>$(1); sed -i "/CONFIG_IP6_NF_TARGET_NPT\>/d" $(1); echo "CONFIG_IP6_NF_TARGET_NPT=y" >>$(1); fi; else sed -i "/CONFIG_WIREGUARD/d" $(1); echo "# CONFIG_WIREGUARD is not set" >>$(1); fi; )
	$(call platformKernelConfig, $(1))
	$(call extraKernelConfig, $(1))
endef
# makefile (from 'platform.mak', line 54)
MUSL32 = y
# makefile (from 'target.mak', line 348)
RT-N11P_B1 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7628=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y SHP=y RTN11PB1=y ODMPID=y NEW_RGDM=y RA_SKU=y REPEATER=y  RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y BTN_WPS_RST=y DISABLE_NETWORKMAP=n WAN_AT_P4=y LANWAN_LED=y BLINK_LED=y SINGLE_2G=y VPNC=y YANDEXDNS=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y BTN_WPS_ALLLED=y SSH=y NEWSSID_REV2=y LAN50=y ATCOVER=y GETREALIP=y REBOOT_SCHEDULE=y EDCCA_NEW=y TEMPROOTFS=y BOOT_FLASH_TYPE=SPI DRAM=32M BUILD_NAME="RT-N11P_B1" EXTRA_KERNEL_CONFIGS="MT7628_BAUDRATE=57600 RT2880_DRAM_32M=y UBOOT_CMDLINE=y MODEL_RTN11PB1=y SHRINK_PAGECACHE=y"
# makefile (from 'platform.mak', line 16)
OPENSSL11 = y
# makefile (from 'dsl.mak', line 1)
MAKEFILE_LIST :=  Makefile target.mak version.conf platform.mak dsl.mak
# makefile (from 'platform.mak', line 1045)
PARALLEL_BUILD := -j8
# automatic
@F = $(notdir $@)
# makefile (from 'Makefile', line 359)
SFINFO = 0
# makefile (from 'target.mak', line 63)
GT-AX6000 := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="GT-AX6000" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y DPSTA=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV6=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=y LOGO_LED=n BCM_CEVENTD=y UTF8_SSID=y RGBLED=n AURASYNC=n I2CTOOLS=n AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y ROG_UI=y AMASDB=n CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=y IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=n CAPTCHA=y OUTFOX=y GAME_MODE=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=n BCM_CLED=n SW_CTRL_ALLLED=y BONDING=y BONDING_WAN=y ACL96=y LACP=y DHD_6715B0=y GOOGLE_ASST=y OUTFOX=y IPV6S46=y
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# makefile (from 'target.mak', line 803)
RT-AC88S := IPV6SUPP=y HTTPS=y QCA=y IPQ806X=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="network" AUTODICT=y LANWAN_LED=y BUILD_NAME="RT-AC88S" RTAC88S=y SHP=y NVRAM_SIZE=0x10000 NTFS="open" ODMPID=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y FINDASUS=y STAINFO=y WEBDAV=y SMARTSYNCBASE=y LAN50=y ATCOVER=y GETREALIP=y MTWANCFG=y BOOT_FLASH_TYPE=SPI WIFI_CHIP=CASCADE SWITCH_CHIP=RTL8370MB_PHY_QCA8033_X2 PWRSAVE=y XHCI=y ATEUSB3_FORCE=y BLINK_LED=y WANRED_LED=y PWRRED_LED=y FO_LED=y WANLEDX2=y EJUSB_BTN=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y JFFS2=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS=""
# makefile (from 'Makefile', line 110)
SDK_DIR := 
# makefile (from 'target.mak', line 526)
RT-MIR3G := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA4=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" AUTODICT=y LANWAN_LED=y SHP=y RTMIR3G=y ODMPID=y DUAL_TRX=n LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y SSH=y HD_SPINDOWN=y FORCE_AUTO_UPGRADE=n NTFS="open_2016+ntfs3" HFS="open" APFS=y EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=n UTF8_SSID=y NO_SELECT_CHANNEL=y VHT160=n ATED122=y MTK_8021XD3000=y MULTICASTIPTV=y QUAGGA=y EDCCA_NEW=y MUSL_LIBC=y OOKLA=y XHCI=y ATEUSB3_FORCE=y SWCONFIG=y BLINK_LED=n BTN_WPS_ALLLED=y NVRAM_ENCRYPT=2744 BOOT_FLASH_TYPE=NAND MTK_NAND=y PMF=y AUTO_FW_UPGRADE=y DRAM=128M DTB="mt7621-rtmir3g.dtb" FIRST_IF=MT7603E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y UBI=y UBIFS=y PSISTLOG=y ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y TEMPROOTFS=y WPSMULTIBAND=y ATF=y SAVE_WL_NVRAM_BOTH=n CAPTCHA=y RALINK_BUILDIN_WIFI=y INTERNETCTRL=y MODEM=y GOOGLE_ASST=y NEW_USER_LOW_RSSI=n NEWSSID_REV4=y GETREALIP=y ATCOVER=y LAN50=all SW_HW_AUTH=y NATNL_AIHOME=y UUPLUGIN=y OPEN_NAT=y GAME_MODE=y ASD=y AHS=n FRS_LIVE_UPDATE=y REPEATER=y PROXYSTA=y MTK_REP=n BUILD_NAME="RT-MIR3G" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y MODEL_RTMIR3G=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAILNA=y SECOND_IF_IPAILNA=y" SOFTCENTER=y SMARTDNS=y ENTWARE=y CIFS=y SWRT=y SWRT_NAME="RTMIR3G" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y
# environment
USERNAME = akito
# environment
MAKELEVEL := 0
# environment
MANDATORY_PATH = /usr/share/gconf/ubuntu.mandatory.path
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from 'Makefile', line 291)
EXTRA_KERNEL_NO_CONFIGS_1 := 
# makefile (from 'Makefile', line 179)
SWRTEXTENDNO := 30003
# makefile (from 'target.mak', line 850)
GT-AX6000N := IPV6SUPP=y HTTPS=y QCA=y IPQ807X=y MUSL64=n BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="GT-AX6000N" GXAX6000N=y SHP=y NVRAM_SIZE=0x20000 NVRAM_ENCRYPT=1 ODMPID=y UBI=y DUAL_TRX=n EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV STAINFO=y DUALWAN=y MULTICASTIPTV=y QUAGGA=y LAN50=all ATCOVER=y GETREALIP=y MTWANCFG=y WEBDAV=y SMARTSYNCBASE=y NTFS="open" TFAT=n HFS="open" DISK_MONITOR=y BOOT_FLASH_TYPE=NAND WIFI_CHIP=QCN50X4 SWITCH_CHIP=QCA8075_PHY_AQR107 WANPORT2=y SFPP=y PWRSAVE=y DTB="qcom-ipq807x-hk01.dtb" XHCI=y ATEUSB3_FORCE=n BLINK_LED=y REPEATER=n PROXYSTA=n DISABLE_REPEATER_UI=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y NEWSSID_REV4=y UTF8_SSID=y CFG80211=n UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y ROG_UI=y EXTRA_KERNEL_CONFIGS=""
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from 'target.mak', line 740)
SH-AC1300 := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y YANDEXDNS=y ACCEL_PPTPD=y AUTODICT=y BUILD_NAME="SH-AC1300" NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=SPI MDNS=y FINDASUS=y TEMPROOTFS=y DEBUGFS=y USB="USB" NO_USBSTORAGE=y XHCI=y NOTIFICATION_CENTER=y HAPDEVENT=y UBI=y UBIFS=y WPSMULTIBAND=y LP5523=y SINGLE_SSID=y NEWSSID_REV2=y ATF=y QCA_TW_AUTO_BAND4=y STAINFO=y AUTHSUPP=y WIFI_DRV_DISABLE=y QCA_MCSD=y REPEATER=y PROXYSTA=y SW_HW_AUTH=y AMAS=y AVBLCHAN=y NEW_USER_LOW_RSSI=y DWB=y ETHOBD=y WIFICLONE=y QCA_VAP_LOCALMAC=y PSISTLOG=y LYRA_HIDE=y DUAL_BACKHAUL=n ETHBACKHAUL=n MASTER_DET=n
# makefile (from 'Makefile', line 99)
BUSYBOX_DIR := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/router/busybox
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'target.mak', line 618)
RT4G-AC55U := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCA955X=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y USBSMS=y MODEMBRIDGE=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="4G-AC55U" RT4GAC55U=y SHP=y NVRAM_64K=y ODMPID=y UBI=y DUAL_TRX=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y FINDASUS=y STAINFO=y REBOOT_SCHEDULE=y GOBI=y LAN50=y ATCOVER=y GETREALIP=y WEBDAV=y SMARTSYNCBASE=y LAN50=y ATCOVER=y GETREALIP=y NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y WIRELESS_SWITCH=y QCA_TW_AUTO_BAND4=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=y REDIRECT_DNAME=y BLINK_LED=y NEW_USER_LOW_RSSI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y EXTRA_KERNEL_CONFIGS="LSDK_NART_SUPPORT=y"
# makefile (from 'platform.mak', line 66)
CONFIGURE := ./configure --host=arm-linux --build=x86_64-linux-gnu
# makefile (from 'target.mak', line 9)
RT-N53 := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" NO_USBSTORAGE=y USBAP="y" SMALL_FW_UPDATE=y DONGLE_VER="0x05648a89" LANWAN_LED=y WLAN_LED=y REPEATER=y DNSMQ=y BUILD_NAME="RT-N53" USER_LOW_RSSI=y ODMPID=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 84)
HND-96756_BASE_NOUSB := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y
# makefile (from 'target.mak', line 350)
RT-N10P_V3 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7628=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y SHP=y RTN11PB1=y ODMPID=y NEW_RGDM=y RA_SKU=y REPEATER=y  RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y BTN_WPS_RST=y DISABLE_NETWORKMAP=n WAN_AT_P4=y LANWAN_LED=y BLINK_LED=y SINGLE_2G=y VPNC=y YANDEXDNS=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y BTN_WPS_ALLLED=y SSH=y NEWSSID_REV2=y LAN50=y ATCOVER=y GETREALIP=y REBOOT_SCHEDULE=y EDCCA_NEW=y TEMPROOTFS=y BOOT_FLASH_TYPE=SPI DRAM=32M BASE_MODEL="RT-N11P_B1" BUILD_NAME="RT-N10P_V3" EXTRA_KERNEL_CONFIGS="MT7628_BAUDRATE=57600 RT2880_DRAM_32M=y UBOOT_CMDLINE=y MODEL_RTN10PV3=y SHRINK_PAGECACHE=y"
# makefile (from 'target.mak', line 96)
RT-AX1800 := HND_ROUTER=y PROFILE="947622GW" WL_SCHED_V3=y OOKLA=y BUILD_NAME="RT-AX1800" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=n EBTABLES=y MEDIASRV=n MODEM=n PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n USB="USB" APP="none" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=n BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=n VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=n NTFS="" HFS="" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=n ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=n BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y BCN_RPT=y BTM_11V=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=y NO_SAMBA=y NO_FTP=y NO_USBSTORAGE=y AMAS_WGN=y AMAZON_WSS=n PIPEFW=y AHS=y ASD=y INTERNETCTRL=y SW_CTRL_ALLLED=y URLFW=y KERN_SIZE_OPT=y ACL96=y
# makefile (from 'target.mak', line 41)
RT4G-AC68U := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y EXT4FS=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y LOGO_LED=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y BWDPI=y DUMP_OOPS_MSG=y DPSTA=y HSPOT=y LINUX_MTD="64" DEBUGFS=y BCM7=n BCM4708=y TEMPROOTFS=y SSH=y ROG=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y HD_SPINDOWN=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y LETSENCRYPT=y UTF8_SSID=y AMAS=y ETHOBD=y DWB=y CONNDIAG=y NFCM=n FORCE_AUTO_UPGRADE=y FORCE_ROAMING=y BCN_RPT=y BTM_11V=y WL_SCHED_V3=y GAME_MODE=y FILEFLEX=y TFAT=y NTFS="tuxera" HFS="tuxera" BUILD_NAME="4G-AC68U" RT4GAC68U=y LANWAN_LED=y LED_BTN=n LOGO_LED=n GOBI=y GAME_MODE=n MODEMBRIDGE=y CAPTIVE_PORTAL=y NEWSSID_REV2=y
# makefile (from 'target.mak', line 14)
RT-N12C1 := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y LANWAN_LED=y DNSMQ=y DYN_DICT_NAME=y SWMODE_SWITCH=y WL_AUTO_CHANNEL=y BUILD_NAME="RT-N12C1" USER_LOW_RSSI=y TEMPROOTFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 915)
RP-AC68U := REALTEK=y RTL8198C=y XHCI=y RTK_NAND=y HTTPS=y MIPS32=r2 BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y WEBDAV=y SMARTSYNCBASE=y PRINTER=y USB="USB" APP="installed" BUILD_NAME="RP-AC68U" RPAC68U=y NVRAM_64K=y TFAT=y NTFS="tuxera" HFS="tuxera" ODMPID=y YAFFS=y PSISTLOG=y REPEATER=y NEW_USER_LOW_RSSI=y AUTODICT=y PROXYSTA=y DEBUGFS=y CONCURRENTREPEATER=y MDNS=y FINDASUS=y TEMPROOTFS=y NATNL_AICLOUD=y REDIRECT_DNAME=y DHCP_OVERRIDE=y SSH=y DISABLE_NETWORKMAP=y DEF_REPEATER=y WIFI_PROXY=y
# makefile (from 'Makefile', line 393)
KEY_PATH = $(SRC_ROOT)/../../key
# makefile (from 'Makefile', line 323)
BUILD_INFO := dedf4c2
# makefile (from 'target.mak', line 574)
SWRT-RM-AX6000 := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y AARCH64=y RALINK=y MT7986=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA4=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" AUTODICT=y LANWAN_LED=y SHP=y RMAX6000=y ODMPID=y DUAL_TRX=n LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y SSH=y HD_SPINDOWN=y FORCE_AUTO_UPGRADE=n NTFS="open_2016+ntfs3" HFS="open" APFS=y EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=n UTF8_SSID=y NO_SELECT_CHANNEL=y VHT160=n ATED122=y MTK_8021XD3000=y MULTICASTIPTV=y QUAGGA=y EDCCA_NEW=y OOKLA=y XHCI=y ATEUSB3_FORCE=y SWCONFIG=y BLINK_LED=n BTN_WPS_ALLLED=y NVRAM_ENCRYPT=2744 BOOT_FLASH_TYPE=NAND MTK_NAND=y PMF=y AUTO_FW_UPGRADE=y DRAM=512M DTB="mt7621-redmiax6000.dtb" FIRST_IF=MT7986 SECOND_IF=MT7986 RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y UBI=y UBIFS=y PSISTLOG=y ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=n IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y TEMPROOTFS=y WPSMULTIBAND=y ATF=y SAVE_WL_NVRAM_BOTH=n CAPTCHA=y RALINK_BUILDIN_WIFI=y INTERNETCTRL=y MODEM=y GOOGLE_ASST=y NEW_USER_LOW_RSSI=n NEWSSID_REV4=y GETREALIP=y ATCOVER=y LAN50=all SW_HW_AUTH=y NATNL_AIHOME=y UUPLUGIN=n OPEN_NAT=n GAME_MODE=y ASD=y AHS=n FRS_LIVE_UPDATE=y REPEATER=y PROXYSTA=y MTK_REP=n BUILD_NAME="RM-AX6000" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 RT2880_DRAM_512M=y UBOOT_CMDLINE=y MODEL_RMAX6000=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_EPAELNA=y SECOND_IF_EPAELNA=y" SOFTCENTER=y SMARTDNS=y ENTWARE=y CIFS=y SWRT=y SWRT_NAME="RMAX6000" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y
# makefile (from 'target.mak', line 748)
RT-AC95U := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y YANDEXDNS=y ACCEL_PPTPD=y EBTABLES=y AUTODICT=y BUILD_NAME="RT-AC95U" NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=NAND MDNS=y FINDASUS=y TEMPROOTFS=y NTFS="open+tuxera" TFAT=y HFS="open+tuxera" EXT4FS=y DEBUGFS=y CFGSYNC=y BBEXTRAS=y USBEXTRAS=y USB="USB" ATEUSB3_FORCE=n HD_SPINDOWN=y XHCI=y NOTIFICATION_CENTER=y HAPDEVENT=y REDIRECT_DNAME=y SAMBA3=3.6.x NVRAM_ENCRYPT=y REBOOT_SCHEDULE=y DISK_MONITOR=y UBI=y UBIFS=y WPSMULTIBAND=y ALEXA=y SW_HW_AUTH=y BWDPI=y MULTICASTIPTV=y NEW_USER_LOW_RSSI=y NATNL_AIHOME=y GETREALIP=y MASTER_DET=y DUMP_OOPS_MSG=y WIFI_DRV_DISABLE=y APP="network" NEW_APP_ARM=y MODEM=y TIMEMACHINE=y PRINTER=y MEDIASRV=y WEBDAV=y CLOUDSYNC=y TCODE=y MUMIMO_5G=y MUMIMO_2G=y LETSENCRYPT=y IFTTT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DUALWAN=y LAN50=all LP5523=y QUAGGA=y WIFICLONE=y QCA_VAP_LOCALMAC=y PSISTLOG=y BT_CONN=y UTF8_SSID=y NEWSSID_REV4=y IPERF3=y ATF=y STAINFO=y REPEATER=y PROXYSTA=y AMAS=y DWB=y ETHOBD=y CFGSYNC_LOCSYNC=y QCA_LBD=y BCN_RPT=y BTM_11V=y CONNDIAG=y NO_TRY_DWB_PROFILE=y PRELINK=y INFO_EXAP=y ATCOVER=y FRS_LIVE_UPDATE=y FORCE_AUTO_UPGRADE=y SW_CTRL_ALLLED=y TRX_TAIL_INFO=y ASD=y AHS=y
# makefile (from 'target.mak', line 20)
RT-N14UHP := IPV6SUPP=y HTTPS=y MIPS32=r2 AUTODICT=y NTFS="open" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y DNSMQ=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y REPEATER=y USB="USB" APP="network" BUILD_NAME="RT-N14UHP" USER_LOW_RSSI=y DEBUGFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 6)
RT-AC66U := IPV6SUPP=y HTTPS=y MIPS32=r2 BCM57=y NTFS="tuxera" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-AC66U" DNSMQ=y LFP=y NVRAM_64K=y BCMWL6=y BCMNAND=y PROXYSTA=y ODMPID=y DISK_MONITOR=y BOOTLZMA=y DUAL_TRX=y OPTIMIZE_XBOX=y REPEATER=y DUALWAN=y USER_LOW_RSSI=y AUTODICT=y OPENVPN=y VPNC=y DEBUGFS=y TEMPROOTFS=y ROG=y BRCM_NAND_JFFS2=y JFFS2LOG=y DUMP_OOPS_MSG=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y EMAIL=y FRS_FEEDBACK=y
# environment
CLUTTER_IM_MODULE = xim
# makefile (from 'target.mak', line 153)
DSL-N55U := IPV6SUPP=y DUALWAN=y WIRELESS_SWITCH=y MIPS32=r2 RALINK=y RT3883=y NTFS="paragon" PARENTAL2=y IPV6SUPP=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y ACCEL_PPTPD=y APP="network" PRINTER=y DSL=y USB="USB" AUTODICT=y LANWAN_LED=y DISK_MONITOR=y BUILD_NAME="DSL-N55U" SFP8M=y AP_CARRIER_DETECTION=y LOCALE2012=y NO_MKTOOLS=y DEBUGFS=y DSLN55U=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y DSL_REMOTE=y
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# makefile (from 'Makefile', line 316)
uppercase_B = $(shell echo $(BUILD_NAME) | tr a-z  A-Z)
# environment
LC_NAME = zh_CN.UTF-8
# environment
VSCODE_CWD = /home/akito
# makefile (from 'target.mak', line 280)
RT-N56UB1 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-N56UB1" RTN56UB1=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y LED_ALL=y NEW_RGDM=y RA_SKU=y OPENVPN=y VPNC=y LANWAN_LED=y DUALWAN=y BLINK_LED=y FINDASUS=y REBOOT_SCHEDULE=y BOOT_FLASH_TYPE=SPI  MT7603_INTERNAL_PA_EXTERNAL_LNA=y DRAM=128M  MTK_TW_AUTO_BAND4=y FIRST_IF=MT7603E SECOND_IF=MT7612E JFFS2=y PSISTLOG=y TEMPROOTFS=y RALINK_DFS=y EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 384)
RT-AC85U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y  USB="USB"  AUTODICT=y LANWAN_LED=y SHP=y RTAC85U=y ODMPID=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y BWDPI=y REBOOT_SCHEDULE=y SSH=y NO_SELECT_CHANNEL=y HD_SPINDOWN=y NTFS="tuxera" EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=y ATED122=y MTK_8021X3000=y XHCI=y ATEUSB3_FORCE=y BLINK_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=NAND MTK_NAND=y DRAM=128M FIRST_IF=MT7615E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y NEW_USER_LOW_RSSI=y NEWSSID_REV2=y GETREALIP=y ATCOVER=y LAN50=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y HFS="tuxera" BUILD_NAME="RT-AC85U" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y MODEL_RTAC85U=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAELNA=y SECOND_IF_IPAELNA=y" MODEM=y PRINTER=y APP="network" WEBDAV=y SMARTSYNCBASE=y TIMEMACHINE=y
# makefile (from 'target.mak', line 918)
RP-AC53 := REALTEK=y RTL819X=y HTTPS=y EBTABLES=y BUILD_NAME="RP-AC53" NVRAM_64K=y ODMPID=y REPEATER=y USER_LOW_RSSI=y AUTODICT=y PROXYSTA=y DEBUGFS=y CONCURRENTREPEATER=y MDNS=y FINDASUS=y TEMPROOTFS=y REDIRECT_DNAME=y DHCP_OVERRIDE=y SSH=y DISABLE_NETWORKMAP=y DEF_REPEATER=y JFFS2=y JFFS2LOG=y
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 103)
PATH := /home/akito/asuswrt-modx-next/release/tools:/home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/ctools:/opt/buildroot-gcc463/bin:/opt/brcm/hndtools-mipsel-uclibc/bin:/opt/brcm/hndtools-mipsel-linux/bin:/opt/buildroot-gcc463/bin:/opt/brcm/hndtools-mipsel-uclibc/bin:/opt/brcm/hndtools-mipsel-linux/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'target.mak', line 479)
RT-AX54 := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y APP="installed" AUTODICT=y SHP=y RTAX54=y MUSL_LIBC=y XHCI=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y UTF8_SSID=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y NO_FTP_SSL=y ASD=n LANWAN_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=SPI MTK_NAND=y MTK_NAND_BLOCK2=y DUAL_TRX=y NVRAM_ENCRYPT=1 OPENVPN=y ACCEL_PPTPD=y VPNC=y REBOOT_SCHEDULE=y DRAM=256M MTK_8021XD3000=y EDCCA_NEW=y FIRST_IF=MT7915D SECOND_IF=MT7915D RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y MUMIMO_2G=y QAM256_2G=y QAM1024_5G=y REPEATER=y PROXYSTA=y SW_HW_AUTH=y ATF=y SAVE_WL_NVRAM_BOTH=y CAPTCHA=y RALINK_BUILDIN_WIFI=y JFFS2=y PSISTLOG=y TEMPROOTFS=y FORCE_AUTO_UPGRADE=y ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y MULTICASTIPTV=y QUAGGA=y PMF=y DTB="mt7621-rfb-ax-nmbm.dtb" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_RTAX54=y DUAL_TRX=y" INTERNETCTRL=y MODEM=y BUILD_NAME="RT-AX54"
# makefile (from 'Makefile', line 341)
IMGNAME := __30003-gdedf4c2
# makefile (from 'target.mak', line 271)
RT-N54U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-N54U" RTN54U=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y LED_ALL=y NEW_RGDM=y RA_SKU=y OPENVPN=y VPNC=y DUALWAN=y REBOOT_SCHEDULE=y BOOT_FLASH_TYPE=SPI SPI_FAST_CLOCK=y DRAM=64M MTK_TW_AUTO_BAND4=y SECOND_IF=MT7612E EDCCA=y JFFS2=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_64M=y UBOOT_CMDLINE=y INTERNAL_PA_INTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=y RT2860V2_AP_RTMP_TEMPERATURE_COMPENSATION=n" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 24)
RT-N10PV2 := MIPS32=r2 AUTODICT=y PARENTAL2=y SFP=y SFP4M=y BUILD_NAME="RT-N10PV2" USER_LOW_RSSI=y YANDEXDNS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 107)
RT-AX82_XD6 := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RT-AX82_XD6" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=n MODEM=n PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n USB="USB" APP="none" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=n BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=n VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=n TFAT=n NTFS="" HFS="" NO_SAMBA=y NO_FTP=y NO_USBSTORAGE=y NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=n ASPMD=n BCM_MEVENT=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y TCPLUGIN=n UUPLUGIN=y BT_CONN=y IPERF3=y FRS_LIVE_UPDATE=y BCM_CLED=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y BCMEVENTD=y AVBLCHAN=y AMAS_SYNC_2G_BW=y SW_CTRL_ALLLED=y CAPTCHA=y ASD=y AHS=y INTERNETCTRL=y GAME_MODE=n MSSID_PRELINK=y PC_SCHED_V3=y INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y ASUSCTRL=y COMFW=y
# makefile (from 'target.mak', line 512)
SWRT-RM-AC2100 := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA4=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" AUTODICT=y LANWAN_LED=y SHP=y RMAC2100=y ODMPID=y DUAL_TRX=n LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y SSH=y HD_SPINDOWN=y FORCE_AUTO_UPGRADE=n NTFS="open_2016+ntfs3" HFS="open" APFS=y EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=n UTF8_SSID=y NO_SELECT_CHANNEL=y VHT160=n ATED122=y MTK_8021XD3000=y MULTICASTIPTV=y QUAGGA=y EDCCA_NEW=y MUSL_LIBC=y OOKLA=y XHCI=y ATEUSB3_FORCE=y SWCONFIG=y BLINK_LED=n BTN_WPS_ALLLED=y NVRAM_ENCRYPT=2744 BOOT_FLASH_TYPE=NAND MTK_NAND=y PMF=y AUTO_FW_UPGRADE=y DRAM=128M DTB="mt7621-redmiac2100.dtb" FIRST_IF=MT7603E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y UBI=y UBIFS=y PSISTLOG=y ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y TEMPROOTFS=y WPSMULTIBAND=y ATF=y SAVE_WL_NVRAM_BOTH=n CAPTCHA=y RALINK_BUILDIN_WIFI=y INTERNETCTRL=y MODEM=y GOOGLE_ASST=y NEW_USER_LOW_RSSI=n NEWSSID_REV4=y GETREALIP=y ATCOVER=y LAN50=all SW_HW_AUTH=y NATNL_AIHOME=y UUPLUGIN=y OPEN_NAT=y GAME_MODE=y ASD=y AHS=n FRS_LIVE_UPDATE=y REPEATER=y PROXYSTA=y MTK_REP=n BUILD_NAME="RM-AC2100" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y MODEL_RMAC2100=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAILNA=y SECOND_IF_IPAILNA=y" SOFTCENTER=y SMARTDNS=y ENTWARE=y CIFS=y SWRT=y SWRT_NAME="RMAC2100" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from 'target.mak', line 17)
RT-N12HP := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y LANWAN_LED=y DNSMQ=y DYN_DICT_NAME=y SWMODE_SWITCH=y WL_AUTO_CHANNEL=y BUILD_NAME="RT-N12HP" USER_LOW_RSSI=y DUALWAN=y TEMPROOTFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 29)
RT-AC87U_7 := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-AC87U" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED2_BTN=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y HW_DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y GMAC3=n RGMII_BCM_FA=y XHCIMODE=y QTN=y TFTP=y LINUX_MTD="64" RGMII_BRCM5301X=y BWDPI=y DUMP_OOPS_MSG=y DEBUGFS=y EXT_LED_WPS=y DISABLE_REPEATER_UI=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y SSH=y TEMPROOTFS=y JFFS2ND_BACKUP=y WPS_DUALBAND=y ROG=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=y BCM_7114=y ETLAN_LED=y DHDAP=y LACP=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y
# environment
SESSION_MANAGER = local/ubuntu:@/tmp/.ICE-unix/1344,unix/ubuntu:/tmp/.ICE-unix/1344
# makefile (from 'Makefile', line 251)
PLATFORMDIR := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/router/arm-musl
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
TEXTDOMAIN = im-config
# makefile (from 'target.mak', line 668)
RP-AC66 := HTTPS=y MIPS32=r2 QCA=y QCA956X=y AR9888=y QCA8033=y EBTABLES=y AUTODICT=y BUILD_NAME="RP-AC66" RPAC66=y NVRAM_64K=y ODMPID=y REPEATER=y PURE_REPEATER=y PROXYSTA=y USER_LOW_RSSI=y REDIRECT_DNAME=y MDNS=y FINDASUS=y SSH=y UTF8_SSID=y TEMPROOTFS=y WPSMULTIBAND=y DHCP_OVERRIDE=y CONCURRENTREPEATER=y DISABLE_NETWORKMAP=y 
# makefile (from 'platform.mak', line 90)
CONFIG_LINUX30 = y
# makefile (from 'target.mak', line 5)
RT-N66U := IPV6SUPP=y HTTPS=y MIPS32=r2 BCM57=y NTFS="tuxera" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-N66U" DNSMQ=y LFP=y NVRAM_64K=y ODMPID=y DISK_MONITOR=y OPTIMIZE_XBOX=y JFFS2=y JFFS2LOG=y REPEATER=y DUALWAN=y BCMWL6=y USER_LOW_RSSI=y AUTODICT=y PROXYSTA=y OPENVPN=y VPNC=y CFE_NVRAM_CHK=y DUMP_OOPS_MSG=y DEBUGFS=y TEMPROOTFS=y ROG=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 319)
RT-N600 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7628=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="none" AUTODICT=y SHP=y RTAC1200=y NTFS="open" ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y BOOT_FLASH_TYPE=SPI DRAM=64M SECOND_IF=MT7612E EDCCA_NEW=y RALINK_DFS=y JFFS2=y PSISTLOG=y TEMPROOTFS=y EXTRA_KERNEL_CONFIGS="MT7628_BAUDRATE=57600 RT2880_DRAM_64M=y UBOOT_CMDLINE=y MODEL_RTAC1200=y" BASE_MODEL="RT-AC1200" BUILD_NAME="RT-N600"
# makefile (from 'platform.mak', line 62)
KERNELLD := /opt/lede-toolchain-mediatek-mt7629_gcc-5.4.0_musl-1.1.24_eabi.Linux-x86_64/toolchain-arm_cortex-a7_gcc-5.4.0_musl-1.1.24_eabi/bin/arm-openwrt-linux-ld
# makefile (from 'target.mak', line 101)
TUF-AX3000 := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="TUF-AX3000" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n TUF_UI=y OPEN_NAT=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=y IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y ASD=y AHS=y INTERNETCTRL=y GAME_MODE=y INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y
# makefile (from 'Makefile', line 154)
RC_EXT_NO = $(shell expr $(RC_EXT_NO1) \* 10000)
# makefile (from 'target.mak', line 224)
RT-AC51U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-AC51U" RTAC51U=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y LED_ALL=y NEW_RGDM=y RA_SKU=y OPENVPN=y VPNC=y DEBUGFS=y YANDEXDNS=y REBOOT_SCHEDULE=y DUALWAN=y MULTICASTIPTV=y QUAGGA=y BLINK_LED=y BOOT_FLASH_TYPE=SPI SPI_FAST_CLOCK=y DRAM=64M MTK_TW_AUTO_BAND4=y SECOND_IF=MT7610E EDCCA=y RALINK_DFS=y JFFS2=y PSISTLOG=y TEMPROOTFS=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_64M=y UBOOT_CMDLINE=y INTERNAL_PA_INTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=n BCONTX0=y" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'Makefile', line 243)
DHD_DIR := dhd
# makefile (from 'Makefile', line 319)
BUILD_USER = $(shell whoami)
# makefile (from 'platform.mak', line 86)
CONFIG_LINUX26 = y
# makefile (from 'target.mak', line 52)
HND-94908_BASE := HND_ROUTER=y PROFILE="94908HND" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2
# environment
XDG_MENU_PREFIX = gnome-
# makefile (from 'target.mak', line 149)
RT-AC1200G+ := IPV6SUPP=y ARM=y NTFS="open" AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y USB="USB" GRO=y APP="none" DNSMQ=y SHP=y NVRAM_64K=y RTAC1200G=y BCMWL6=y BCMWL6A=y EXT4FS=y BCM5301X=n DISK_MONITOR=y LANWAN_LED=n OPTIMIZE_XBOX=y MDNS=y HFS="open" DUMP_OOPS_MSG=y DEBUGFS=n BCM9=y TEMPROOTFS=y BTN_WPS_ALLLED=y REBOOT_SCHEDULE=y JFFS2=y JFFS2LOG=y HTTPS=y SSH=y ODMPID=y LAN50=y ATCOVER=y GETREALIP=y SW_HW_AUTH=y NATNL_AIHOME=y BUILD_NAME="RT-AC1200G+" MODEM=y ACCEL_PPTPD=y PRINTER=y WEBDAV=n SMARTSYNCBASE=n PROXYSTA=y NEW_USER_LOW_RSSI=y VPNC=y YANDEXDNS=y REPEATER=y DISABLE_REPEATER_UI=y MULTICASTIPTV=y QUAGGA=y
# environment
VSCODE_LOG_STACK = false
# makefile (from 'target.mak', line 317)
RT-AC1200 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7628=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="none" AUTODICT=y SHP=y RTAC1200=y NTFS="open" ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y BOOT_FLASH_TYPE=SPI DRAM=64M SECOND_IF=MT7612E EDCCA_NEW=y RALINK_DFS=y JFFS2=y PSISTLOG=y TEMPROOTFS=y EXTRA_KERNEL_CONFIGS="MT7628_BAUDRATE=57600 RT2880_DRAM_64M=y UBOOT_CMDLINE=y MODEL_RTAC1200=y" BUILD_NAME="RT-AC1200"
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from 'target.mak', line 90)
 
RT-AX56U := HND_ROUTER=y PROFILE="947622GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RT-AX56U" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=n BW160M=n BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y BCN_RPT=y BTM_11V=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=y SW_CTRL_ALLLED=y INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y ASUSCTRL=y
# makefile (from 'platform.mak', line 159)
BOOT_FLASH_TYPE_POOL = "NOR" "SPI" "NAND"
# makefile (from 'target.mak', line 97)
HND-963178_BASE := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y
# makefile (from 'platform.mak', line 9)
EXTRACFLAGS := -DBCMWPA2 -fno-delete-null-pointer-checks -mips32 -mtune=mips32
# makefile (from 'target.mak', line 592)
RT-AC55U := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCA955X=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="RT-AC55U" RTAC55U=y SHP=y NVRAM_64K=y ODMPID=y UBI=y DUAL_TRX=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y FINDASUS=y STAINFO=y REBOOT_SCHEDULE=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y WEBDAV=y SMARTSYNCBASE=y LAN50=y ATCOVER=y GETREALIP=y NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y BLINK_LED=y WANRED_LED=y WPS_LED=y XHCI=y ETRON_XHCI=y ATEUSB3_FORCE=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y UBIFS=y PSISTLOG=y QCA_TW_AUTO_BAND4=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS="LSDK_NART_SUPPORT=y" SW_HW_AUTH=y NATNL_AIHOME=y
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'platform.mak', line 173)
FIRST_IF_POOL = "NONE" "RT2860" "RT3092" "RT5392" "RT5592" "RT3593" "MT7610E" "MT7612E" "MT7603E" "MT7602E" "MT7615E"
# makefile (from 'target.mak', line 54)
GT-AC5300 := HND_ROUTER=y PROFILE="94908HND" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="GT-AC5300" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y DPSTA=y LACP=y WTFAST=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n CRASHLOG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50=y ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEW_APP_ARM=y VISUALIZATION=y BONDING=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=n ALEXA=y IFTTT=y HD_SPINDOWN=y VPN_FUSION=y ASPMD=n BCM_MEVENT=y BCMEVENTD=y BCM_APPEVENTD=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV LETSENCRYPT=y JFFS_NVRAM=y NATNL_AICLOUD=y NATNL_AIHOME=y ROG_UI=y OPEN_NAT=y UUPLUGIN=y HAS_5G_2=y ASUSCTRL=y FRS_LIVE_UPDATE=y SW_CTRL_ALLLED=y GAME_MODE=y INSTANT_GUARD=y NVRAM_ENCRYPT=y GOOGLE_ASST=y IPV6S46=y
# makefile (from 'target.mak', line 290)
RT-N56UB2 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-N56UB2" RTN56UB2=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y LED_ALL=y NEW_RGDM=y RA_SKU=y OPENVPN=y VPNC=y LANWAN_LED=y DUALWAN=y BLINK_LED=y FINDASUS=y REBOOT_SCHEDULE=y BOOT_FLASH_TYPE=SPI  MT7603_EXTERNAL_PA_EXTERNAL_LNA=y DRAM=128M FIRST_IF=MT7603E SECOND_IF=MT7612E JFFS2=y PSISTLOG=y MTK_TW_AUTO_BAND4=y TEMPROOTFS=y EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 463)
RT-AX53U := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y USBEXTRAS=y SAMBA4=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="installed" AUTODICT=y SHP=y RTAX53U=y MUSL_LIBC=y XHCI=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y UTF8_SSID=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y NO_FTP_SSL=y LANWAN_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=SPI MTK_NAND=y MTK_NAND_BLOCK2=y DUAL_TRX=y NVRAM_ENCRYPT=1 USB_SWAP=y OPENVPN=y ACCEL_PPTPD=y VPNC=y NTFS="open_2016+ntfs3" EXT4FS=y REBOOT_SCHEDULE=y HD_SPINDOWN=y DRAM=256M MTK_8021XD3000=y EDCCA_NEW=y FIRST_IF=MT7915D SECOND_IF=MT7915D RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y MUMIMO_2G=y QAM256_2G=y QAM1024_5G=y REPEATER=y PROXYSTA=y SW_HW_AUTH=y ATF=y SAVE_WL_NVRAM_BOTH=y CAPTCHA=y RALINK_BUILDIN_WIFI=y JFFS2=y PSISTLOG=y TEMPROOTFS=y FORCE_AUTO_UPGRADE=n ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y FRS_LIVE_UPDATE=y ASUSCTRL=y MULTICASTIPTV=y QUAGGA=y 3LANPORT_DEVICE=y PMF=y DTB="mt7621-rfb-ax-nmbm.dtb" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_RTAX53U=y DUAL_TRX=y" INTERNETCTRL=y MODEM=y GOOGLE_ASST=y AUTO_FW_UPGRADE=y PRINTER=y BUILD_NAME="RT-AX53U"
# makefile (from 'Makefile', line 47)
HND_ROUTER := 
# makefile (from 'Makefile', line 295)
EXTRA_KERNEL_YES_CONFIGS := 
# makefile (from 'target.mak', line 147)
RT-AC1200G := IPV6SUPP=y ARM=y NTFS="open" AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y USB="USB" GRO=y APP="none" DNSMQ=y SHP=y NVRAM_64K=y RTAC1200G=y BCMWL6=y BCMWL6A=y EXT4FS=y BCM5301X=n DISK_MONITOR=y LANWAN_LED=n OPTIMIZE_XBOX=y MDNS=y HFS="open" DUMP_OOPS_MSG=y DEBUGFS=n BCM9=y TEMPROOTFS=y BTN_WPS_ALLLED=y REBOOT_SCHEDULE=y JFFS2=y JFFS2LOG=y HTTPS=y SSH=y ODMPID=y LAN50=y ATCOVER=y GETREALIP=y SW_HW_AUTH=y NATNL_AIHOME=y BUILD_NAME="RT-AC1200G"
# environment
LS_COLORS = 
# makefile (from 'target.mak', line 65)
GT-AX11000_PRO := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="GT-AX11000_PRO" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y DPSTA=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV6=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y ROG_UI=y AMASDB=n CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=y CAPTCHA=y OUTFOX=y GAME_MODE=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=y BCM_CLED=y BONDING=y BONDING_WAN=y ACL96=y LACP=y DHD_6715B0=y EXTEND_LIMIT=y IPV6S46=y
# makefile (from 'platform.mak', line 156)
platformBusyboxOptions = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 123129
# makefile (from 'target.mak', line 92)
RP-AX56 := HND_ROUTER=y PROFILE="947622GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RP-AX56" SWITCH2="" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=n  NEW_USER_LOW_RSSI=y OPENVPN=n TIMEMACHINE=n MDNS=y VPNC=n BRCM_NAND_JFFS2=y JFFS2LOG=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=n WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=n TFAT=n NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=n TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=n IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=n VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=n BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=n BCM_CLED=y BCM_MFG=n RP_NEWSSID_REV3=y BROOP=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y
# automatic
%F = $(notdir $%)
# makefile (from 'Makefile', line 170)
EXSTRING := 
# environment
DISPLAY = :0
# makefile (from 'platform.mak', line 60)
READELF := /opt/lede-toolchain-mediatek-mt7629_gcc-5.4.0_musl-1.1.24_eabi.Linux-x86_64/toolchain-arm_cortex-a7_gcc-5.4.0_musl-1.1.24_eabi/bin/arm-openwrt-linux-readelf
# makefile (from 'target.mak', line 648)
PL-N12 := IPV6SUPP=y MIPS32=r2 QCA=y QCA953X=y PLC_UTILS=y AR7420=y DEF_AP=y EBTABLES=y AUTODICT=y LANWAN_LED=y BUILD_NAME="PL-N12" PLN12=y SHP=y ODMPID=y REBOOT_SCHEDULE=y BLINK_LED=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y MDNS=y FINDASUS=y DHCP_OVERRIDE=y TEMPROOTFS=y WIFICLONE=y
# makefile (from 'target.mak', line 33)
RT-AC68U := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y EXT4FS=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y LOGO_LED=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y BWDPI=y DUMP_OOPS_MSG=y DPSTA=y HSPOT=y LINUX_MTD="64" DEBUGFS=y BCM7=n BCM4708=y TEMPROOTFS=y SSH=y ROG=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y HD_SPINDOWN=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y LETSENCRYPT=y UTF8_SSID=y AMAS=y ETHOBD=y DWB=y CONNDIAG=y NFCM=n FORCE_AUTO_UPGRADE=y FORCE_ROAMING=y BCN_RPT=y BTM_11V=y OOKLA=y WL_SCHED_V3=y GAME_MODE=y FILEFLEX=y TFAT="open+tuxera" NTFS="open+tuxera" HFS="open+tuxera" BUILD_NAME="RT-AC68U" NEWSSID_REV2=y UUPLUGIN=y AVBLCHAN=y AHS=y ASD=y FRS_LIVE_UPDATE=y OPEN_NAT=y SW_CTRL_ALLLED=y NVRAM_ENCRYPT=y  JFFS_NVRAM=y ASUSCTRL=y
# makefile (from 'Makefile', line 292)
EXTRA_KERNEL_MOD_CONFIGS_1 := 
# makefile (from 'target.mak', line 429)
TUF-AC1750 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y  USB="USB"  AUTODICT=y LANWAN_LED=y SHP=y TUFAC1750=y ODMPID=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y BWDPI=y REBOOT_SCHEDULE=y SSH=y NO_SELECT_CHANNEL=y HD_SPINDOWN=y EXT4FS=y DISK_MONITOR=y MDNS=y NTFS="open" EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=y UTF8_SSID=y FORCE_AUTO_UPGRADE=y WEBDAV=y SMARTSYNCBASE=y ATED122=y MTK_8021X3000=y XHCI=y ATEUSB3_FORCE=y EDCCA_NEW=y BLINK_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=NAND MTK_NAND=y NVRAM_ENCRYPT=2744 DRAM=256M FIRST_IF=MT7615E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y NEW_USER_LOW_RSSI=y NEWSSID_REV2=y SINGLE_SSID=y GETREALIP=y ATCOVER=y LAN50=all SW_HW_AUTH=y NATNL_AIHOME=y NATNL_AICLOUD=y APP="network" MODEM=y PRINTER=y BUILD_NAME="TUF-AC1750" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_256M=y UBOOT_CMDLINE=y MODEL_TUFAC1750=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAILNA=y SECOND_IF_EPAELNA=y"
# makefile (from 'Makefile', line 157)
RUN_TAG = $(shell git tag -fa asuswrt_$(KERNEL_VER).$(FS_VER).$(SERIALNO)$(RCSTRING) -m "Released $(RCSTRING)" HEAD)
# makefile (from 'target.mak', line 727)
MAP-AC2200 := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y YANDEXDNS=y ACCEL_PPTPD=y EBTABLES=y AUTODICT=y BUILD_NAME="MAP-AC2200" NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=NAND MDNS=y FINDASUS=y TEMPROOTFS=y DEBUGFS=y CFGSYNC=y USB="USB" NO_USBSTORAGE=y XHCI=y NOTIFICATION_CENTER=y HAPDEVENT=y REDIRECT_DNAME=y UBI=y UBIFS=y WPSMULTIBAND=y LP5523=y BT_CONN=y DETWAN=y SINGLE_SSID=y SSID_AMAPS=y UTF8_SSID=y ATF=y STAINFO=y MESH=y WIFI_DRV_DISABLE=y MULTICASTIPTV=y QUAGGA=y DUMP_OOPS_MSG=y WIFICLONE=y QCA_VAP_LOCALMAC=y BWDPI=y PSISTLOG=y LYRA_HIDE=y HIDDEN_BACKHAUL=n ETHBACKHAUL=y MASTER_DET=y ALEXA=y SW_HW_AUTH=y NATNL_AIHOME=y GETREALIP=y PORT2_DEVICE=y AMAS=y REPEATER=y NEW_USER_LOW_RSSI=y LYRA_5G_SWAP=y DWB=y ETHOBD=y DISABLE_REPEATER_UI=y NO_TRY_DWB_PROFILE=y
# makefile (from 'Makefile', line 98)
BUSYBOX := busybox
# environment
GTK_IM_MODULE = ibus
# makefile (from 'target.mak', line 22)
RT-N10D1 := MIPS32=r2 AUTODICT=y PARENTAL2=y SFP=y SFP4M=y SFPRAM16M=y BUILD_NAME="RT-N10D1" USER_LOW_RSSI=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'version.conf', line 2)
FS_VER = 0.4
# makefile (from 'dsl.mak', line 2)
dsl_genbintrx_prolog = 	@( if [ "$(BUILD_NAME)" != "DSL-N55U" -a "$(BUILD_NAME)" != "DSL-N55U-B" ] ; then rm -rf image; mkdir image; else echo "call dsl routines"; mkdir reltmp; rm -rf image; mkdir image; rm -rf make_img; rm -rf tc_asus_bin; fi; )
# environment
PWD = /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210
# makefile (from 'platform.mak', line 5)
LINUXDIR := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/linux/linux-4.4.198
# makefile (from 'target.mak', line 28)
RT-AC87U := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-AC87U" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y BCM4708=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED2_BTN=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y HW_DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y RGMII_BCM_FA=y XHCIMODE=y QTN=y TFTP=y LINUX_MTD="64" RGMII_BRCM5301X=y BWDPI=y DUMP_OOPS_MSG=y DEBUGFS=y EXT_LED_WPS=y DISABLE_REPEATER_UI=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y SSH=y TEMPROOTFS=y JFFS2ND_BACKUP=y WPS_DUALBAND=y ROG=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y HD_SPINDOWN=y
# makefile (from 'target.mak', line 241)
RT-AC53 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y SHP=y BUILD_NAME="RT-AC53" RTAC53=y SFP=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU=y RA_SKU_IN_DRV=y DEBUGFS=y REBOOT_SCHEDULE=y VPNC=y REPEATER=y TCODE=y MDNS=y FINDASUS=y BTN_WPS_ALLLED=y SSH=y NEWSSID_REV2=y LAN50=y ATCOVER=y GETREALIP=y REDIRECT_DNAME=y BOOT_FLASH_TYPE=SPI SPI_FAST_CLOCK=y DRAM=64M SECOND_IF=MT7610E EDCCA=y RALINK_DFS=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_64M=y UBOOT_CMDLINE=y EXTERNAL_PA_EXTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=n SWITCH_CHIP_RTL8367RB=y SWITCH_CTRLIF_MDIO=y RAETH_HAS_PORT5=y P5_RGMII_TO_MAC_MODE=y MODEL_RTAC53=y"
# makefile (from 'Makefile', line 153)
RC_EXT_NO1 = $(shell expr $(RCNO) + 1)
# makefile (from 'target.mak', line 156)
EA-N66 := IPV6SUPP=y MIPS32=r1 RALINK=y RT3052=y BBEXTRAS=y EBTABLES=y NO_SAMBA=y NO_ROUTE=y NO_LIBOPT=y SLIM=y WIRELESSWAN=y BUILD_NAME="EA-N66" REBOOT_SCHEDULE=y
# environment
XDG_SEAT = seat0
# environment
SSH_AGENT_PID = 1437
# makefile (from 'target.mak', line 924)
RP-AC92 := REALTEK=y RTL8198D=y HTTPS=y EBTABLES=y BUILD_NAME="RP-AC92" RPAC92=y NVRAM_64K=y ODMPID=y REPEATER=y NEW_USER_LOW_RSSI=y AUTODICT=y PROXYSTA=y DEBUGFS=y CONCURRENTREPEATER=y MDNS=y FINDASUS=y TEMPROOTFS=y REDIRECT_DNAME=y DHCP_OVERRIDE=y SSH=y DISABLE_NETWORKMAP=y WLCSCAN_RSSI=y  MUMIMO_5G=y DEF_REPEATER=y WIFI_PROXY=y JFFS2=y JFFS2LOG=y HTTPS=y RP_NEWSSID_REV3=y SW_HW_AUTH=y AMAS=y DWB=y LAN50=all FORCE_AUTO_UPGRADE=y EMAIL=y FRS_FEEDBACK=y NVRAM_ENCRYPT=y UTF8_SSID=y NoETH=y
# makefile (from 'target.mak', line 572)
SWRT-H3C-TX1801 := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y USBEXTRAS=y SAMBA4=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="network" AUTODICT=y SHP=y PGBM1=y MUSL_LIBC=y XHCI=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y UTF8_SSID=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y LANWAN_LED=y BTN_WPS_ALLLED=y NTFS="open_2016+ntfs3" EXT4FS=y HFS="open" APFS=y RALINK_DBDC=y OOKLA=y BOOT_FLASH_TYPE=NAND MTK_NAND=y MTK_NAND_BLOCK2=y DUAL_TRX=y NVRAM_ENCRYPT=1 USB_SWAP=n OPENVPN=y ACCEL_PPTPD=y VPNC=y REBOOT_SCHEDULE=y HD_SPINDOWN=y GETREALIP=y DRAM=512M MTK_8021XD3000=y EDCCA_NEW=y FIRST_IF=MT7915D SECOND_IF=MT7915D RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y MUMIMO_2G=y QAM256_2G=y QAM1024_5G=y REPEATER=y PROXYSTA=y SW_HW_AUTH=y ATF=y SAVE_WL_NVRAM_BOTH=y CAPTCHA=y RALINK_BUILDIN_WIFI=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y FORCE_AUTO_UPGRADE=n ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y FRS_LIVE_UPDATE=y ASUSCTRL=y MULTICASTIPTV=y QUAGGA=y 3LANPORT_DEVICE=n PMF=y DTB="mt7621-pgbm1.dtb" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_PGBM1=y DUAL_TRX=y" INTERNETCTRL=y MODEM=y GOOGLE_ASST=y AUTO_FW_UPGRADE=y PRINTER=y UUPLUGIN=y BUILD_NAME="PGB-M1" ASD=y AHS=n SOFTCENTER=y SMARTDNS=y VHT160=n ENTWARE=y CIFS=y SWRT=y SWRT_NAME="PGBM1" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y BOOT_FLASH_TYPE=NAND EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_H3CTX1801=y DUAL_TRX=y" BUILD_NAME="H3C-TX1801" H3CTX1801=y DTB="mt7621-h3c-tx1801.dtb" ENTWARE=n SWRT_NAME="H3CTX1801"
# makefile (from 'target.mak', line 60)
RT-AX88U := HND_ROUTER=y PROFILE="94908HND" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="RT-AX88U" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y DPSTA=y LACP=y WTFAST=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEW_APP_ARM=y VISUALIZATION=n BONDING=y BONDING_WAN=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n AMASDB=n CRASHLOG=y WATCH_REINIT=n AVBLCHAN=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=y IPERF3=y INFO_EXAP=y HSPOT=y INTERNETCTRL=y AMAZON_WSS=y OPEN_NAT=y CAPTCHA=y SW_CTRL_ALLLED=y GAME_MODE=y CFGSYNC_LOCSYNC=y INSTANT_GUARD=y ACL96=y GOOGLE_ASST=y EXTEND_LIMIT=y ASUSCTRL=y
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# makefile (from 'platform.mak', line 186)
SECOND_IF_POOL = "NONE" "RT3092" "RT5392" "RT5592" "RT3593" "RT3572" "RT5572" "MT7620" "MT7621" "MT7610U" "MT7610E" "RT8592" "MT7612U" "MT7612E" "MT7602E" "MT7603E" "MT7615E"
# makefile (from 'Makefile', line 49)
HND_ROUTER_AX_675X := 
# makefile (from 'target.mak', line 46)
RT-AC88U := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y BCMWL6=y BCMWL6A=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y SSD=n STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y CFEZ=y ERPTEST=n WIFILOGO=n FORCE_AUTO_UPGRADE=n FAKEID=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y ASPMD=n BCMEVENTD=n WLCLMLOAD=n BCM_MUMIMO=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y ALEXA=y IFTTT=y LETSENCRYPT=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y HD_SPINDOWN=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV CONNTRACK=n AMAS=y AMASDB=y AVBLCHAN=y WATCH_REINIT=n MFGFW=n CTFNAT=y CONNDIAG=y NFCM=n UTF8_SSID=y NVRAM_ENCRYPT=y UUPLUGIN=y SW_CTRL_ALLLED=y OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="RT-AC88U" RGMII_BRCM5301X=y SWITCH2="RTL8365MB" BCM_MMC=n BCM_7114=y ETLAN_LED=y ROMCFE=n NVSIZE="128" DHDAP=y DPSTA=y USB_DEBUG=n BCMFA=n GMAC3=y LACP=y RESET_SWITCH=n WTFAST=y FORCE_SN="380" FORCE_EN="664" NEWSSID_REV2=y ASUSCTRL=y FRS_LIVE_UPDATE=y BW160M=y OPEN_NAT=y GAME_MODE=y GOOGLE_ASST=y JFFS_NVRAM=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y
# makefile (from 'target.mak', line 685)
RT-AC59_CD6_BASE := HTTPS=y MIPS32=r2 QCA=y QCN550X=y QCA9888=y QCA8337N=y BBEXTRAS=y EBTABLES=y AUTODICT=y SHP=y NVRAM_SIZE=0x1E000 ODMPID=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y STAINFO=y NEWSSID_REV4=y LAN50=all BLINK_LED=y BTN_WPS_ALLLED=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y JFFS2=y PSISTLOG=y QCA_TW_AUTO_BAND4=y QCA_VAP_LOCALMAC=y TEMPROOTFS=y WPSMULTIBAND=y UTF8_SSID=y NVRAM_ENCRYPT=y NOTIFICATION_CENTER=y HAPDEVENT=y AMAS=y AVBLCHAN=y REPEATER=y DISABLE_REPEATER_UI=y SW_HW_AUTH=y DWB=y ETHOBD=y
# environment
GTK_MODULES = gail:atk-bridge
# makefile (from 'target.mak', line 720)
MAP-AC1300 := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y YANDEXDNS=y ACCEL_PPTPD=y EBTABLES=y AUTODICT=y BUILD_NAME="MAP-AC1300" NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=SPI MDNS=y FINDASUS=y TEMPROOTFS=y DEBUGFS=y CFGSYNC=y USB="USB" NO_USBSTORAGE=y XHCI=y NOTIFICATION_CENTER=y HAPDEVENT=y REDIRECT_DNAME=y UBI=y UBIFS=y WPSMULTIBAND=y UTF8_SSID=y LP5523=y BT_CONN=y DETWAN=y SINGLE_SSID=y SSID_AMAPS=y ATF=y QCA_TW_AUTO_BAND4=y STAINFO=y MESH=y WIFI_DRV_DISABLE=y MULTICASTIPTV=y QUAGGA=y DUMP_OOPS_MSG=y WIFICLONE=y QCA_VAP_LOCALMAC=y BWDPI=y PSISTLOG=y LYRA_HIDE=y HIDDEN_BACKHAUL=n ETHBACKHAUL=y MASTER_DET=y ALEXA=y SW_HW_AUTH=y NATNL_AIHOME=y GETREALIP=y PORT2_DEVICE=y AMAS=y AVBLCHAN=y REPEATER=y NEW_USER_LOW_RSSI=y DWB=y ETHOBD=y DISABLE_REPEATER_UI=y NO_TRY_DWB_PROFILE=y
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# makefile (from 'target.mak', line 122)
RP-AX58 := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y SAMBA3="3.6.x" UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="RP-AX58" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=y PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=n NEW_USER_LOW_RSSI=y OPENVPN=n TIMEMACHINE=n MDNS=y VPNC=n JFFS2LOG=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=n WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=n IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=n VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=n ASD=y AHS=y INTERNETCTRL=y GAME_MODE=n INSTANT_GUARD=y ACL96=y BCM_CLED=y SINGLE_LED=y DPSR=y BCM_MFG=n PROTECTION_SERVER=n
# environment
HOME = /home/akito
# makefile (from 'platform.mak', line 63)
STAGING_DIR := /opt/lede-toolchain-mediatek-mt7629_gcc-5.4.0_musl-1.1.24_eabi.Linux-x86_64/toolchain-arm_cortex-a7_gcc-5.4.0_musl-1.1.24_eabi
# makefile (from 'target.mak', line 921)
RP-AC55 := REALTEK=y RTL8197F=y HTTPS=y EBTABLES=y BUILD_NAME="RP-AC55" NVRAM_64K=y ODMPID=y REPEATER=y NEW_USER_LOW_RSSI=y AUTODICT=y PROXYSTA=y DEBUGFS=y CONCURRENTREPEATER=y MDNS=y FINDASUS=y TEMPROOTFS=y REDIRECT_DNAME=y DHCP_OVERRIDE=y SSH=y DISABLE_NETWORKMAP=y WLCSCAN_RSSI=y  MUMIMO_5G=y DEF_REPEATER=y WIFI_PROXY=y JFFS2=y JFFS2LOG=y HTTPS=y AMAS=y DWB=y ETHOBD=y SW_HW_AUTH=y NO_PTHREAD_TIMEDWAIT=y FORCE_AUTO_UPGRADE=y EMAIL=y FRS_FEEDBACK=y
# makefile (from 'target.mak', line 73)
XT12_CFG := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="XT12" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y XHCI=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y LINUX_MTD="64" DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y BCM_CEVENTD=y UTF8_SSID=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y AMASDB=n CRASHLOG=y BW160M=y BRCM_HOSTAPD=y IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=y CAPTCHA=y OUTFOX=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=y BCM_CLED=y NEWSSID_REV4=y NEWSSID_REV5=y SW_CTRL_ALLLED=y BT_CONN=y SINGLE_LED=y ACL96=y DHD_6715B0=y MSSID_PRELINK=y EXTEND_LIMIT=y GOOGLE_ASST=y VPN_FUSION=y AMAS_ADTBW=y BONDING=y LACP=y BONDING_WAN=y
# makefile (from 'target.mak', line 69)
ET12 := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="ET12" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y XHCI=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y LINUX_MTD="64" DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y BCM_CEVENTD=y UTF8_SSID=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y AMASDB=n CRASHLOG=y BW160M=y BRCM_HOSTAPD=y IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=y CAPTCHA=y OUTFOX=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=y BCM_CLED=y NEWSSID_REV4=y NEWSSID_REV5=y SW_CTRL_ALLLED=y BT_CONN=y SINGLE_LED=y WIFI6E=y ACL96=y OWE_TRANS=y DHD_6715B0=y MSSID_PRELINK=y EXTEND_LIMIT=y GOOGLE_ASST=y VPN_FUSION=y AMAS_ADTBW=y BONDING=y LACP=y BONDING_WAN=y
# makefile (from 'target.mak', line 105)
RT-AX82U := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RT-AX82U" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=y WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=n NEW_APP_ARM=y VISUALIZATION=n BONDING=y BONDING_WAN=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y TCPLUGIN=y UUPLUGIN=y IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y OPEN_NAT=y ASD=y AHS=y INTERNETCTRL=y GAME_MODE=y INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y
# makefile (from 'Makefile', line 297)
EXTRA_KERNEL_MOD_CONFIGS := 
# makefile (from 'target.mak', line 77)
RT-AX92U := HND_ROUTER=y PROFILE="94908HND" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="RT-AX92U" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=y WTFAST=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="network" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y  DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=y BONDING_WAN=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n DWB=y FRONTHAUL_DWB=y AMASDB=n CRASHLOG=y WATCH_REINIT=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=y IPERF3=y INFO_EXAP=y AMAZON_WSS=y AHS=y ASD=y FRS_LIVE_UPDATE=y OPEN_NAT=y SW_CTRL_ALLLED=y GAME_MODE=y CFGSYNC_LOCSYNC=y INSTANT_GUARD=y MSSID_PRELINK=y ACL96=y GOOGLE_ASST=y IPV6S46=y
# makefile (from 'Makefile', line 50)
HND_ROUTER_AX_6756 := 
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# makefile (from 'target.mak', line 128)
XT8PRO_CFG := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y SAMBA3="3.6.x" UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="XT8PRO" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y FRONTHAUL_DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n BT_CONN=y IPERF3=y MSSID_PRELINK=y FRS_LIVE_UPDATE=y BCM_CLED=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y BCMEVENTD=y AMAS_ADTBW=y SW_CTRL_ALLLED=y AMAS_SYNC_2G_BW=y AMAZON_WSS=y AHS=y ASD=y INTERNETCTRL=y AVBLCHAN=y ADTBW_RADAR=y INSTANT_GUARD=y AMAS_ETHDETECT=y RTL8221VB=y ACL96=y GOOGLE_ASST=y IPV6S46=y EXTEND_LIMIT=y ASUSCTRL=y DHD_6715B0=y
# makefile (from 'target.mak', line 155)
RT-N13U := IPV6SUPP=y MIPS32=r1 RALINK=y RT3052=y NTFS="paragon" BBEXTRAS=y EBTABLES=y NO_LIBOPT=y SLIM=y USBEXTRAS=y PRINTER=y USB="USB" BUILD_NAME="RT-N13U" DEBUGFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# environment
VSCODE_CODE_CACHE_PATH = /home/akito/.config/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# makefile (from 'Makefile', line 3933)
define BusyboxOptions
	@( if [ "$(CONFIG_LINUX26)" = "y" ]; then sed -i "/CONFIG_FEATURE_2_4_MODULES/d" $(1); echo "# CONFIG_FEATURE_2_4_MODULES is not set" >>$(1); sed -i "/CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT/d" $(1); echo "CONFIG_FEATURE_LSMOD_PRETTY_2_6_OUTPUT=y" >>$(1); sed -i "/CONFIG_FEATURE_DEVFS/d" $(1); echo "# CONFIG_FEATURE_DEVFS is not set" >>$(1); sed -i "/CONFIG_MKNOD/d" $(1); echo "CONFIG_MKNOD=y" >>$(1); fi; if [ "$(NO_CIFS)" = "y" ]; then sed -i "/CONFIG_FEATURE_MOUNT_CIFS/d" $(1); echo "# CONFIG_FEATURE_MOUNT_CIFS is not set" >>$(1); fi; if [ "$(BBEXTRAS)" = "y" ]; then sed -i "/CONFIG_FEATURE_SORT_BIG/d" $(1); echo "CONFIG_FEATURE_SORT_BIG=y" >>$(1); sed -i "/CONFIG_CLEAR/d" $(1); echo "CONFIG_CLEAR=y" >>$(1); sed -i "/CONFIG_SETCONSOLE/d" $(1); echo "CONFIG_SETCONSOLE=y" >>$(1); if [ "$(CONFIG_LINUX26)" = "y" ]; then sed -i "/CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE/d" $(1); echo "CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE=512" >>$(1); fi; if [ "$(DSL)" = "y" ]; then sed -i "/CONFIG_TFTP/d" $(1); echo "CONFIG_TFTP=y" >>$(1); sed -i "/CONFIG_TFTPD/d" $(1); echo "# CONFIG_TFTPD is not set" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_GET/d" $(1); echo "CONFIG_FEATURE_TFTP_GET=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_PUT/d" $(1); echo "CONFIG_FEATURE_TFTP_PUT=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_BLOCKSIZE/d" $(1); echo "# CONFIG_FEATURE_TFTP_BLOCKSIZE is not set" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_PROGRESS_BAR/d" $(1); echo "# CONFIG_FEATURE_TFTP_PROGRESS_BAR is not set" >>$(1); sed -i "/CONFIG_TFTP_DEBUG/d" $(1); echo "# CONFIG_TFTP_DEBUG is not set" >>$(1); if [ "$(DSL_TCLINUX)" = "y" ]; then sed -i "/CONFIG_TELNET/d" $(1); echo "CONFIG_TELNET=y" >>$(1); sed -i "/CONFIG_FEATURE_TELNET_TTYPE/d" $(1); echo "# CONFIG_FEATURE_TELNET_TTYPE is not set" >>$(1); sed -i "/CONFIG_FEATURE_TELNET_AUTOLOGIN/d" $(1); echo "# CONFIG_FEATURE_TELNET_AUTOLOGIN is not set" >>$(1); sed -i "/CONFIG_TELNETD/d" $(1); echo "CONFIG_TELNETD=y" >>$(1); sed -i "/CONFIG_FEATURE_TELNETD_STANDALONE/d" $(1); echo "CONFIG_FEATURE_TELNETD_STANDALONE=y" >>$(1); sed -i "/CONFIG_FEATURE_TELNETD_INETD_WAIT/d" $(1); echo "# CONFIG_FEATURE_TELNETD_INETD_WAIT is not set" >>$(1); sed -i "/CONFIG_FTPGET/d" $(1); echo "CONFIG_FTPGET=y" >>$(1); sed -i "/CONFIG_FTPPUT/d" $(1); echo "CONFIG_FTPPUT=y" >>$(1); sed -i "/CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS/d" $(1); echo "CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS=y" >>$(1); sed -i "/CONFIG_SPLIT/d" $(1); echo "CONFIG_SPLIT=y" >>$(1); fi; fi; fi; if [ "$(USB)" = "USB" ]; then if [ "$(DISK_MONITOR)" = "y" ]; then sed -i "/CONFIG_FSCK/d" $(1); echo "CONFIG_FSCK=y" >>$(1); if [ "$(E2FSPROGS)" != "y" ]; then sed -i "/CONFIG_E2FSCK/d" $(1); echo "CONFIG_E2FSCK=y" >>$(1); fi; fi; if [ "$(USBEXTRAS)" = "y" ]; then sed -i "/CONFIG_FSCK_MINIX/d" $(1); echo "CONFIG_FSCK_MINIX=y" >>$(1); sed -i "/CONFIG_MKSWAP/d" $(1); echo "CONFIG_MKSWAP=y" >>$(1); sed -i "/CONFIG_FLOCK/d" $(1); echo "CONFIG_FLOCK=y" >>$(1); sed -i "/CONFIG_FSYNC/d" $(1); echo "CONFIG_FSYNC=y" >>$(1); sed -i "/CONFIG_UNZIP/d" $(1); echo "CONFIG_UNZIP=y" >>$(1); if [ "$(CONFIG_LINUX26)" = "y" ]; then sed -i "/CONFIG_LSUSB/d" $(1); echo "CONFIG_LSUSB=y" >>$(1); sed -i "/CONFIG_FEATURE_WGET_STATUSBAR/d" $(1); echo "CONFIG_FEATURE_WGET_STATUSBAR=y" >>$(1); sed -i "/CONFIG_FEATURE_VERBOSE_USAGE/d" $(1); echo "CONFIG_FEATURE_VERBOSE_USAGE=y" >>$(1); fi; fi; if [ "$(NO_MKTOOLS)" != "y" ]; then if [ "$(E2FSPROGS)" != "y" ]; then sed -i "/CONFIG_MKE2FS/d" $(1); echo "CONFIG_MKE2FS=y" >>$(1); fi; sed -i "/CONFIG_FDISK/d" $(1); echo "CONFIG_FDISK=y" >>$(1); sed -i "/CONFIG_FEATURE_FDISK_WRITABLE/d" $(1); echo "CONFIG_FEATURE_FDISK_WRITABLE=y" >>$(1); fi; if [ "$(GOBI)" = "y" ]; then sed -i "/CONFIG_TFTP /d" $(1); echo "CONFIG_TFTP=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_GET/d" $(1); echo "CONFIG_FEATURE_TFTP_GET=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_PUT/d" $(1); echo "CONFIG_FEATURE_TFTP_PUT=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_BLOCKSIZE/d" $(1); echo "CONFIG_FEATURE_TFTP_BLOCKSIZE=y" >>$(1); fi; if [ "$(CDROM)" = "y" ]; then sed -i "/CONFIG_FEATURE_VOLUMEID_ISO9660/d" $(1); echo "CONFIG_FEATURE_VOLUMEID_ISO9660=y" >>$(1); sed -i "/CONFIG_FEATURE_VOLUMEID_UDF/d" $(1); echo "CONFIG_FEATURE_VOLUMEID_UDF=y" >>$(1); fi; if [ "$(RT4GAX56)" = "y" ]; then sed -i "/CONFIG_FLOCK/d" $(1); echo "CONFIG_FLOCK=y" >>$(1); fi; else sed -i "/CONFIG_FEATURE_MOUNT_LOOP/d" $(1); echo "# CONFIG_FEATURE_MOUNT_LOOP is not set" >>$(1); sed -i "/CONFIG_FEATURE_DEVFS/d" $(1); echo "# CONFIG_FEATURE_DEVFS is not set" >>$(1); sed -i "/CONFIG_FEATURE_MOUNT_LABEL/d" $(1); echo "# CONFIG_FEATURE_MOUNT_LABEL is not set" >>$(1); sed -i "/CONFIG_FEATURE_MOUNT_FSTAB/d" $(1); echo "# CONFIG_FEATURE_MOUNT_FSTAB is not set" >>$(1); sed -i "/CONFIG_VOLUMEID/d" $(1); echo "# CONFIG_VOLUMEID is not set" >>$(1); sed -i "/CONFIG_BLKID/d" $(1); echo "# CONFIG_BLKID is not set" >>$(1); sed -i "/CONFIG_SWAPONOFF/d" $(1); echo "# CONFIG_SWAPONOFF is not set" >>$(1); sed -i "/CONFIG_TRUE/d" $(1); echo "# CONFIG_TRUE is not set" >>$(1); fi; if [ "$(IPV6SUPP)" = "y" -o "$(IPV6FULL)" = "y" ]; then sed -i "/CONFIG_FEATURE_IPV6/d" $(1); echo "CONFIG_FEATURE_IPV6=y" >>$(1); sed -i "/CONFIG_PING6/d" $(1); echo "CONFIG_PING6=y" >>$(1); sed -i "/CONFIG_TRACEROUTE6/d" $(1); echo "CONFIG_TRACEROUTE6=y" >>$(1); fi; if [ "$(SNMPD)" = "y" ]; then sed -i "/CONFIG_TFTP/d" $(1); echo "CONFIG_TFTP=y" >>$(1); sed -i "/CONFIG_TFTPD/d" $(1); echo "# CONFIG_TFTPD is not set" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_GET/d" $(1); echo "CONFIG_FEATURE_TFTP_GET=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_PUT/d" $(1); echo "CONFIG_FEATURE_TFTP_PUT=y" >>$(1); sed -i "/CONFIG_TFTP_DEBUG/d" $(1); echo "# CONFIG_TFTP_DEBUG is not set" >>$(1); fi; if [ "$(RTN11P)" = "y" ] || [ "$(RTN300)" = "y" ]; then sed -i "/CONFIG_LESS/d" $(1); echo "# CONFIG_LESS is not set" >>$(1); sed -i "/CONFIG_DU\b/d" $(1); echo "# CONFIG_DU is not set" >>$(1); sed -i "/CONFIG_HEAD/d" $(1); echo "# CONFIG_HEAD is not set" >>$(1); sed -i "/CONFIG_TAIL/d" $(1); echo "# CONFIG_TAIL is not set" >>$(1); sed -i "/CONFIG_BASENAME/d" $(1); echo "# CONFIG_BASENAME is not set" >>$(1); sed -i "/CONFIG_FEATURE_DEVFS/d" $(1); echo "# CONFIG_FEATURE_DEVFS is not set" >>$(1); sed -i "/CONFIG_BLKID/d" $(1); echo "# CONFIG_BLKID is not set" >>$(1); sed -i "/CONFIG_TELNET\b/d" $(1); echo "# CONFIG_TELNET is not set" >>$(1); sed -i "/CONFIG_FEATURE_LS_COLOR\b/d" $(1); echo "# CONFIG_FEATURE_LS_COLOR is not set" >>$(1); sed -i "/CONFIG_CUT/d" $(1); echo "# CONFIG_CUT is not set" >>$(1); sed -i "/CONFIG_CROND/d" $(1); echo "# CONFIG_CROND is not set" >>$(1); sed -i "/CONFIG_MD5SUM/d" $(1); echo "# CONFIG_MD5SUM is not set" >>$(1); sed -i "/CONFIG_AWK/d" $(1); echo "# CONFIG_AWK is not set" >>$(1); sed -i "/CONFIG_WC/d" $(1); echo "# CONFIG_WC is not set" >>$(1); fi; if [ "$(IPQ40XX)" = "y" ]; then sed -i "/CONFIG_DEVMEM/d" $(1); echo "CONFIG_DEVMEM=y" >>$(1); fi; if [ "$(MAPAC1300)" = "y" ] || [ "$(MAPAC2200)" = "y" ] || [ "$(VZWAC1300)" = "y" ] || [ "$(SHAC1300)" = "y" ] || [ "$(RTAC95U)" = "y" ] ; then sed -i "/CONFIG_TFTP/d" $(1); echo "CONFIG_TFTP=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_GET/d" $(1); echo "CONFIG_FEATURE_TFTP_GET=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_PUT/d" $(1); echo "CONFIG_FEATURE_TFTP_PUT=y" >>$(1); sed -i "/CONFIG_TFTPD/d" $(1); echo "# CONFIG_TFTPD is not set" >>$(1); sed -i "/CONFIG_TFTP_DEBUG/d" $(1); echo "# CONFIG_TFTP_DEBUG is not set" >>$(1); sed -i "/CONFIG_TELNET\b/d" $(1); echo "CONFIG_TELNET=y" >>$(1); fi; if [ "$(SLIM)" = "y" ]; then sed -i "/CONFIG_AWK/d" $(1); echo "# CONFIG_AWK is not set" >>$(1); sed -i "/CONFIG_BASENAME/d" $(1); echo "# CONFIG_BASENAME is not set" >>$(1); sed -i "/CONFIG_FEATURE_DEVFS/d" $(1); echo "# CONFIG_FEATURE_DEVFS is not set" >>$(1); sed -i "/CONFIG_BLKID/d" $(1); echo "# CONFIG_BLKID is not set" >>$(1); sed -i "/CONFIG_TELNET\b/d" $(1); echo "# CONFIG_TELNET is not set" >>$(1); sed -i "/CONFIG_ARPING/d" $(1); echo "# CONFIG_ARPING is not set" >>$(1); sed -i "/CONFIG_FEATURE_LS_COLOR/d" $(1); echo "# CONFIG_FEATURE_LS_COLOR is not set" >>$(1); else if [ "$(SFP)" = "y" ]; then sed -i "/CONFIG_LESS/d" $(1); echo "# CONFIG_LESS is not set" >>$(1); sed -i "/CONFIG_GZIP/d" $(1); echo "# CONFIG_GZIP is not set" >>$(1); sed -i "/CONFIG_DU\b/d" $(1); echo "# CONFIG_DU is not set" >>$(1); sed -i "/CONFIG_TAIL/d" $(1); echo "# CONFIG_TAIL is not set" >>$(1); sed -i "/CONFIG_BASENAME/d" $(1); echo "# CONFIG_BASENAME is not set" >>$(1); sed -i "/CONFIG_FEATURE_DEVFS/d" $(1); echo "# CONFIG_FEATURE_DEVFS is not set" >>$(1); sed -i "/CONFIG_BLKID/d" $(1); echo "# CONFIG_BLKID is not set" >>$(1); sed -i "/CONFIG_TELNET\b/d" $(1); echo "# CONFIG_TELNET is not set" >>$(1); sed -i "/CONFIG_ARPING/d" $(1); echo "# CONFIG_ARPING is not set" >>$(1); sed -i "/CONFIG_FEATURE_LS_COLOR\b/d" $(1); echo "# CONFIG_FEATURE_LS_COLOR is not set" >>$(1); if [ "$(MODEM)" != "y" ]; then sed -i "/CONFIG_HEAD/d" $(1); echo "# CONFIG_HEAD is not set" >>$(1); fi; if [ "$(SFP4M)" = "y" ]; then sed -i "/CONFIG_TAR/d" $(1); echo "# CONFIG_TAR is not set" >>$(1); sed -i "/CONFIG_DD/d" $(1); echo "# CONFIG_DD is not set" >>$(1); sed -i "/CONFIG_SORT/d" $(1); echo "# CONFIG_SORT is not set" >>$(1); sed -i "/CONFIG_DMESG/d" $(1); echo "# CONFIG_DMESG is not set" >>$(1); sed -i "/CONFIG_CROND/d" $(1); echo "# CONFIG_CROND is not set" >>$(1); sed -i "/CONFIG_EXPR_MATH_SUPPORT_64/d" $(1); echo "# CONFIG_EXPR_MATH_SUPPORT_64 is not set" >>$(1); sed -i "/CONFIG_MD5SUM/d" $(1); echo "# CONFIG_MD5SUM is not set" >>$(1); sed -i "/CONFIG_TAIL/d" $(1); echo "# CONFIG_TAIL is not set" >>$(1); sed -i "/CONFIG_VI/d" $(1); echo "# CONFIG_VI is not set" >>$(1); if [ "$(MODEM)" != "y" ]; then sed -i "/CONFIG_AWK/d" $(1); echo "# CONFIG_AWK is not set" >>$(1); sed -i "/CONFIG_FIND/d" $(1); echo "# CONFIG_FIND is not set" >>$(1); echo "# CONFIG_FINDFS is not set" >>$(1); sed -i "/CONFIG_CUT/d" $(1); echo "# CONFIG_CUT is not set" >>$(1); sed -i "/CONFIG_WC/d" $(1); echo "# CONFIG_WC is not set" >>$(1); fi; fi; else sed -i "/CONFIG_FEATURE_LS_COLOR\b/d" $(1); echo "CONFIG_FEATURE_LS_COLOR=y" >>$(1); if [ "$(BCM_MFG)" = "y" ]; then sed -i "/CONFIG_FEATURE_LS_COLOR_IS_DEFAULT/d" $(1); echo "# CONFIG_FEATURE_LS_COLOR_IS_DEFAULT is not set" >>$(1); fi; fi; fi; if [ "$(DISKTEST)" = "y" ]; then sed -i "/CONFIG_HDPARM/d" $(1); echo "CONFIG_HDPARM=y" >>$(1); fi; if [ "$(BCMSMP)" = "y" ] || [ "$(ALPINE)" = "y" ] || [ "$(LANTIQ)" = "y" ] ; then sed -i "/CONFIG_FEATURE_TOP_SMP_CPU/d" $(1); echo "CONFIG_FEATURE_TOP_SMP_CPU=y" >>$(1); sed -i "/CONFIG_FEATURE_TOP_DECIMALS/d" $(1); echo "CONFIG_FEATURE_TOP_DECIMALS=y" >>$(1); sed -i "/CONFIG_FEATURE_TOP_SMP_PROCESS/d" $(1); echo "CONFIG_FEATURE_TOP_SMP_PROCESS=y" >>$(1); sed -i "/CONFIG_FEATURE_TOPMEM/d" $(1); echo "CONFIG_FEATURE_TOPMEM=y" >>$(1); sed -i "/CONFIG_FEATURE_SHOW_THREADS/d" $(1); echo "CONFIG_FEATURE_SHOW_THREADS=y" >>$(1); fi; if [ "$(ALPINE)" = "y" ] || [ "$(FIBOCOM_FG621)" = "y" ] ; then sed -i "/CONFIG_STTY/d" $(1); echo "CONFIG_STTY=y" >>$(1); fi; if [ "$(LANTIQ)" = "y" ] ; then sed -i "/CONFIG_LSPCI/d" $(1); echo "CONFIG_LSPCI=y" >>$(1); sed -i "/CONFIG_LSUSB/d" $(1); echo "CONFIG_LSUSB=y" >>$(1); fi; if [ "$(LANTIQ)" = "y" ] ; then sed -i "/CONFIG_XARGS/d" $(1); echo "CONFIG_XARGS=y" >>$(1); fi; if [ "$(LANTIQ)" = "y" ] ; then sed -i "/CONFIG_TFTP/d" $(1); echo "CONFIG_TFTP=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_GET/d" $(1); echo "CONFIG_FEATURE_TFTP_GET=y" >>$(1); sed -i "/CONFIG_FEATURE_TFTP_PUT/d" $(1); echo "CONFIG_FEATURE_TFTP_PUT=y" >>$(1); sed -i "/CONFIG_TFTPD/d" $(1); echo "# CONFIG_TFTPD is not set" >>$(1); sed -i "/CONFIG_TFTP_DEBUG/d" $(1); echo "# CONFIG_TFTP_DEBUG is not set" >>$(1); fi; if [ "$(WANRED_LED)" = "y" ]; then sed -i "/CONFIG_ARPING/d" $(1); echo "CONFIG_ARPING=y" >>$(1); fi; if [ "$(HTTPS)" = "y" ]; then sed -i "/CONFIG_WGET/d" $(1); echo "# CONFIG_WGET is not set" >>$(1); fi; if [ "$(HND_ROUTER)" = "y" ]; then sed -i "/CONFIG_FEATURE_BASH_IS_ASH/d" $(1); echo "CONFIG_FEATURE_BASH_IS_ASH=y" >>$(1); sed -i "/CONFIG_FEATURE_BASH_IS_NONE/d" $(1); echo "# CONFIG_FEATURE_BASH_IS_NONE is not set" >>$(1); sed -i "/CONFIG_SPLIT/d" $(1); echo "CONFIG_SPLIT=y" >>$(1); fi; if [ "$(CONNDIAG)" = "y" ]; then sed -i "/CONFIG_IPCRM/d" $(1); echo "CONFIG_IPCRM=y" >>$(1); sed -i "/CONFIG_IPCS/d" $(1); echo "CONFIG_IPCS=y" >>$(1); fi; if [ "$(RSYSLOGD)" = "y" ]; then sed -i "/CONFIG_FEATURE_SYSLOG/d" $(1); echo "# CONFIG_FEATURE_SYSLOG is not set" >>$(1); sed -i "/CONFIG_SYSLOGD/d" $(1); echo "# CONFIG_SYSLOGD is not set" >>$(1); sed -i "/CONFIG_KLOGD/d" $(1); echo "# CONFIG_KLOGD is not set" >>$(1); sed -i "/CONFIG_FEATURE_KLOGD_KLOGCTL/d" $(1); echo "# CONFIG_FEATURE_KLOGD_KLOGCTL is not set" >>$(1); fi; if [ "$(RPAC55)" = "y" ]; then sed -i "/CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE/d" $(1); echo "CONFIG_FEATURE_SYSLOGD_READ_BUFFER_SIZE=384" >>$(1); fi; if [ "$(BCMWL6)" = "y" ]; then sed -i "/CONFIG_FEATURE_NETSTAT_PRG/d" $(1); echo "CONFIG_FEATURE_NETSTAT_PRG=y" >>$(1); fi; if [ "$(HND_ROUTER_AX_6756)" = "y" ]; then sed -i "/CONFIG_SHA256SUM/d" $(1); echo "CONFIG_SHA256SUM=y" >>$(1); fi; )
	$(call platformBusyboxOptions, $(1))
endef
# makefile (from 'Makefile', line 315)
lowercase_N = $(shell echo $(N) | tr A-Z a-z)
# environment
LOGNAME = akito
# makefile (from 'target.mak', line 734)
VZW-AC1300 := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y YANDEXDNS=y ACCEL_PPTPD=y EBTABLES=y AUTODICT=y BUILD_NAME="VZW-AC1300" NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=SPI MDNS=y FINDASUS=y TEMPROOTFS=y DEBUGFS=y CFGSYNC=y USB="USB" NO_USBSTORAGE=y XHCI=y NOTIFICATION_CENTER=y HAPDEVENT=y REDIRECT_DNAME=y UBI=y UBIFS=y WPSMULTIBAND=y LP5523=y BT_CONN=y SINGLE_SSID=y NEWSSID_REV2=y ATF=y QCA_TW_AUTO_BAND4=y STAINFO=y MESH=y AUTHSUPP=y WIFI_DRV_DISABLE=y WIFICLONE=y QCA_VAP_LOCALMAC=y PSISTLOG=y LYRA_HIDE=y DUAL_BACKHAUL=n ETHBACKHAUL=n MASTER_DET=n
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'target.mak', line 263)
RT-AC54U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-AC54U" RTAC54U=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y LED_ALL=y NEW_RGDM=y RA_SKU=y OPENVPN=y VPNC=y DUALWAN=y REBOOT_SCHEDULE=y BOOT_FLASH_TYPE=SPI SPI_FAST_CLOCK=y DRAM=64M MTK_TW_AUTO_BAND4=y SECOND_IF=MT7612E EDCCA=y JFFS2=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_64M=y UBOOT_CMDLINE=y INTERNAL_PA_INTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=y RT2860V2_AP_RTMP_TEMPERATURE_COMPENSATION=n" LAN50=y ATCOVER=y GETREALIP=y
# automatic
+F = $(notdir $+)
# makefile (from 'Makefile', line 290)
EXTRA_KERNEL_YES_CONFIGS_1 := 
# makefile (from 'target.mak', line 568)
SWRT-PGB-M1 := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y USBEXTRAS=y SAMBA4=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="network" AUTODICT=y SHP=y PGBM1=y MUSL_LIBC=y XHCI=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y UTF8_SSID=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y LANWAN_LED=y BTN_WPS_ALLLED=y NTFS="open_2016+ntfs3" EXT4FS=y HFS="open" APFS=y RALINK_DBDC=y OOKLA=y BOOT_FLASH_TYPE=NAND MTK_NAND=y MTK_NAND_BLOCK2=y DUAL_TRX=y NVRAM_ENCRYPT=1 USB_SWAP=n OPENVPN=y ACCEL_PPTPD=y VPNC=y REBOOT_SCHEDULE=y HD_SPINDOWN=y GETREALIP=y DRAM=512M MTK_8021XD3000=y EDCCA_NEW=y FIRST_IF=MT7915D SECOND_IF=MT7915D RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y MUMIMO_2G=y QAM256_2G=y QAM1024_5G=y REPEATER=y PROXYSTA=y SW_HW_AUTH=y ATF=y SAVE_WL_NVRAM_BOTH=y CAPTCHA=y RALINK_BUILDIN_WIFI=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y FORCE_AUTO_UPGRADE=n ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y FRS_LIVE_UPDATE=y ASUSCTRL=y MULTICASTIPTV=y QUAGGA=y 3LANPORT_DEVICE=n PMF=y DTB="mt7621-pgbm1.dtb" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_PGBM1=y DUAL_TRX=y" INTERNETCTRL=y MODEM=y GOOGLE_ASST=y AUTO_FW_UPGRADE=y PRINTER=y UUPLUGIN=y BUILD_NAME="PGB-M1" ASD=y AHS=n SOFTCENTER=y SMARTDNS=y VHT160=n ENTWARE=y CIFS=y SWRT=y SWRT_NAME="PGBM1" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y
# makefile (from 'target.mak', line 144)
RT-N18U := IPV6SUPP=y HTTPS=y ARM=y NTFS="paragon" HFS="paragon" AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-N18U" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y BCM4708=y BCM5301X=y DISK_MONITOR=y LANWAN_LED=y OPTIMIZE_XBOX=y ODMPID=y XHCI=y DUALWAN=y REPEATER=y ARMCPUSMP=up NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y XHCIMODE=y DEBUGFS=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=n DUMP_OOPS_MSG=y LINUX_MTD="64" BCM_RECVFILE=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y SW_HW_AUTH=y NATNL_AIHOME=y EXT4FS=y
# makefile (from 'target.mak', line 941)
BLUECAVE := IPV6SUPP=y HTTPS=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="network" AUTODICT=y LANWAN_LED=y BUILD_NAME="BLUECAVE" SHP=y ODMPID=y UBI=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=n BWDPI=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y STAINFO=y CAPTIVE_PORTAL=n HD_SPINDOWN=y MULTICASTIPTV=y QUAGGA=y DETWAN=n FPROBE=y WEBDAV=y SMARTSYNCBASE=y TIMEMACHINE=y NTFS="tuxera" HFS="tuxera" TFAT=y DISK_MONITOR=y BOOT_FLASH_TYPE=NAND PWRSAVE=y XHCI=y ATEUSB3_FORCE=y BLINK_LED=n WANRED_LED=y PWRRED_LED=y FO_LED=y EJUSB_BTN=y SW_DEVLED=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=y DISABLE_PROXYSTA_UI=n NEW_USER_LOW_RSSI=y ATF=y UBIFS=y PSISTLOG=y TEMPROOTFS=n WPSMULTIBAND=n EXTRA_KERNEL_CONFIGS="" VLAN_TAGGED_BASE=n LAN50=y ATCOVER=y GETREALIP=y QTN=n LANTIQ=y NVRAM_FILE=n BT_CONN=y I2CTOOLS=y NEWSSID_REV2=y IFTTT=y ALEXA=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y NVRAM_64K=y FORCE_AUTO_UPGRADE=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y AMAS=y ETHOBD=y LETSENCRYPT=y UTF8_SSID=y HAPDEVENT=y CONNDIAG=y UUPLUGIN=n BCN_RPT=y BTM_11V=y INFO_EXAP=y WL_SCHED_V3=y GOOGLE_ASST=y
# makefile (from 'target.mak', line 34)
DSL-AC68U-NONE := LOGO_LED=y LED_BTN=y ROG=y
# makefile (from 'target.mak', line 887)
SWRT-RAX120 := IPV6SUPP=y HTTPS=y QCA=y IPQ807X=y MUSL64=n BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="installed" NEW_APP_ARM=y AUTODICT=y LANWAN_LED=y BUILD_NAME="SWRT-RAX120" RAX120=y SHP=y NVRAM_SIZE=0x20000 NVRAM_ENCRYPT=1 ODMPID=y UBI=y DUAL_TRX=n EXT4FS=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n ROG_UI=n TIMEMACHINE=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NETOOL=y TRACEROUTE=y STAINFO=y HD_SPINDOWN=y VPN_FUSION=n ASD=n AHS=n FRS_LIVE_UPDATE=y FORCE_AUTO_UPGRADE=n IFTTT=y ALEXA=y OPEN_NAT=y HAPDEVENT=y AMAS=y DWB=y ETHOBD=y CONNDIAG=y BCN_RPT=n BTM_11V=n DUALWAN=y MULTICASTIPTV=y QUAGGA=y LACP=y BONDING_WAN=y LAN50=all ATCOVER=y GETREALIP=y CLOUDCHECK=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y MTWANCFG=y WEBDAV=y SMARTSYNCBASE=y NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y BOOT_FLASH_TYPE=NAND WIFI_CHIP=QCN50X4 SWITCH_CHIP=QCA8075_PHY_AQR111 WIGIG=n BTN_WIFITOG=y WANPORT2=y SFPP=y PWRSAVE=y FANCTRL=y RGBLED=n AURASYNC=n I2CTOOLS=n DTB="qcom-ipq807x-rt-rax120.dtb" XHCI=y ATEUSB3_FORCE=n BLINK_LED=n WANRED_LED=y SFPP_LED=y R10G_LED=n BTN_TURBO=n LED_ALL=n LED_BTN=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=n NEW_USER_LOW_RSSI=y NOTIFICATION_CENTER=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y QCA_LBD=y QCA_MCSD=y NEWSSID_REV4=y UTF8_SSID=y CFG80211=y VHT160=y VHT80_80=n BW160M=y BWDPI=y WTFAST=n UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y LETSENCRYPT=y EXTRA_KERNEL_CONFIGS="" INTERNETCTRL=y SOFTCENTER=y SMARTDNS=y ENTWARE=y SWRT=y SWRT_NAME="RAX120" SWRT_VER_MAJOR="R" SWRT_VER_MINOR="5.1.6b5" SWRT_CODEBASE="22790" SWRT_UU=n UUPLUGIN=n SWRT_FULLCONE=y SWRT_I2CLED=y
# makefile (from 'target.mak', line 154)
DSL-N55U-B := IPV6SUPP=y DUALWAN=y WIRELESS_SWITCH=y MIPS32=r2 RALINK=y RT3883=y NTFS="paragon" PARENTAL2=y IPV6SUPP=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y ACCEL_PPTPD=y APP="network" PRINTER=y DSL=y ANNEX_B=y USB="USB" AUTODICT=y LANWAN_LED=y DISK_MONITOR=y BUILD_NAME="DSL-N55U-B" SFP8M=y AP_CARRIER_DETECTION=y LOCALE2012=y NO_MKTOOLS=y DEBUGFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y DSL_REMOTE=y
# makefile (from 'target.mak', line 130)
ET8PRO := HND_ROUTER=y PROFILE="947622GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="ET8PRO" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n BT_CONN=y IPERF3=y MSSID_PRELINK=y FRS_LIVE_UPDATE=y BCM_CLED=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y BCMEVENTD=y AMAS_ADTBW=y SW_CTRL_ALLLED=y AMAS_SYNC_2G_BW=y AMAZON_WSS=y AHS=y ASD=y INTERNETCTRL=y AVBLCHAN=y ADTBW_RADAR=y INSTANT_GUARD=y AMAS_ETHDETECT=y RTL8221VB=y HAS_5G_2=y WIFI6E=y FRONTHAUL_DWB=y ACL96=y GOOGLE_ASST=y EXTEND_LIMIT=y DHD_6715B0=y
# makefile (from 'target.mak', line 21)
RT-N10+ := MIPS32=r2 AUTODICT=y PARENTAL2=y SFP=y SFP4M=y BUILD_NAME="RT-N10+" USER_LOW_RSSI=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'Makefile', line 92)
SRCBASE := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210
# makefile (from 'target.mak', line 51)
RT-AC5300 := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y BCMWL6=y BCMWL6A=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y SSD=n STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y CFEZ=y ERPTEST=n WIFILOGO=n FORCE_AUTO_UPGRADE=n FAKEID=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y ASPMD=n BCMEVENTD=n WLCLMLOAD=n BCM_MUMIMO=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y ALEXA=y IFTTT=y LETSENCRYPT=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y HD_SPINDOWN=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV CONNTRACK=n AMAS=y AMASDB=y AVBLCHAN=y WATCH_REINIT=n MFGFW=n CTFNAT=y CONNDIAG=y NFCM=n UTF8_SSID=y NVRAM_ENCRYPT=y UUPLUGIN=y SW_CTRL_ALLLED=y OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="RT-AC5300" RGMII_BRCM5301X=y SWITCH2="" BCM_MMC=n BCM_7114=y ETLAN_LED=y NVSIZE="128" DHDAP=y DPSTA=y BCMFA=n GMAC3=y LACP=y WTFAST=y FORCE_SN="380" FORCE_EN="630" UUPLUGIN=y HAS_5G_2=y GAME_MODE=y GOOGLE_ASST=y JFFS_NVRAM=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y
# makefile (from 'platform.mak', line 206)
platformKernelConfig = 	@( if [ "$(RALINK)" = "y" ]; then if [ "$(RT3052)" = "y" ]; then sed -i "/CONFIG_RALINK_RT3052_MP2/d" $(1); echo "CONFIG_RALINK_RT3052_MP2=y" >>$(1); sed -i "/CONFIG_RALINK_RT3052/d" $(1); echo "CONFIG_RALINK_RT3052=y" >>$(1); sed -i "/CONFIG_MTD_PHYSMAP_START/d" $(1); echo "CONFIG_MTD_PHYSMAP_START=0xBF000000" >>$(1); sed -i "/CONFIG_RT3052_ASIC/d" $(1); echo "CONFIG_RT3052_ASIC=y" >>$(1); sed -i "/CONFIG_RT2880_DRAM_128M/d" $(1); sed -i "/CONFIG_RT2880_DRAM_32M/d" $(1); echo "CONFIG_RT2880_DRAM_32M=y" >>$(1); sed -i "/CONFIG_RALINK_RAM_SIZE/d" $(1); echo "CONFIG_RALINK_RAM_SIZE=32" >>$(1); sed -i "/CONFIG_RALINK_RT3883_MP/d" $(1); echo "# CONFIG_RALINK_RT3883_MP is not set" >>$(1); sed -i "/CONFIG_RALINK_RT3883/d" $(1); echo "# CONFIG_RALINK_RT3883 is not set" >>$(1); sed -i "/CONFIG_RT3883_ASIC/d" $(1); echo "# CONFIG_RT3883_ASIC is not set" >>$(1); sed -i "/CONFIG_RALINK_RT3883_MP/d" $(1); echo "# CONFIG_RALINK_RT3883_MP is not set" >>$(1); sed -i "/CONFIG_RALINK_RT3883_MP/d" $(1); echo "# CONFIG_RALINK_RT3883_MP is not set" >>$(1); sed -i "/CONFIG_RALINK_RT3662_2T2R/d" $(1); echo "# CONFIG_RALINK_RT3662_2T2R is not set" >>$(1); sed -i "/CONFIG_RALINK_RT3052_2T2R/d" $(1); echo "CONFIG_RALINK_RT3052_2T2R=y" >>$(1); sed -i "/CONFIG_RALINK_RT3352/d" $(1); echo "# CONFIG_RALINK_RT3352 is not set" >>$(1); sed -i "/CONFIG_LAN_WAN_SUPPORT/d" $(1); echo "CONFIG_LAN_WAN_SUPPORT=y" >>$(1); sed -i "/CONFIG_RT_3052_ESW/d" $(1); echo "CONFIG_RT_3052_ESW=y" >>$(1); fi; if [ "$(SPI_FAST_CLOCK)" = "y" ] ; then sed -i "/CONFIG_MTD_SPI_FAST_CLOCK/d" $(1); echo "CONFIG_MTD_SPI_FAST_CLOCK=y" >>$(1); fi; if [ "$(RTAC1200HP)" = "y" ] ; then sed -i "/CONFIG_RAETH_HAS_PORT5/d" $(1); echo "CONFIG_RAETH_HAS_PORT5=y" >>$(1); sed -i "/CONFIG_P5_MAC_TO_PHY_MODE/d" $(1); echo "CONFIG_P5_MAC_TO_PHY_MODE=y" >>$(1); sed -i "/CONFIG_MAC_TO_GIGAPHY_MODE_ADDR/d" $(1); echo "CONFIG_MAC_TO_GIGAPHY_MODE_ADDR=0x5" >>$(1); fi; if [ "$(EDCCA)" = "y" ] ; then sed -i "/CONFIG_RT2860V2_AP_EDCCA_MONITOR/d" $(1); echo "CONFIG_RT2860V2_AP_EDCCA_MONITOR=y" >>$(1); fi; if [ "$(MT7621)" = "y" ] ; then sed -i "/CONFIG_RALINK_MT7620/d" $(1); echo "# CONFIG_RALINK_MT7620 is not set" >>$(1); sed -i "/CONFIG_MT7620_ASIC/d" $(1); echo "# CONFIG_MT7620_ASIC is not set" >>$(1); sed -i "/CONFIG_MT7620_BAUDRATE/d" $(1); echo "# CONFIG_MT7620_BAUDRATE is not set" >>$(1); sed -i "/CONFIG_RALINK_MT7621/d" $(1); echo "CONFIG_RALINK_MT7621=y" >>$(1); sed -i "/CONFIG_MT7621_ASIC/d" $(1); echo "CONFIG_MT7621_ASIC=y" >>$(1); sed -i "/CONFIG_MTK_MTD_NAND/d" $(1); echo "# CONFIG_MTK_MTD_NAND is not set" >>$(1); sed -i "/CONFIG_MIPS_MT_SMP/d" $(1); echo "CONFIG_MIPS_MT_SMP=y" >>$(1); sed -i "/CONFIG_MIPS_MT_SMTC/d" $(1); echo "# CONFIG_MIPS_MT_SMTC is not set" >>$(1); sed -i "/CONFIG_MIPS_VPE_LOADER/d" $(1); echo "# CONFIG_MIPS_VPE_LOADER is not set" >>$(1); sed -i "/CONFIG_SCHED_SMT/d" $(1); echo "CONFIG_SCHED_SMT=y" >>$(1); sed -i "/CONFIG_MIPS_MT_FPAFF/d" $(1); echo "CONFIG_MIPS_MT_FPAFF=y" >>$(1); sed -i "/CONFIG_MIPS_CMP/d" $(1); echo "CONFIG_MIPS_CMP=y" >>$(1); if [ "$(RT4GAX56)" != "y" ] ; then sed -i "/CONFIG_HIGHMEM/d" $(1); echo "# CONFIG_HIGHMEM is not set" >>$(1); fi; sed -i "/CONFIG_NR_CPUS/d" $(1); echo "CONFIG_NR_CPUS=4" >>$(1); sed -i "/CONFIG_PCIE_PORT0/d" $(1); echo "CONFIG_PCIE_PORT0=y" >>$(1); sed -i "/CONFIG_PCIE_PORT1/d" $(1); echo "CONFIG_PCIE_PORT1=y" >>$(1); sed -i "/CONFIG_RALINK_SPDIF/d" $(1); echo "CONFIG_RALINK_SPDIF=m" >>$(1); sed -i "/CONFIG_RCU_CPU_STALL_DETECTOR/d" $(1); echo "CONFIG_RCU_CPU_STALL_DETECTOR=y" >>$(1); sed -i "/CONFIG_CRYPTO_PCRYPT/d" $(1); echo "# CONFIG_CRYPTO_PCRYPT is not set" >>$(1); sed -i "/CONFIG_RAETH_HW_VLAN_RX/d" $(1); echo "# CONFIG_RAETH_HW_VLAN_RX is not set" >>$(1); sed -i "/CONFIG_RAETH_QDMA/d" $(1); echo "CONFIG_RAETH_QDMA=y" >>$(1); sed -i "/CONFIG_GE1_MII_FORCE_100/d" $(1); echo "# CONFIG_GE1_MII_FORCE_100 is not set" >>$(1); sed -i "/CONFIG_GE1_RGMII_FORCE_1000/d" $(1); echo "CONFIG_GE1_RGMII_FORCE_1000=y" >>$(1); sed -i "/CONFIG_RAETH_GMAC2/d" $(1); echo "CONFIG_RAETH_GMAC2=y" >>$(1); sed -i "/CONFIG_MAC_TO_GIGAPHY_MODE_ADDR2/d" $(1); echo "CONFIG_MAC_TO_GIGAPHY_MODE_ADDR2=4" >>$(1); sed -i "/CONFIG_HW_IPSEC/d" $(1); echo "# CONFIG_HW_IPSEC is not set" >>$(1); sed -i "/CONFIG_GE1_MII_AN/d" $(1); echo "# CONFIG_GE1_MII_AN is not set" >>$(1); sed -i "/CONFIG_GE2_MII_AN/d" $(1); echo "# CONFIG_GE2_MII_AN is not set" >>$(1); sed -i "/CONFIG_GE1_RVMII_FORCE_100/d" $(1); echo "# CONFIG_GE1_RVMII_FORCE_100 is not set" >>$(1); sed -i "/CONFIG_GE2_RVMII_FORCE_100/d" $(1); echo "# CONFIG_GE2_RVMII_FORCE_100 is not set" >>$(1); sed -i "/CONFIG_GE1_RGMII_AN/d" $(1); echo "# CONFIG_GE1_RGMII_AN is not set" >>$(1); sed -i "/CONFIG_GE2_RGMII_AN/d" $(1); echo "# CONFIG_GE2_RGMII_AN is not set" >>$(1); sed -i "/CONFIG_GE1_RGMII_NONE/d" $(1); echo "# CONFIG_GE1_RGMII 
_NONE is not set" >>$(1); sed -i "/CONFIG_GE2_RGMII_FORCE_1000/d" $(1); echo "# CONFIG_GE2_RGMII_FORCE_1000 is not set" >>$(1); sed -i "/CONFIG_GE2_MII_FORCE_100/d" $(1); echo "# CONFIG_GE2_MII_FORCE_100 is not set" >>$(1); sed -i "/CONFIG_GE2_INTERNAL_GPHY/d" $(1); echo "CONFIG_GE2_INTERNAL_GPHY=y" >>$(1); sed -i "/CONFIG_RALINK_HWCRYPTO/d" $(1); echo "# CONFIG_RALINK_HWCRYPTO is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_PREBIND/d" $(1); echo "# CONFIG_RA_HW_NAT_PREBIND is not set" >>$(1); sed -i "/CONFIG_PPE_MCAST/d" $(1); echo "# CONFIG_PPE_MCAST is not set" >>$(1); sed -i "/CONFIG_FIRST_IF_RT2860/d" $(1); echo "# CONFIG_FIRST_IF_RT2860 is not set" >>$(1); sed -i "/CONFIG_RT2860V2_AP/d" $(1); echo "# CONFIG_RT2860V2_AP is not set" >>$(1); sed -i "/CONFIG_RT2860V2_AP_MEMORY_OPTIMIZATION/d" $(1); echo "# CONFIG_RT2860V2_AP_MEMORY_OPTIMIZATION is not set" >>$(1); sed -i "/CONFIG_RT3XXX_EHCI/d" $(1); echo "# CONFIG_RT3XXX_EHCI is not set" >>$(1); sed -i "/CONFIG_USB_EHCI_ROOT_HUB_TT/d" $(1); echo "# CONFIG_USB_EHCI_ROOT_HUB_TT is not set" >>$(1); sed -i "/CONFIG_USB_EHCI_TT_NEWSCHED/d" $(1); echo "# CONFIG_USB_EHCI_TT_NEWSCHED is not set" >>$(1); sed -i "/CONFIG_RT3XXX_OHCI/d" $(1); echo "# CONFIG_RT3XXX_OHCI is not set" >>$(1); sed -i "/CONFIG_USB_OHCI_LITTLE_ENDIAN/d" $(1); echo "# CONFIG_USB_OHCI_LITTLE_ENDIAN is not set" >>$(1); sed -i "/CONFIG_USB_XHCI_HCD/d" $(1); echo "CONFIG_USB_XHCI_HCD=y" >>$(1); sed -i "/CONFIG_USB_MT7621_XHCI_HCD/d" $(1); echo "CONFIG_USB_MT7621_XHCI_HCD=y" >>$(1); sed -i "/CONFIG_PERIODIC_ENP/d" $(1); echo "CONFIG_PERIODIC_ENP=y" >>$(1); sed -i "/CONFIG_XHCI_DEV_NOTE/d" $(1); echo "CONFIG_XHCI_DEV_NOTE=y" >>$(1); sed -i "/CONFIG_USB_XHCI_HCD_DEBUGGING/d" $(1); echo "CONFIG_USB_XHCI_HCD_DEBUGGING=y" >>$(1); sed -i "/CONFIG_USB_EHCI_HCD/d" $(1); echo "# CONFIG_USB_EHCI_HCD is not set" >>$(1); sed -i "/CONFIG_USB_OHCI_HCD/d" $(1); echo "# CONFIG_USB_OHCI_HCD is not set" >>$(1); sed -i "/CONFIG_USB_OHCI_LITTLE_ENDIAN/d" $(1); echo "# CONFIG_USB_OHCI_LITTLE_ENDIAN is not set" >>$(1); for first_if in $(FIRST_IF_POOL) ; do if [ "$(FIRST_IF)" = "$${first_if}" ] ; then sed -i "/CONFIG_FIRST_IF_$${first_if}/d" $(1); echo "CONFIG_FIRST_IF_$${first_if}=y" >> $(1); else sed -i "/CONFIG_FIRST_IF_$${first_if}/d" $(1); echo "# CONFIG_FIRST_IF_$${first_if} is not set" >> $(1); fi; done; if [ "$(NO_USBSTORAGE)" = "y" ]; then sed -i "/CONFIG_PARTITION_ADVANCED/d" $(1); echo "# CONFIG_PARTITION_ADVANCED is not set" >>$(1); sed -i "/CONFIG_MSDOS_PARTITION/d" $(1); echo "# CONFIG_MSDOS_PARTITION is not set" >>$(1); sed -i "/CONFIG_EFI_PARTITION/d" $(1); echo "# CONFIG_EFI_PARTITION is not set" >>$(1); sed -i "/CONFIG_DEVTMPFS/d" $(1); echo "# CONFIG_DEVTMPFS is not set" >>$(1); sed -i "/CONFIG_DEVTMPFS_MOUNT/d" $(1); echo "# CONFIG_DEVTMPFS_MOUNT is not set" >>$(1); sed -i "/CONFIG_SCSI_MOD/d" $(1); echo "# CONFIG_SCSI_MOD is not set" >>$(1); sed -i "/CONFIG_SCSI/d" $(1); echo "# CONFIG_SCSI is not set" >>$(1); sed -i "/CONFIG_SCSI_DMA/d" $(1); echo "# CONFIG_SCSI_DMA is not set" >>$(1); sed -i "/CONFIG_SCSI_PROC_FS/d" $(1); echo "# CONFIG_SCSI_PROC_FS is not set" >>$(1); sed -i "/CONFIG_BLK_DEV_SD/d" $(1); echo "# CONFIG_BLK_DEV_SD is not set" >>$(1); sed -i "/CONFIG_BLK_DEV_SR/d" $(1); echo "# CONFIG_BLK_DEV_SR is not set" >>$(1); sed -i "/CONFIG_CHR_DEV_SG/d" $(1); echo "# CONFIG_CHR_DEV_SG is not set" >>$(1); sed -i "/CONFIG_SCSI_CONSTANTS/d" $(1); echo "# CONFIG_SCSI_CONSTANTS is not set" >>$(1); sed -i "/CONFIG_USB_ACM/d" $(1); echo "# CONFIG_USB_ACM is not set" >>$(1); sed -i "/CONFIG_USB_WDM/d" $(1); echo "# CONFIG_USB_WDM is not set" >>$(1); sed -i "/CONFIG_USB_TMC/d" $(1); echo "# CONFIG_USB_TMC is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE/d" $(1); echo "# CONFIG_USB_STORAGE is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_DATAFAB/d" $(1); echo "# CONFIG_USB_STORAGE_DATAFAB is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_FREECOM/d" $(1); echo "# CONFIG_USB_STORAGE_FREECOM is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_ISD200/d" $(1); echo "# CONFIG_USB_STORAGE_ISD200 is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_USBAT/d" $(1); echo "# CONFIG_USB_STORAGE_USBAT is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_SDDR09/d" $(1); echo "# CONFIG_USB_STORAGE_SDDR09 is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_SDDR55/d" $(1); echo "# CONFIG_USB_STORAGE_SDDR55 is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_JUMPSHOT/d" $(1); echo "# CONFIG_USB_STORAGE_JUMPSHOT is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_ALAUDA/d" $(1); echo "# CONFIG_USB_STORAGE_ALAUDA is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_KARMA/d" $(1); echo "# CONFIG_USB_STORAGE_KARMA is not set" >>$(1); sed -i "/CONFIG_USB_STORAGE_CYPRESS_ATACB/d" $(1); echo "# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set" >>$(1); sed -i "/CONFIG_USB_UAS/d" $(1); echo "# CONFIG_USB_UAS is not set" >>$(1); fi; fi; if [ "$(MT7628)" = "y" ]; then sed -i "/CONFIG_RALINK_MT7628/d" $(1); echo "CONFIG_RALINK_MT7628=y" >>$(1); sed -i "/CONFIG_MT7628_ASIC/d" $(1); echo "CONFIG_MT7628_ASIC=y" >>$(1); fi; if [ "$(MT7629)" = "y" ]; then sed -i "/CONFIG_RALINK_MT7629/d" $(1); echo "CONFIG_RALINK_MT7629=y" >>$(1); sed -i "/CONFIG_MT7629_ASIC/d" $(1); echo "CONFIG_MT7629_ASIC=y" >>$(1); fi; if [ "$(MT7621)" = "y" ]; then sed -i "/CONFIG_RALINK_MT7621/d" $(1); echo "CONFIG_RALINK_MT7621=y" >>$(1); sed -i "/CONFIG_MT7621_ASIC/d" $(1); echo "CONFIG_MT7621_ASIC=y" >>$(1); fi; if [ "$(MT7622)" = "y" ]; then sed -i "/CONFIG_RALINK_MT7622/d" $(1); echo "CONFIG_RALINK_MT7622=y" >>$(1); sed -i "/CONFIG_MT7622_ASIC/d" $(1); echo "CONFIG_MT7622_ASIC=y" >>$(1); fi; fi; for bftype in $(BOOT_FLASH_TYPE_POOL) ; do sed -i "/CONFIG_MTD_$${bftype}_RALINK\>/d" $(1); if [ "$(BOOT_FLASH_TYPE)" = "$${bftype}" ] ; then echo "CONFIG_MTD_$${bftype}_RALINK=y" >> $(1); else echo "# CONFIG_MTD_$${bftype}_RALINK is not set" >> $(1); fi; if [ "$${bftype}" = "NAND" ] ; then sed -i "/CONFIG_MTK_MTD_NAND\>/d" $(1); if [ "$(BOOT_FLASH_TYPE)" = "$${bftype}" ] ; then echo "CONFIG_MTK_MTD_NAND=y" >> $(1); else echo "# CONFIG_MTK_MTD_NAND is not set" >> $(1); fi; fi; done; sed -i "/CONFIG_MTD_ANY_RALINK/d" $(1); echo "# CONFIG_MTD_ANY_RALINK is not set" >>$(1); for dram in $(DRAM_POOL) ; do sed -i "/CONFIG_RT2880_DRAM_$${dram}\>/d" $(1); if [ "$(DRAM)" = "$${dram}" ] ; then echo "CONFIG_RT2880_DRAM_$${dram}=y" >> $(1); else echo "# CONFIG_RT2880_DRAM_$${dram} is not set" >> $(1); fi; done; for sec_if in $(SECOND_IF_POOL) ; do sed -i "/CONFIG_MTD_$${sec_if}_RALINK\>/d" $(1); if [ "$(SECOND_IF)" = "$${sec_if}" ] ; then echo "CONFIG_SECOND_IF_$${sec_if}=y" >> $(1); else echo "# CONFIG_SECOND_IF_$${sec_if} is not set" >> $(1); fi; done; if [ "$(SECOND_IF)" = "MT7610E" ] ; then sed -i "/CONFIG_MT7610_AP\>/d" $(1); echo "CONFIG_MT7610_AP=m" >>$(1); sed -i "/CONFIG_MT7610_AP_V24_DATA_STRUCTURE/d" $(1); echo "CONFIG_MT7610_AP_V24_DATA_STRUCTURE=y" >>$(1); sed -i "/CONFIG_MT7610_AP_LED/d" $(1); echo "CONFIG_MT7610_AP_LED=y" >>$(1); sed -i "/CONFIG_MT7610_AP_WSC/d" $(1); echo "CONFIG_MT7610_AP_WSC=y" >>$(1); sed -i "/CONFIG_MT7610_AP_WSC_V2/d" $(1); echo "CONFIG_MT7610_AP_WSC_V2=y" >>$(1); sed -i "/CONFIG_MT7610_AP_LLTD/d" $(1); echo "CONFIG_MT7610_AP_LLTD=y" >>$(1); sed -i "/CONFIG_MT7610_AP_WDS/d" $(1); echo "CONFIG_MT7610_AP_WDS=y" >>$(1); sed -i "/CONFIG_MT7610_AP_MBSS/d" $(1); echo "CONFIG_MT7610_AP_MBSS=y" >>$(1); sed -i "/CONFIG_MT7610_AP_APCLI/d" $(1); echo "# CONFIG_MT7610_AP_APCLI is not set" >>$(1); sed -i "/CONFIG_MT7610_AP_IGMP_SNOOP/d" $(1); echo "CONFIG_MT7610_AP_IGMP_SNOOP=y" >>$(1); sed -i "/CONFIG_MT7610_AP_DFS/d" $(1); echo "# CONFIG_MT7610_AP_DFS is not set" >>$(1); sed -i "/CONFIG_MT7610_AP_CARRIER/d" $(1); echo "# CONFIG_MT7610_AP_CARRIER is not set" >>$(1); sed -i "/CONFIG_MT7610_AP_80211N_DRAFT3/d" $(1); echo "CONFIG_MT7610_AP_80211N_DRAFT3=y" >>$(1); sed -i "/CONFIG_BAND_STEERING/d" $(1); echo "# CONFIG_BAND_STEERING is not set" >>$(1); sed -i "/CONFIG_MT7610_AP_ATE/d" $(1); echo "CONFIG_MT7610_AP_ATE=y" >>$(1); sed -i "/CONFIG_MT7610_AP_QA/d" $(1); echo "CONFIG_MT7610_AP_QA=y" >>$(1); sed -i "/CONFIG_MT7610_AP_FLASH/d" $(1); echo "CONFIG_MT7610_AP_FLASH=y" >>$(1); sed -i "/CONFIG_MT7610_AP_BIG_ENDIAN/d" $(1); echo "# CONFIG_MT7610_AP_BIG_ENDIAN is not set" >>$(1); sed -i "/CONFIG_MT7610_AP_TSSI_COMPENSATION/d" $(1); echo "# CONFIG_MT7610_AP_TSSI_COMPENSATION is not set" >>$(1); sed -i "/CONFIG_RTMP_TEMPERATURE_COMPENSATION/d" $(1); echo "CONFIG_RTMP_TEMPERATURE_COMPENSATION=y" >>$(1); sed -i "/CONFIG_MT7610_AP_SINGLE_SKU/d" $(1); echo "# CONFIG_MT7610_AP_SINGLE_SKU is not set" >>$(1); sed -i "/CONFIG_MT7610_AP_CFG80211/d" $(1); echo "# CONFIG_MT7610_AP_CFG80211 is not set" >>$(1); sed -i "/CONFIG_MT7610_MCAST_RATE_SPECIFIC/d" $(1); echo "CONFIG_MT7610_MCAST_RATE_SPECIFIC=y" >>$(1); sed -i "/CONFIG_MT7610_ED_MONITOR/d" $(1); echo "CONFIG_MT7610_ED_MONITOR=y" >>$(1); fi; if [ "$(FIRST_IF)" = "MT7603E" ] ; then sed -i "/CONFIG_WIFI_MT7603E/d" $(1); echo "CONFIG_WIFI_MT7603E=m" >>$(1); sed -i "/CONFIG_UAPSD/d" $(1); echo "CONFIG_UAPSD=y" >>$(1); sed -i "/CONFIG_MT_MAC/d" $(1); echo "CONFIG_MT_MAC=y" >>$(1); sed -i "/CONFIG_RLT_MAC/d" $(1); echo "#CONFIG_RLT_MAC is not set" >>$(1); sed -i "/CONFIG_RLT_AP_SUPPORT/d" $(1); echo "#CONFIG_RLT_AP_SUPPORT is not set" >>$(1); sed -i "/CONFIG_SNIFFER_SUPPORT/d" $(1); echo "CONFIG_SNIFFER_SUPPORT=y" >>$(1); sed -i "/CONFIG_ACL_V2_SUPPORT/d" $(1); echo "CONFIG_ACL_V2_SUPPORT=y" >>$(1); sed -i "/CONFIG_SNIFFER_MIB_CMD/d" $(1); echo "# CONFIG_SNIFFER_MIB_CMD is not set" >>$(1); sed -i "/CONFIG_ALL_NET_EVENT/d" $(1); echo "# CONFIG_ALL_NET_EVENT is not set" >>$(1); sed -i "/CONFIG_MCAST_RATE_SPECIFIC/d" $(1); echo "# CONFIG_MCAST_RATE_SPECIFIC is not set" >>$(1); sed -i "/CONFIG_BTCOEX_CONCURRENT/d" $(1); echo "# CONFIG_BTCOEX_CONCURRENT is not set" >>$(1); if [ "$(RTN56UB1)" = "y" ] || [ "$(RTN56UB2)" = "y" ] ; then if [ "$(MT7603_INTERNAL_PA_EXTERNAL_LNA)" = "y" ] ; then sed -i "/CONFIG_MT7603E_INTERNAL_PA_EXTERNAL_LNA/d" $(1); echo "CONFIG_MT7603E_INTERNAL_PA_EXTERNAL_LNA=y" >>$(1); else sed -i "/CONFIG_MT7603E_INTERNAL_PA_EXTERNAL_LNA/d" $(1); echo "# CONFIG_MT7603E_INTERNAL_PA_EXTERNAL_LNA is not set" >>$(1); fi; if [ "$(MT7603_EXTERNAL_PA_EXTERNAL_LNA)" = "y" ] ; then sed -i "/CONFIG_MT7603E_EXTERNAL_PA_EXTERNAL_LNA/d" $(1); echo "CONFIG_MT7603E_EXTERNAL_PA_EXTERNAL_LNA=y" >>$(1); else sed -i "/CONFIG_MT7603E_EXTERNAL_PA_EXTERNAL_LNA/d" $(1); echo "# CONFIG_MT7603E_EXTERNAL_PA_EXTERNAL_LNA is not set" >>$(1); fi; fi; fi; if [ "$(SECOND_IF)" = "MT7612E" ] ; then sed -i "/CONFIG_RLT_WIFI/d" $(1); echo "CONFIG_RLT_WIFI=m" >>$(1); sed -i "/CONFIG_WIFI_MT7612E/d" $(1); echo "CONFIG_WIFI_MT7612E=m" >>$(1); sed -i "/CONFIG_FIRST_IF_EEPROM_PROM/d" $(1); echo "# CONFIG_FIRST_IF_EEPROM_PROM is not set" >>$(1); sed -i "/CONFIG_FIRST_IF_EEPROM_EFUSE/d" $(1); echo "# CONFIG_FIRST_IF_EEPROM_EFUSE is not set" >>$(1); sed -i "/CONFIG_FIRST_IF_EEPROM_FLASH/d" $(1); echo "CONFIG_FIRST_IF_EEPROM_FLASH=y" >>$(1); sed -i "/CONFIG_RT_FIRST_CARD_EEPROM/d" $(1); echo "CONFIG_RT_FIRST_CARD_EEPROM=\"flash\"" >>$(1); sed -i "/CONFIG_SECOND_IF_EEPROM_PROM/d" $(1); echo "# CONFIG_SECOND_IF_EEPROM_PROM is not set" >>$(1); sed -i "/CONFIG_SECOND_IF_EEPROM_EFUSE/d" $(1); echo "# CONFIG_SECOND_IF_EEPROM_EFUSE is not set" >>$(1); sed -i "/CONFIG_SECOND_IF_EEPROM_FLASH/d" $(1); echo "CONFIG_SECOND_IF_EEPROM_FLASH=y" >>$(1); sed -i "/CONFIG_RT_SECOND_CARD_EEPROM/d" $(1); echo "CONFIG_RT_SECOND_CARD_EEPROM=\"flash\"" >>$(1); sed -i "/CONFIG_MULTI_INF_SUPPORT/d" $(1); echo "CONFIG_MULTI_INF_SUPPORT=y" >>$(1); sed -i "/CONFIG_WIFI_BASIC_FUNC/d" $(1); echo "CONFIG_WIFI_BASIC_FUNC=y" >>$(1); sed -i "/CONFIG_WSC_INCLUDED/d" $(1); echo "CONFIG_WSC_INCLUDED=y" >>$(1); sed -i "/CONFIG_WSC_V2_SUPPORT/d" $(1); echo "CONFIG_WSC_V2_SUPPORT=y" >>$(1); sed -i "/CONFIG_WSC_NFC_SUPPORT/d" $(1); echo "# CONFIG_WSC_NFC_SUPPORT is not set" >>$(1); sed -i "/CONFIG_DOT11N_DRAFT3/d" $(1); echo "CONFIG_DOT11N_DRAFT3=y" >>$(1); sed -i "/CONFIG_DOT11_VHT_AC/d" $(1); echo "CONFIG_DOT11_VHT_AC=y" >>$(1); sed -i "/CONFIG_DOT11W_PMF_SUPPORT/d" $(1); echo "# CONFIG_DOT11W_PMF_SUPPORT is not set" >>$(1); sed -i "/CONFIG_TXBF_SUPPORT/d" $(1); echo "# CONFIG_TXBF_SUPPORT is not set" >>$(1); sed -i "/CONFIG_LLTD_SUPPORT/d" $(1); echo "CONFIG_LLTD_SUPPORT=y" >>$(1); sed -i "/CONFIG_QOS_DLS_SUPPORT/d" $(1); echo "CONFIG_QOS_DLS_SUPPORT=y" >>$(1); sed -i "/CONFIG_WAPI_SUPPORT/d" $(1); echo "# CONFIG_WAPI_SUPPORT is not set" >>$(1); if [ "$(RTAC1200HP)" = "y" ] ; then sed -i "/CONFIG_CARRIER_DETECTION_SUPPORT/d" $(1); echo "CONFIG_CARRIER_DETECTION_SUPPORT=y" >>$(1); else sed -i "/CONFIG_CARRIER_DETECTION_SUPPORT/d" $(1); echo "# CONFIG_CARRIER_DETECTION_SUPPORT is not set" >>$(1); fi; sed -i "/CONFIG_ED_MONITOR_SUPPORT/d" $(1); echo "# CONFIG_ED_MONITOR_SUPPORT is not set" >>$(1); sed -i "/CONFIG_IGMP_SNOOP_SUPPORT/d" $(1); echo "CONFIG_IGMP_SNOOP_SUPPORT=y" >>$(1); sed -i "/CONFIG_BLOCK_NET_IF/d" $(1); echo "CONFIG_BLOCK_NET_IF=y" >>$(1); sed -i "/CONFIG_RATE_ADAPTION/d" $(1); echo "CONFIG_RATE_ADAPTION=y" >>$(1); sed -i "/CONFIG_NEW_RATE_ADAPT_SUPPORT/d" $(1); echo "CONFIG_NEW_RATE_ADAPT_SUPPORT=y" >>$(1); sed -i "/CONFIG_AGS_SUPPORT/d" $(1); echo "# CONFIG_AGS_SUPPORT is not set" >>$(1); sed -i "/CONFIG_IDS_SUPPORT/d" $(1); echo "# CONFIG_IDS_SUPPORT is not set" >>$(1); sed -i "/CONFIG_WIFI_WORK_QUEUE/d" $(1); echo "# CONFIG_WIFI_WORK_QUEUE is not set" >>$(1); sed -i "/CONFIG_WIFI_SKB_RECYCLE/d" $(1); echo "# CONFIG_WIFI_SKB_RECYCLE is not set " >>$(1); sed -i "/CONFIG_RTMP_FLASH_SUPPORT/d" $(1); echo "CONFIG_RTMP_FLASH_SUPPORT=y" >>$(1); sed -i "/CONFIG_LED_CONTROL_SUPPORT/d" $(1); echo "CONFIG_LED_CONTROL_SUPPORT=y" >>$(1); sed -i "/CONFIG_SINGLE_SKU_V2/d" $(1); echo "CONFIG_SINGLE_SKU_V2=y" >>$(1); sed -i "/CONFIG_ATE_SUPPORT/d" $(1); echo "CONFIG_ATE_SUPPORT=y" >>$(1); sed -i "/CONFIG_RT2860V2_AP_32B_DESC/d" $(1); echo "# CONFIG_RT2860V2_AP_32B_DESC is not set " >>$(1); sed -i "/CONFIG_HOTSPOT/d" $(1); echo "# CONFIG_HOTSPOT is not set" >>$(1); sed -i "/CONFIG_CO_CLOCK_SUPPORT/d" $(1); echo "# CONFIG_CO_CLOCK_SUPPORT is not set" >>$(1); if [ "$(RTN56UB1)" = "y" ] || [ "$(RTN56UB2)" = "y" ] ; then if [ "$(MT7603_EXTERNAL_PA_EXTERNAL_LNA)" = "y" ] ; then sed -i "/CONFIG_FIRST_CARD_EXTERNAL_PA/d" $(1); echo "CONFIG_FIRST_CARD_EXTERNAL_PA=y" >>$(1); sed -i "/CONFIG_FIRST_CARD_EXTERNAL_LNA/d" $(1); echo "CONFIG_FIRST_CARD_EXTERNAL_LNA=y" >>$(1); else sed -i "/CONFIG_FIRST_CARD_EXTERNAL_PA/d" $(1); echo "# CONFIG_FIRST_CARD_EXTERNAL_PA is not set" >>$(1); sed -i "/CONFIG_FIRST_CARD_EXTERNAL_LNA/d" $(1); echo "# CONFIG_FIRST_CARD_EXTERNAL_LNA is not set " >>$(1); fi; else sed -i "/CONFIG_FIRST_CARD_EXTERNAL_PA/d" $(1); echo "# CONFIG_FIRST_CARD_EXTERNAL_PA is not set" >>$(1); sed -i "/CONFIG_FIRST_CARD_EXTERNAL_LNA/d" $(1); echo "# CONFIG_FIRST_CARD_EXTERNAL_LNA is not set " >>$(1); fi; if [ "$(RTAC1200HP)" = "y" ] ; then sed -i "/CONFIG_SECOND_CARD_EXTERNAL_PA/d" $(1); echo "CONFIG_SECOND_CARD_EXTERNAL_PA=y" >>$(1); sed -i "/CONFIG_SECOND_CARD_EXTERNAL_LNA/d" $(1); echo "CONFIG_SECOND_CARD_EXTERNAL_LNA=y" >>$(1); sed -i "/CONFIG_RLT_MAC/d" $(1); echo "CONFIG_RLT_MAC=y" >>$(1); else sed -i "/CONFIG_SECOND_CARD_EXTERNAL_PA/d" $(1); echo "# CONFIG_SECOND_CARD_EXTERNAL_PA is not set " >>$(1); sed -i "/CONFIG_SECOND_CARD_EXTERNAL_LNA/d" $(1); echo "# CONFIG_SECOND_CARD_EXTERNAL_LNA is not set" >>$(1); sed -i "/CONFIG_RLT_MAC/d" $(1); echo "#CONFIG_RLT_MAC is not set" >>$(1); fi; if [ "$(RTN56UB1)" = "y" ] ||  [ "$(RTN56UB2)" = "y" ] ; then sed -i "/CONFIG_RA_HW_NAT_IPV6/d" $(1); echo "CONFIG_RA_HW_NAT_IPV6=y" >>$(1); sed -i "/CONFIG_RAETH_8023AZ_EEE/d" $(1); echo "CONFIG_RAETH_8023AZ_EEE=y" >>$(1); sed -i "/CONFIG_DFS_SUPPORT/d" $(1); echo "CONFIG_DFS_SUPPORT=y" >>$(1); else sed -i "/CONFIG_DFS_SUPPORT/d" $(1); echo "# CONFIG_DFS_SUPPORT is not set" >>$(1); sed -i "/CONFIG_RAETH_8023AZ_EEE/d" $(1); echo "# CONFIG_RAETH_8023AZ_EEE is not set" >>$(1); fi; sed -i "/CONFIG_MEMORY_OPTIMIZATION/d" $(1); echo "# CONFIG_MEMORY_OPTIMIZATION is not set" >>$(1); sed -i "/CONFIG_RTMP_MAC/d" $(1); echo "CONFIG_RTMP_MAC=y" >>$(1); sed -i "/CONFIG_WIFI_MODE_AP/d" $(1); echo "# CONFIG_WIFI_MODE_AP is not set" >>$(1); sed -i "/CONFIG_RTMP_PCI_SUPPORT/d" $(1); echo "CONFIG_RTMP_PCI_SUPPORT=y " >>$(1); sed -i "/CONFIG_WIFI_MODE_AP/d" $(1); echo "CONFIG_WIFI_MODE_AP=y " >>$(1); sed -i "/CONFIG_WIFI_MODE_STA/d" $(1); echo "# CONFIG_WIFI_MODE_STA is not set" >>$(1); sed -i "/CONFIG_WIFI_MODE_BOTH/d" $(1); echo "# CONFIG_WIFI_MODE_BOTH is not set" >>$(1); sed -i "/CONFIG_RLT_AP_SUPPORT/d" $(1); echo "CONFIG_RLT_AP_SUPPORT=m" >>$(1); sed -i "/CONFIG_WDS_SUPPORT/d" $(1); echo "CONFIG_WDS_SUPPORT=y" >>$(1); sed -i "/CONFIG_MBSS_SUPPORT/d" $(1); echo "CONFIG_MBSS_SUPPORT=y" >>$(1); sed -i "/CONFIG_APCLI_SUPPORT/d" $(1); echo "# CONFIG_APCLI_SUPPORT is not set" >>$(1); sed -i "/CONFIG_NINTENDO_AP/d" $(1); echo "# CONFIG_NINTENDO_AP is not set" >>$(1); sed -i "/CONFIG_COC_SUPPORT/d" $(1); echo "CONFIG_COC_SUPPORT=y " >>$(1); sed -i "/CONFIG_DELAYED_TCP_ACK_SUPPORT/d" $(1); echo "# CONFIG_DELAYED_TCP_ACK_SUPPORT is not set" >>$(1); sed -i "/CONFIG_RALINK_RT28XX/d" $(1); echo "# CONFIG_RALINK_RT28XX is not set" >>$(1); sed -i "/CONFIG_RALINK_RT3092/d" $(1); echo "# CONFIG_RALINK_RT3092 is not set" >>$(1); sed -i "/CONFIG_RALINK_RT3572/d" $(1); echo "# CONFIG_RALINK_RT3572 is not set" >>$(1); sed -i "/CONFIG_RALINK_RT5392/d" $(1); echo "# CONFIG_RALINK_RT5392 is not set " >>$(1); sed -i "/CONFIG_RALINK_RT5572/d" $(1); echo "# CONFIG_RALINK_RT5572 is not set" >>$(1); sed -i "/CONFIG_RALINK_RT5592/d" $(1); echo "# CONFIG_RALINK_RT5592 is not set" >>$(1); sed -i "/CONFIG_RALINK_RT6352/d" $(1); echo "# CONFIG_RALINK_RT6352 is not set" >>$(1); sed -i "/CONFIG_RALINK_MT7610E/d" $(1); echo "# CONFIG_RALINK_MT7610E is not set" >>$(1); sed -i "/CONFIG_RALINK_MT7610U/d" $(1); echo "# CONFIG_RALINK_MT7610U is not set" >>$(1); sed -i "/CONFIG_RALINK_RT8592/d" $(1); echo "# CONFIG_RALINK_RT8592 is not set" >>$(1); sed -i "/CONFIG_RALINK_MT7612E/d" $(1); echo "CONFIG_RALINK_MT7612E=y" >>$(1); sed -i "/CONFIG_RALINK_MT7612U/d" $(1); echo "# CONFIG_RALINK_MT7612U is not set" >>$(1); sed -i "/CONFIG_RTDEV/d" $(1); echo "CONFIG_RTDEV=y" >>$(1); sed -i "/CONFIG_RA_NAT_NONE/d" $(1); echo "# CONFIG_RA_NAT_NONE is not set" >>$(1); sed -i "/CONFIG_RA_NAT_HW/d" $(1); echo "CONFIG_RA_NAT_HW=y" >>$(1); fi; if [ "$(REPEATER)" = "y" ] ; then sed -i "/CONFIG_RT2860V2_AP_APCLI/d" $(1); echo "CONFIG_RT2860V2_AP_APCLI=y" >>$(1); sed -i "/CONFIG_RT2860V2_AP_MAC_REPEATER/d" $(1); echo "CONFIG_RT2860V2_AP_MAC_REPEATER=y" >>$(1); if [ "$(SECOND_IF)" = "MT7610E" ] ; then sed -i "/CONFIG_MT7610_AP_APCLI/d" $(1); echo "CONFIG_MT7610_AP_APCLI=y" >>$(1); sed -i "/CONFIG_MT7610_AP_MAC_REPEATER/d" $(1); echo "CONFIG_MT7610_AP_MAC_REPEATER=y" >>$(1); sed -i "/CONFIG_M7610_CON_WPS_SUPPORT/d" $(1); echo "# CONFIG_M7610_CON_WPS_SUPPORT is not set" >>$(1); fi; if [ "$(SECOND_IF)" = "MT7612E" ] ; then sed -i "/CONFIG_APCLI_SUPPORT/d" $(1); echo "CONFIG_APCLI_SUPPORT=y" >>$(1); sed -i "/CONFIG_MAC_REPEATER_SUPPORT/d" $(1); echo "# CONFIG_MAC_REPEATER_SUPPORT is not set" >>$(1); sed -i "/CONFIG_APCLI_CERT_SUPPORT/d" $(1); echo "# CONFIG_APCLI_CERT_SUPPORT is not set" >>$(1); fi; if [ "$(FIRST_IF)" = "MT7615E" ] || [ "$(SECOND_IF)" = "MT7615E" ] ; then sed -i "/CONFIG_APCLI_SUPPORT/d" $(1); echo "CONFIG_APCLI_SUPPORT=y" >>$(1); sed -i "/CONFIG_MAC_REPEATER_SUPPORT/d" $(1); echo "CONFIG_MAC_REPEATER_SUPPORT=y" >>$(1); sed -i "/CONFIG_APCLI_CERT_SUPPORT/d" $(1); echo "CONFIG_APCLI_CERT_SUPPORT=y" >>$(1); fi; if [ "$(RPAC87)" = "y" ] ; then sed -i "/CONFIG_RA_NAT_HW/d" $(1); echo "# CONFIG_RA_NAT_HW is not set" >>$(1); sed -i "/CONFIG_RAETH_GMAC2/d" $(1); echo "# CONFIG_RAETH_GMAC2 is not set" >>$(1); sed -i "/CONFIG_SCSI_PROC_FS/d" $(1); echo "# CONFIG_SCSI_PROC_FS is not set" >>$(1); sed -i "/CONFIG_BLK_DEV_SD/d" $(1); echo "# CONFIG_BLK_DEV_SD is not set" >>$(1); sed -i "/CONFIG_BLK_DEV_SR/d" $(1); echo "# CONFIG_BLK_DEV_SR is not set" >>$(1); sed -i "/CONFIG_CHR_DEV_SG/d" $(1); echo "# CONFIG_CHR_DEV_SG is not set" >>$(1); sed -i "/CONFIG_SCSI_MULTI_LUN/d" $(1); echo "# CONFIG_SCSI_MULTI_LUN is not set" >>$(1); sed -i "/CONFIG_SCSI_CONSTANTS/d" $(1); echo "# CONFIG_SCSI_CONSTANTS is not set" >>$(1); sed -i "/CONFIG_SCSI_LOWLEVEL/d" $(1); echo "# CONFIG_SCSI_LOWLEVEL is not set" >>$(1); sed -i "/CONFIG_PPP/d" $(1); echo "# CONFIG_PPP is not set" >>$(1); sed -i "/CONFIG_USB_USBNET/d" $(1); echo "# CONFIG_USB_USBNET is not set" >>$(1); sed -i "/CONFIG_USB_HSO/d" $(1); echo "# CONFIG_USB_HSO is not set" >>$(1); sed -i "/CONFIG_RALINK_SPDIF/d" $(1); echo "# CONFIG_RALINK_SPDIF is not set" >>$(1); sed -i "/CONFIG_USB_DEVICEFS/d" $(1); echo "# CONFIG_USB_DEVICEFS is not set" >>$(1); sed -i "/CONFIG_USB_BUS_STATS/d" $(1); echo "# CONFIG_USB_BUS_STATS is not set" >>$(1); sed -i "/CONFIG_USB_XHCI_HCD_DEBUGGING/d" $(1); echo "# CONFIG_USB_XHCI_HCD_DEBUGGING is not set" >>$(1); sed -i "/CONFIG_USB_ACM/d" $(1); echo "# CONFIG_USB_ACM is not set" >>$(1); sed -i "/CONFIG_USB_PRINTER/d" $(1); echo "# CONFIG_USB_PRINTER is not set" >>$(1); sed -i "/CONFIG_USB_WDM/d" $(1); echo "# CONFIG_USB_WDM is not set" >>$(1); sed -i "/CONFIG_USB_SERIAL/d" $(1); echo "# CONFIG_USB_SERIAL is not set" >>$(1); sed -i "/CONFIG_DMADEVICES/d" $(1); echo "# CONFIG_DMADEVICES is not set" >>$(1); fi; fi; if [ "$(RA_SKU)" = "y" ] || [ "$(RA_SKU_IN_DRV)" = "y" ] ; then sed -i "/CONFIG_RT2860V2_SINGLE_SKU/d" $(1); echo "CONFIG_RT2860V2_SINGLE_SKU=y" >>$(1); if [ "$(SECOND_IF)" = "MT7610E" ] ; then sed -i "/CONFIG_MT7610_AP_SINGLE_SKU/d" $(1); echo "CONFIG_MT7610_AP_SINGLE_SKU=y" >>$(1); fi; if [ "$(MT7628)" = "y" ] ; then sed -i "/CONFIG_MT_SINGLE_SKU_V2/d" $(1); echo "CONFIG_MT_SINGLE_SKU_V2=y" >>$(1); fi; if [ "$(RA_SKU_IN_DRV)" = "y" ] ; then sed -i "/CONFIG_SINGLE_SKU_IN_DRIVER/d" $(1); echo "CONFIG_SINGLE_SKU_IN_DRIVER=y" >>$(1); fi; fi; if [ "$(RTAC1200HP)" = "y" ] ; then sed -i "/CONFIG_RT2860V2_AP_CARRIER/d" $(1); echo "CONFIG_RT2860V2_AP_CARRIER=y" >>$(1); fi; if [ "$(MT7621)" = "y" ] ; then sed -i "/CONFIG_NF_CT_NETLINK/d" $(1); echo "CONFIG_NF_CT_NETLINK=m" >>$(1); sed -i "/CONFIG_NF_CT_NETLINK_TIMEOUT/d" $(1); echo "CONFIG_NF_CT_NETLINK_TIMEOUT=m" >>$(1); sed -i "/CONFIG_NETFILTER_TPROXY/d" $(1); echo "CONFIG_NETFILTER_TPROXY=m" >>$(1); fi; if [ "$(UBI)" = "y" ]; then sed -i "/CONFIG_MTD_UBI\>/d" $(1); echo "CONFIG_MTD_UBI=y" >>$(1); sed -i "/CONFIG_MTD_UBI_WL_THRESHOLD/d" $(1); echo "CONFIG_MTD_UBI_WL_THRESHOLD=4096" >>$(1); sed -i "/CONFIG_MTD_UBI_BEB_RESERVE/d" $(1); echo "CONFIG_MTD_UBI_BEB_RESERVE=1" >>$(1); sed -i "/CONFIG_MTD_UBI_GLUEBI/d" $(1); echo "CONFIG_MTD_UBI_GLUEBI=y" >>$(1); sed -i "/CONFIG_FACTORY_CHECKSUM/d" $(1); echo "CONFIG_FACTORY_CHECKSUM=y" >>$(1); if [ "$(UBI_DEBUG)" = "y" ]; then sed -i "/CONFIG_MTD_UBI_DEBUG/d" $(1); echo "CONFIG_MTD_UBI_DEBUG=y" >>$(1); sed -i "/CONFIG_GCOV_KERNEL/d" $(1); echo "# CONFIG_GCOV_KERNEL is not set" >>$(1); sed -i "/CONFIG_L2TP_DEBUGFS/d" $(1); echo "# CONFIG_L2TP_DEBUGFS is not set" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_MSG/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_MSG=y" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_PARANOID/d" $(1); echo "# CONFIG_MTD_UBI_DEBUG_PARANOID is not set" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_DISABLE_BGT/d" $(1); echo "# CONFIG_MTD_UBI_DEBUG_DISABLE_BGT is not set" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_EMULATE_BITFLIPS/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_EMULATE_BITFLIPS=y" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_EMULATE_WRITE_FAILURES/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_EMULATE_WRITE_FAILURES=y" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_EMULATE_ERASE_FAILURES/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_EMULATE_ERASE_FAILURES=y" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_MSG_BLD/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_MSG_BLD=y" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_MSG_EBA/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_MSG_EBA=y" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_MSG_WL/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_MSG_WL=y" >>$(1); sed -i "/CONFIG_MTD_UBI_DEBUG_MSG_IO/d" $(1); echo "CONFIG_MTD_UBI_DEBUG_MSG_IO=y" >>$(1); sed -i "/CONFIG_JBD_DEBUG/d" $(1); echo "# CONFIG_JBD_DEBUG is not set" >>$(1); sed -i "/CONFIG_LKDTM/d" $(1); echo "# CONFIG_LKDTM is not set" >>$(1); sed -i "/CONFIG_DYNAMIC_DEBUG/d" $(1); echo "CONFIG_DYNAMIC_DEBUG=y" >>$(1); sed -i "/CONFIG_SPINLOCK_TEST/d" $(1); echo "# CONFIG_SPINLOCK_TEST is not set" >>$(1); else sed -i "/CONFIG_MTD_UBI_DEBUG/d" $(1); echo "# CONFIG_MTD_UBI_DEBUG is not set" >>$(1); fi; if [ "$(UBIFS)" = "y" ]; then sed -i "/CONFIG_UBIFS_FS/d" $(1); echo "CONFIG_UBIFS_FS=y" >>$(1); sed -i "/CONFIG_UBIFS_FS_XATTR/d" $(1); echo "# CONFIG_UBIFS_FS_XATTR is not set" >>$(1); sed -i "/CONFIG_UBIFS_FS_ADVANCED_COMPR/d" $(1); echo "CONFIG_UBIFS_FS_ADVANCED_COMPR=y" >>$(1); sed -i "/CONFIG_UBIFS_FS_LZO/d" $(1); echo "CONFIG_UBIFS_FS_LZO=y" >>$(1); sed -i "/CONFIG_UBIFS_FS_ZLIB/d" $(1); echo "CONFIG_UBIFS_FS_ZLIB=y" >>$(1); sed -i "/CONFIG_UBIFS_FS_DEBUG/d" $(1); echo "# CONFIG_UBIFS_FS_DEBUG is not set" >>$(1); else sed -i "/CONFIG_UBIFS_FS/d" $(1); echo "# CONFIG_UBIFS_FS is not set" >>$(1); fi; fi; if [ "$(FIBOCOM_FG621)" = "y" ]; then sed -i "/CONFIG_FIBOCOM_FG621/d" $(1); echo "CONFIG_FIBOCOM_FG621=y" >>$(1); fi; if [ "$(DSL)" = "y" ]; then sed -i "/CONFIG_RTL8367M/d" $(1); echo "# CONFIG_RTL8367M is not set" >>$(1); sed -i "/CONFIG_RTL8367R/d" $(1); echo "CONFIG_RTL8367R=y" >>$(1); sed -i "/CONFIG_RAETH_GMAC2/d" $(1); echo "# CONFIG_RAETH_GMAC2 is not set" >>$(1); sed -i "/CONFIG_GE2_RGMII_FORCE_1000/d" $(1); echo "# CONFIG_GE2_RGMII_FORCE_1000 is not set" >>$(1); sed -i "/CONFIG_RAETH_DSL/d" $(1); echo "CONFIG_RAETH_DSL=y" >>$(1); sed -i "/CONFIG_RA_HW_NAT/d" $(1); echo "# CONFIG_RA_HW_NAT is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_AUTO_BIND/d" $(1); echo "# CONFIG_RA_HW_NAT_AUTO_BIND is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_MANUAL_BIND/d" $(1); echo "# CONFIG_RA_HW_NAT_MANUAL_BIND is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_SPEEDUP_UPSTREAM/d" $(1); echo "# CONFIG_RA_HW_NAT_SPEEDUP_UPSTREAM is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_SPEEDUP_DOWNSTREAM/d" $(1); echo "# CONFIG_RA_HW_NAT_SPEEDUP_DOWNSTREAM is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_SPEEDUP_BIDIRECTION/d" $(1); echo "# CONFIG_RA_HW_NAT_SPEEDUP_BIDIRECTION is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_LAN_VLANID/d" $(1); echo "# CONFIG_RA_HW_NAT_LAN_VLANID is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_WAN_VLANID/d" $(1); echo "# CONFIG_RA_HW_NAT_WAN_VLANID is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_BINDING_THRESHOLD/d" $(1); echo "# CONFIG_RA_HW_NAT_BINDING_THRESHOLD is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_QURT_LMT/d" $(1); echo "# CONFIG_RA_HW_NAT_QURT_LMT is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_HALF_LMT/d" $(1); echo "# CONFIG_RA_HW_NAT_HALF_LMT is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_FULL_LMT/d" $(1); echo "# CONFIG_RA_HW_NAT_FULL_LMT is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_TBL_1K/d" $(1); echo "# CONFIG_RA_HW_NAT_TBL_1K is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_TBL_2K/d" $(1); echo "# CONFIG_RA_HW_NAT_TBL_2K is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_TBL_4K/d" $(1); echo "# CONFIG_RA_HW_NAT_TBL_4K is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_TBL_8K/d" $(1); echo "# CONFIG_RA_HW_NAT_TBL_8K is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_TBL_16K/d" $(1); echo "# CONFIG_RA_HW_NAT_TBL_16K is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_HASH0/d" $(1); echo "# CONFIG_RA_HW_NAT_HASH0 is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_HASH1/d" $(1); echo "# CONFIG_RA_HW_NAT_HASH1 is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_PRE_ACL_SIZE/d" $(1); echo "# CONFIG_RA_HW_NAT_PRE_ACL_SIZE is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_PRE_MTR_SIZE/d" $(1); echo "# CONFIG_RA_HW_NAT_PRE_MTR_SIZE is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_PRE_AC_SIZE/d" $(1); echo "# CONFIG_RA_HW_NAT_PRE_AC_SIZE is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_POST_MTR_SIZE/d" $(1); echo "# CONFIG_RA_HW_NAT_POST_MTR_SIZE is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_POST_AC_SIZE/d" $(1); echo "# CONFIG_RA_HW_NAT_POST_AC_SIZE is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_TCP_KA/d" $(1); echo "# CONFIG_RA_HW_NAT_TCP_KA is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_UDP_KA/d" $(1); echo "# CONFIG_RA_HW_NAT_UDP_KA is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_ACL_DLTA/d" $(1); echo "# CONFIG_RA_HW_NAT_ACL_DLTA is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_UNB_DLTA/d" $(1); echo "# CONFIG_RA_HW_NAT_UNB_DLTA is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_UNB_MNP/d" $(1); echo "# CONFIG_RA_HW_NAT_UNB_MNP is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_UDP_DLTA/d" $(1); echo "# CONFIG_RA_HW_NAT_UDP_DLTA is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_TCP_DLTA/d" $(1); echo "# CONFIG_RA_HW_NAT_TCP_DLTA is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_FIN_DLTA/d" $(1); echo "# CONFIG_RA_HW_NAT_FIN_DLTA is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_IPV6/d" $(1); echo "# CONFIG_RA_HW_NAT_IPV6 is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_ACL2UP_HELPER/d" $(1); echo "# CONFIG_RA_HW_NAT_ACL2UP_HELPER is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_DSCP2UP_HELPER/d" $(1); echo "# CONFIG_RA_HW_NAT_DSCP2UP_HELPER is not set" >>$(1); sed -i "/CONFIG_RA_HW_NAT_NONE2UP/d" $(1); echo "# CONFIG_RA_HW_NAT_NONE2UP is not set" >>$(1); fi; if [ "$(RTN14U)" = "y" ] || [ "$(RTAC52U)" = "y" ] || [ "$(RTAC51U)" = "y" ] || [ "$(RTN11P)" = "y" ] || [ "$(RTAC54U)" = "y" ] || [ "$(RTN54U)" = "y" ] || [ "$(RTAC1200HP)" = "y" ]; then sed -i "/CONFIG_RAETH_HW_VLAN_TX/d" $(1); echo "# CONFIG_RAETH_HW_VLAN_TX is not set" >>$(1); echo "# CONFIG_RA_HW_NAT_PPTP_L2TP is not set" >>$(1); fi; )
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
MAKE_VERSION := 4.1
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 398)
define build_bluecave_image
	mips-openwrt-linux-uclibc-objcopy -O binary -R .reginfo -R .notes -R .note -R .comment -R .mdebug -R .note.gnu.build-id -S $(LANTIQ_LINUX_DIR)/vmlinux ./vmlinux
	mips-openwrt-linux-uclibc-objcopy -R .reginfo -R .notes -R .note -R .comment -R .mdebug -R .note.gnu.build-id -S $(LANTIQ_LINUX_DIR)/vmlinux ./vmlinux.elf
	cp -fpR $(LANTIQ_LINUX_DIR)/vmlinux ./vmlinux.debug
	cp ./vmlinux ./vmlinux-easy350_anywan_router_800m
	tools/dtc -O dtb -o ./easy350_anywan_router_800m.dtb ./proprietary/dts/easy350_anywan_router_800m.dts
	tools/host/bin/patch-dtb ./vmlinux-easy350_anywan_router_800m ./easy350_anywan_router_800m.dtb 32768
	tools/host/bin/lzma e ./vmlinux-easy350_anywan_router_800m ./vmlinux-easy350_anywan_router_800m.lzma
	mv ./vmlinux-easy350_anywan_router_800m.lzma ./vmlinux.lzma
	tools/u-boot-2010.06/tools/mkimage -A mips -O linux -T kernel -a 0x80002000 -C lzma -e 0x80002000 -n 'MIPS OpenWrt $(LANTIQ_LINUX_DIR)' -d ./vmlinux.lzma ./uImage
	len2=`wc -c ./vmlinux.lzma | awk '{ printf $$1 }'` ; echo "Raymond: $$len2"
	len=`wc -c ./vmlinux.lzma | awk '{ printf $$1 }'`; pad=`expr  131072 - $$len %  131072`; pad=`expr $$pad %  131072`; pad=`expr $$pad -  64`; [ $$pad -lt 0 ] && pad=0; echo pad is $$pad; echo len is $$len; cat ./vmlinux.lzma > ./vmlinux.lzma.padded; dd if=/dev/zero of=./vmlinux.lzma.padded bs=1 count=$$pad seek=$$len
	load_addr=0x$(shell grep -w _text $(LANTIQ_LINUX_DIR)/System.map 2>/dev/null| awk '{ printf "%s", $$1 }'); entry_addr=0x$(shell grep -w kernel_entry $(LANTIQ_LINUX_DIR)/System.map 2>/dev/null| awk '{ printf "%s", $$1 }'); tools/u-boot-2010.06/tools/mkimage -A mips -O linux -T kernel -a $(s_load_addr) -C $(compression_type) -e $(s_entry_addr) -n '$(image_header)' $(call bluecave_mkimage_extra_checks) -d ./vmlinux.lzma.padded ./uImage.padded
	cp -f ./uImage.padded $(PLATFORMDIR)/uImage
	# ------ rootfs --------
	tools/host/bin/mksquashfs4 $(PLATFORMDIR)/target $(PLATFORMDIR)/root.squashfs -noappend -root-owned -comp xz -Xpreset 9 -Xe -Xlc 0 -Xlp 2 -Xpb 2 -processors 1
	tools/u-boot-2010.06/tools/mkimage -A MIPS -O Linux -C lzma -T filesystem -e 0x00 -a 0x00 -n "LTQCPE RootFS" -d $(PLATFORMDIR)/root.squashfs $(PLATFORMDIR)/rootfs.img.padded
	cp -f $(PLATFORMDIR)/rootfs.img.padded $(PLATFORMDIR)/rootfs.img
	IMAGE_LIST="$(PLATFORMDIR)/rootfs.img $(PLATFORMDIR)/uImage"; ONEIMAGE="image/fullimage.img"; PLATFORM="XRX500" ; rm -f $$ONEIMAGE; for i in $$IMAGE_LIST; do if [ -e $$i ] ; then len=`wc -c $$i | awk '{ printf $$1 }'`; pad=`expr 16 - $$len % 16`; pad=`expr $$pad % 16`; if [ -e $$ONEIMAGE.tmp ] ; then cat $$i >> $$ONEIMAGE.tmp; else cat $$i > $$ONEIMAGE.tmp; fi; while [ $$pad -ne 0 ]; do echo -n "0" >> $$ONEIMAGE.tmp; pad=`expr $$pad - 1`; done; else echo "$$i not found!"; rm -f $$ONEIMAGE.tmp; exit 1; fi; done; tools/u-boot-2010.06/tools/mkimage -A MIPS -O Linux -C none -T multi -e 0x00 -a 0x00 -n "$$PLATFORM Fullimage" -d $$ONEIMAGE.tmp $$ONEIMAGE; rm -f $$ONEIMAGE.tmp; chmod 644 $$ONEIMAGE;
	cp proprietary/gphy_firmware.img image/
	cp proprietary/uImage_bootcore image/
	cp proprietary/u-boot-nand.bin image/
	rm -f vmlinux*
	rm -f uImage*
	rm -f easy350_anywan_router_800m.dtb
	dd if=/dev/zero count=1 bs=128 | tr "\000" "\145" > ./eof.txt
	rm -f image/tmp-linux.trx; ctools/trx -o image/tmp-linux.trx image/fullimage.img ./eof.txt
	ctools/trx_asus -i image/tmp-linux.trx -r $(BUILD_NAME),$(KERNEL_VER).$(FS_VER),$(SERIALNO),$(EXTENDNO),image/$(IMGNAME).trx
	rm -f ./eof.txt
endef
# environment
XDG_VTNR = 1
# makefile (from 'Makefile', line 296)
EXTRA_KERNEL_NO_CONFIGS := 
# makefile (from 'Makefile', line 176)
EXTENDNO := _-gdedf4c2
# makefile (from 'target.mak', line 494)
RT4G-AX56 := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y PARENTAL2=y AUTODICT=y SHP=y RT4GAX56=y MUSL_LIBC=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y YANDEXDNS=y UTF8_SSID=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y BLINK_LED=y LANWAN_LED=y WANRED_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=SPI MTK_NAND=y MTK_NAND_BLOCK2=y DUAL_TRX=y NVRAM_ENCRYPT=1 OPENVPN=y ACCEL_PPTPD=y VPNC=y DRAM=512M MTK_8021XD3000=y EDCCA_NEW=y FIRST_IF=MT7915D SECOND_IF=MT7915D RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y SW_HW_AUTH=y ATF=y SAVE_WL_NVRAM_BOTH=y CAPTCHA=y RALINK_BUILDIN_WIFI=y MULTICASTIPTV=y QUAGGA=y PMF=y JFFS2=y PSISTLOG=y TEMPROOTFS=y GOOGLE_ASST=y FORCE_AUTO_UPGRADE=y ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y CAPTIVE_PORTAL=y REBOOT_SCHEDULE=y DTB="mt7621-rfb-ax-nmbm.dtb" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_RT4GAX56=y DUAL_TRX=y" BUILD_NAME="4G-AX56" USB="USB" XHCI=y NO_USBSTORAGE=y MODEM=y GOBI=y DLOADER=y FIBOCOM_FG621=y AUTO_FW_UPGRADE=y NO_USBSTORAGE=y
# makefile (from 'target.mak', line 10)
RT-N16 := IPV6SUPP=y  HTTPS=y MIPS32=r2 AUTODICT=y NTFS="paragon" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y DNSMQ=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" BUILD_NAME="RT-N16" REPEATER=y DUALWAN=y DISK_MONITOR=y USER_LOW_RSSI=y OPENVPN=n VPNC=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 125)
XD4PRO_CFG := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="XD4PRO" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y DISABLE_REPEATER_UI=y DISABLE_PROXYSTA_UI=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=n MODEM=n PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n USB="USB" APP="none" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=n BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=n  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=n TFAT=n NTFS="" HFS="" NEWSSID_REV2=y NEWSSID_REV4=y NEWSSID_REV5=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=n BRCM_HOSTAPD=y TCPLUGIN=y UUPLUGIN=y IPERF3=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=y NO_SAMBA=y NO_FTP=y NO_USBSTORAGE=y BCM_CLED=y SINGLE_LED=y BHCOST_OPT=y AMAS_WGN=y MSSID_PRELINK=y AMAZON_WSS=y PIPEFW=y AHS=y ASD=y INTERNETCTRL=y SW_CTRL_ALLLED=y HSPOT=y BCN_RPT=y BTM_11V=y BCMEVENTD=y PORT2_DEVICE=y URLFW=y AMAS_SYNC_2G_BW=y INSTANT_GUARD=y AMAS_ETHDETECT=y ACL96=y IPV6S46=y GOOGLE_ASST=y ASUSCTRL=y
# environment
LC_TIME = zh_CN.UTF-8
# makefile (from 'target.mak', line 308)
RT-AC1200_BASE := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7628=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="none" AUTODICT=y SHP=y RTAC1200=y NTFS="open" ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y BOOT_FLASH_TYPE=SPI DRAM=64M SECOND_IF=MT7612E EDCCA_NEW=y RALINK_DFS=y JFFS2=y PSISTLOG=y TEMPROOTFS=y EXTRA_KERNEL_CONFIGS="MT7628_BAUDRATE=57600 RT2880_DRAM_64M=y UBOOT_CMDLINE=y MODEL_RTAC1200=y"
# makefile (from 'target.mak', line 299)
RT-AC1200HP := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y  MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-AC1200HP" RTAC1200HP=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y LED_ALL=y NEW_RGDM=y RA_SKU=y VPNC=y LANWAN_LED=y BTN_WIFITOG=y DUALWAN=y REPEATER=y PROXYSTA=y SSH=y DISK_MONITOR=y AP_CARRIER_DETECTION=y REBOOT_SCHEDULE=y BLINK_LED=y BOOT_FLASH_TYPE=SPI SPI_FAST_CLOCK=y DRAM=128M  MTK_TW_AUTO_BAND4=y SECOND_IF=MT7612E EDCCA=y JFFS2=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_128M=y UBOOT_CMDLINE=y INTERNAL_PA_EXTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=n RT2860V2_AP_RTMP_TEMPERATURE_COMPENSATION=y" LAN50=y ATCOVER=y GETREALIP=y
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = xim
# makefile (from 'platform.mak', line 14)
RTVER := 0.9.30.1
# environment
SHLVL = 1
# makefile (from 'target.mak', line 61)
HND-94912_BASE := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y
# makefile (from 'target.mak', line 81)
RT-AX95Q := HND_ROUTER=y PROFILE="947622GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RT-AX95Q" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y FRONTHAUL_DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n BT_CONN=y IPERF3=y MSSID_PRELINK=y FRS_LIVE_UPDATE=y BCM_CLED=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y BCMEVENTD=y AMAS_ADTBW=y SW_CTRL_ALLLED=y AMAS_SYNC_2G_BW=y AMAZON_WSS=y AHS=y ASD=y INTERNETCTRL=y AVBLCHAN=y ADTBW_RADAR=y INSTANT_GUARD=y AMAS_ETHDETECT=y RTL8221VB=y ACL96=y GOOGLE_ASST=y IPV6S46=y EXTEND_LIMIT=y ASUSCTRL=y
# makefile (from 'target.mak', line 233)
RT-AC51U+ := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-AC51U+" RTAC51UP=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y LED_ALL=y NEW_RGDM=y RA_SKU=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DEBUGFS=y REBOOT_SCHEDULE=y BTN_WPS_ALLLED=y SSH=y LAN50=y ATCOVER=y GETREALIP=y BOOT_FLASH_TYPE=SPI SPI_FAST_CLOCK=y NEWSSID_REV2=y DRAM=64M SECOND_IF=MT7610E EDCCA=y RALINK_DFS=y JFFS2=y PSISTLOG=y TEMPROOTFS=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_64M=y UBOOT_CMDLINE=y INTERNAL_PA_INTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=n MT7610_AP_APCLI=y SWITCH_CHIP_RTL8367RB=y SWITCH_CTRLIF_MDIO=y RAETH_HAS_PORT5=y P5_RGMII_TO_MAC_MODE=y MODEL_RTAC51UP=y"
# makefile (from 'target.mak', line 695)
RT-AC59_CD6N := HTTPS=y MIPS32=r2 QCA=y QCN550X=y QCA9888=y QCA8337N=y BBEXTRAS=y EBTABLES=y AUTODICT=y SHP=y NVRAM_SIZE=0x1E000 ODMPID=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y STAINFO=y NEWSSID_REV4=y LAN50=all BLINK_LED=y BTN_WPS_ALLLED=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y JFFS2=y PSISTLOG=y QCA_TW_AUTO_BAND4=y QCA_VAP_LOCALMAC=y TEMPROOTFS=y WPSMULTIBAND=y UTF8_SSID=y NVRAM_ENCRYPT=y NOTIFICATION_CENTER=y HAPDEVENT=y AMAS=y AVBLCHAN=y REPEATER=y DISABLE_REPEATER_UI=y SW_HW_AUTH=y DWB=y ETHOBD=y BUILD_NAME="RT-AC59_CD6N" QSDK_VER=.mesh REMOVE_ROUTER_UI=y
# makefile (from 'target.mak', line 15)
RT-N12D1 := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y LANWAN_LED=y DNSMQ=y DYN_DICT_NAME=y SWMODE_SWITCH=y WL_AUTO_CHANNEL=y BUILD_NAME="RT-N12D1" USER_LOW_RSSI=y DUALWAN=y YANDEXDNS=y TEMPROOTFS=y REBOOT_SCHEDULE=y HTTPS=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 67)
GT-AXE16000 := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="GT-AXE16000" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y DPSTA=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV6=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y ROG_UI=y AMASDB=n CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=y CAPTCHA=y OUTFOX=y GAME_MODE=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=y BCM_CLED=y BONDING=y BONDING_WAN=y ACL96=y WIFI6E=y LACP=y OWE_TRANS=y DHD_6715B0=y EXTEND_LIMIT=y GOOGLE_ASST=y QUADBAND=y BTN_TURBO=y
# makefile (from 'Makefile', line 303)
NVRAM_SIZE = 0x8000
# makefile (from 'platform.mak', line 164)
DRAM_POOL = "8M" "16M" "32M" "64M" "128M" "256M" "512M"		
# makefile (from 'target.mak', line 131)
ET8PRO_CFG := HND_ROUTER=y PROFILE="947622GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="ET8PRO" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n BT_CONN=y IPERF3=y MSSID_PRELINK=y FRS_LIVE_UPDATE=y BCM_CLED=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y BCMEVENTD=y AMAS_ADTBW=y SW_CTRL_ALLLED=y AMAS_SYNC_2G_BW=y AMAZON_WSS=y AHS=y ASD=y INTERNETCTRL=y AVBLCHAN=y ADTBW_RADAR=y INSTANT_GUARD=y AMAS_ETHDETECT=y RTL8221VB=y HAS_5G_2=y WIFI6E=y FRONTHAUL_DWB=y ACL96=y GOOGLE_ASST=y EXTEND_LIMIT=y DHD_6715B0=y
# makefile (from 'target.mak', line 333)
RT-AC1200GU := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y PRINTER=y  USB="USB" APP="network" AUTODICT=y SHP=y BUILD_NAME="RT-AC1200GU" RTAC1200GU=y NTFS="open" ODMPID=y  LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y REPEATER=y FINDASUS=y REDIRECT_DNAME=y SSH=y NEWSSID_REV2=y LAN50=y ATCOVER=y BOOT_FLASH_TYPE=SPI  MT7603_EXTERNAL_PA_EXTERNAL_LNA=y DRAM=128M FIRST_IF=MT7603E SECOND_IF=MT7612E JFFS2=y PSISTLOG=y TEMPROOTFS=y EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y MODEL_RTAC1200GU=y"
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-9bd48221-498c-44af-a2c3-d005d6fb46ae.sock
# makefile (from 'target.mak', line 186)
RT-N65U := IPV6SUPP=y MIPS32=r2 RALINK=y RT3883=y NTFS="paragon" BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y HTTPS=y WEBDAV=y SMARTSYNCBASE=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y LANWAN_LED=y SHP=y BUILD_NAME="RT-N65U" RTN65U=y NVRAM_64K=y ODMPID=y LED_ALL=y EXT4FS=y OPENVPN=y VPNC=y DISK_MONITOR=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y XHCI=y JFFS2=y MTK_TW_AUTO_BAND4=y TEMPROOTFS=y WPSMULTIBAND=y BOOT_FLASH_TYPE=SPI INIC_CHIP=RT3352_MII SWITCH_VLAN=y SWITCH_CHIP=CHIP_RTL8367RB SWITCH_CTRLIF=CTRLIF_MDIO WLAN2_ON_SWITCH_GMAC2=y SWITCH_LAN_WAN_SWAP=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 132)
HND-962118_BASE := HND_ROUTER=y PROFILE="962118GW" SAMBA3="3.6.x" TFAT=y NTFS="tuxera" HFS="tuxera" LACP=y BONDING=y BONDING_WAN=y OOKLA=y WL_SCHED_V3=y
# environment
XDG_SESSION_ID = 1
# makefile (from 'target.mak', line 23)
RT-N10P := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y DNSMQ=y BUILD_NAME="RT-N10P" USER_LOW_RSSI=y YANDEXDNS=y TEMPROOTFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# environment
USER = akito
# makefile (from 'Makefile', line 152)
RCSTRING := rc2
# environment
LC_MONETARY = zh_CN.UTF-8
# makefile
.DEFAULT_GOAL := default
# makefile (from 'target.mak', line 134)
GT-AXE11000 := HND_ROUTER=y PROFILE="962118GW" SAMBA3="3.6.x" TFAT=y NTFS="tuxera" HFS="tuxera" LACP=y BONDING=y BONDING_WAN=y OOKLA=y WL_SCHED_V3=y ETLAN_LED=y I2CTOOLS=y GEFORCENOW=y APFS="tuxera" BUILD_NAME="GT-AXE11000" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y DPSTA=y WTFAST=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y NEWSSID_REV6=y NEW_APP_ARM=y VISUALIZATION=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=y BTN_TURBO=y LOGO_LED=y BCM_CEVENTD=y UTF8_SSID=y RGBLED=y AURASYNC=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y ROG_UI=y AMASDB=n CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=y CAPTCHA=y WIFI6E=y OUTFOX=y GAME_MODE=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=y OWE_TRANS=y HSPOT=y ACL96=y GOOGLE_ASST=y EXTEND_LIMIT=y
# makefile (from 'Makefile', line 102)
RELEASEDIR := /home/akito/asuswrt-modx-next/release
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from 'target.mak', line 78)
HND-947622_BASE := HND_ROUTER=y PROFILE="947622GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y
# makefile (from 'platform.mak', line 56)
PLATFORM_ARCH := arm-musl
# makefile (from 'Makefile', line 314)
uppercase_N = $(shell echo $(N) | tr a-z  A-Z)
# makefile (from 'Makefile', line 1337)
IPSEC_ID_POOL = "QUICKSEC" "STRONGSWAN"
# makefile (from 'target.mak', line 117)
GS-AX5400 := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="GS-AX5400" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=y WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=n NEW_APP_ARM=y VISUALIZATION=n BONDING=y BONDING_WAN=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y TCPLUGIN=n UUPLUGIN=y IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y ASD=y AHS=y INTERNETCTRL=y OPEN_NAT=y GAME_MODE=y INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y
# makefile (from 'platform.mak', line 67)
HOSTCONFIG := linux-armv4
# makefile (from 'target.mak', line 48)
RT-AC3100 := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y BCMWL6=y BCMWL6A=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y SSD=n STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y CFEZ=y ERPTEST=n WIFILOGO=n FORCE_AUTO_UPGRADE=n FAKEID=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y ASPMD=n BCMEVENTD=n WLCLMLOAD=n BCM_MUMIMO=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y ALEXA=y IFTTT=y LETSENCRYPT=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y HD_SPINDOWN=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV CONNTRACK=n AMAS=y AMASDB=y AVBLCHAN=y WATCH_REINIT=n MFGFW=n CTFNAT=y CONNDIAG=y NFCM=n UTF8_SSID=y NVRAM_ENCRYPT=y UUPLUGIN=y SW_CTRL_ALLLED=y OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="RT-AC3100" SWITCH2="" BCM_MMC=n BCM_7114=y ETLAN_LED=y ROMCFE=n NVSIZE="128" DHDAP=y DPSTA=y BCMFA=n GMAC3=y LACP=y WTFAST=y FORCE_SN="380" FORCE_EN="664" NEWSSID_REV2=y ASUSCTRL=y FRS_LIVE_UPDATE=y BW160M=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y GOOGLE_ASST=y
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'platform.mak', line 71)
DTS_DIR := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/linux/linux-4.4.198/arch/arm/boot/dts
# makefile (from 'target.mak', line 140)
RT-AC68U_V4 := HND_ROUTER=y PROFILE="962118GW" SAMBA3="3.6.x" TFAT=y NTFS="tuxera" HFS="tuxera" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RT-AC68U_V4" NVSIZE="128" DHDAP=n HND_WL=y DPSTA=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y  OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=n IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y BCMEVENTD=y LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y BRCM_HOSTAPD=y UUPLUGIN=y IPERF3=y FRS_LIVE_UPDATE=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y INSTANT_GUARD=y PC_SCHED_V3=y GAME_MODE=y AHS=y ASD=y OPEN_NAT=y KERN_SIZE_OPT=y FILEFLEX=y ASUSCTRL=y
# makefile (from 'target.mak', line 37)
DSL-AC68U := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y EXT4FS=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y BWDPI=y DUMP_OOPS_MSG=y DPSTA=y HSPOT=y LINUX_MTD="64" DEBUGFS=y BCM7=n BCM4708=y TEMPROOTFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y HD_SPINDOWN=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y LETSENCRYPT=y UTF8_SSID=y AMAS=y ETHOBD=y DWB=y CONNDIAG=y NFCM=n FORCE_AUTO_UPGRADE=y FORCE_ROAMING=y BCN_RPT=y BTM_11V=y OOKLA=y WL_SCHED_V3=y GAME_MODE=y FILEFLEX=y BUILD_NAME="DSL-AC68U" TFAT=y NTFS="tuxera" HFS="tuxera" DSL=y DSL_TCLINUX=y VDSL=y BTN_WPS_ALLLED=y TCPDUMP=y BCM4352_5G=y JFFS_NVRAM=y AHS=y ASD=y FRS_LIVE_UPDATE=y OPEN_NAT=y DSL_REMOTE=y MULTISERVICE_WAN=y VAR_NVRAM=y
# makefile (from 'Makefile', line 293)
EXTRA_KERNEL_VAL_CONFIGS := 
# makefile (from 'target.mak', line 4)
NONE-OOKLA := OOKLA=y
# environment
LC_TELEPHONE = zh_CN.UTF-8
# makefile (from 'Makefile', line 96)
SRC_ROOT := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src
# makefile (from 'target.mak', line 247)
RT-N11P := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y SHP=y LANWAN_LED=y BUILD_NAME="RT-N11P" RTN11P=y SFP=y ODMPID=y NEW_RGDM=y RA_SKU=y REPEATER=y NEW_USER_LOW_RSSI=y BTN_WPS_RST=y VPNC=y YANDEXDNS=y REBOOT_SCHEDULE=y BLINK_LED=y TEMPROOTFS=y BOOT_FLASH_TYPE=SPI DRAM=32M SECOND_IF=NONE SINGLE_2G=y EDCCA=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_32M=y UBOOT_CMDLINE=y PCI=n INTERNAL_PA_INTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=n" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 342)
RT-N300_BASE := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7628=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y SHP=y RTN11PB1=y ODMPID=y NEW_RGDM=y RA_SKU=y REPEATER=y  RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y BTN_WPS_RST=y DISABLE_NETWORKMAP=n WAN_AT_P4=y LANWAN_LED=y BLINK_LED=y SINGLE_2G=y VPNC=y YANDEXDNS=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y BTN_WPS_ALLLED=y SSH=y NEWSSID_REV2=y LAN50=y ATCOVER=y GETREALIP=y REBOOT_SCHEDULE=y EDCCA_NEW=y TEMPROOTFS=y BOOT_FLASH_TYPE=SPI DRAM=32M
# makefile (from 'target.mak', line 771)
BRT-AC828 := IPV6SUPP=y HTTPS=y QCA=y IPQ806X=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MEDIASRV=n MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="BRT-AC828" BRTAC828=y SHP=y NVRAM_SIZE=0x20000 NVRAM_ENCRYPT=1 ODMPID=y UBI=y DUAL_TRX=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y IPSEC=STRONGSWAN STAINFO=y HD_SPINDOWN=y DUALWAN=y MULTICASTIPTV=y QUAGGA=y BWDPI=y BACKUP_LOG=y WEBMON=y PERMISSION_MANAGEMENT=y LAN50=y ATCOVER=y GETREALIP=y NATNL_AIHOME=y WEBDAV=n SMARTSYNCBASE=n NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y MTWANCFG=y BOOT_FLASH_TYPE=NAND WIFI_CHIP=CASCADE SWITCH_CHIP=RTL8370MB_PHY_QCA8033_X2 WANPORT2=y PWRSAVE=y XHCI=y ATEUSB3_FORCE=y M2_SSD=y BLINK_LED=y WANRED_LED=y PWRRED_LED=y FO_LED=y WANLEDX2=y EJUSB_BTN=y REPEATER=n PROXYSTA=n DISABLE_REPEATER_UI=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y NEWSSID_REV2=y UTF8_SSID=y FBWIFI=n CAPTIVE_PORTAL=y UBIFS=y PSISTLOG=y SAVEJFFS=y TEMPROOTFS=y WPSMULTIBAND=y LETSENCRYPT=y VLAN_TAGGED_BASE=y EXTRA_KERNEL_CONFIGS=""
# makefile (from 'Makefile', line 308)
CTAGS_DEFAULT_DIRS := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/rc /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/httpd /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/shared /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/www /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/sw-hw-auth /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/libdisk /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/libvpn /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/bwdpi_source /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/cfg_mnt /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/amas-utils /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/libasuslog /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/../src/router/dblog 
# makefile (from 'Makefile', line 4315)
extraKernelConfig = 	@( if [ ! -z "$(EXTRA_KERNEL_YES_CONFIGS)" ] ; then for c in $(EXTRA_KERNEL_YES_CONFIGS) ; do sed -i "/CONFIG_$${c}/d" $(1); echo "CONFIG_$${c}=y" >>$(1); done fi; if [ ! -z "$(EXTRA_KERNEL_NO_CONFIGS)" ] ; then for c in $(EXTRA_KERNEL_NO_CONFIGS) ; do sed -i "/CONFIG_$${c}/d" $(1); echo "# CONFIG_$${c} is not set" >>$(1); done fi; if [ ! -z "$(EXTRA_KERNEL_MOD_CONFIGS)" ] ; then for c in $(EXTRA_KERNEL_MOD_CONFIGS) ; do sed -i "/CONFIG_$${c}/d" $(1); echo "CONFIG_$${c}=m" >>$(1); done fi; if [ ! -z "$(EXTRA_KERNEL_VAL_CONFIGS)" ] ; then for c in $(EXTRA_KERNEL_VAL_CONFIGS) ; do sed -i "/CONFIG_$${c}/d" $(1); echo "CONFIG_$${c}" >>$(1); done fi; )
# makefile (from 'Makefile', line 371)
FW_JUMP_TARGET := FW_JUMP=y APP="none" AUTODICT=n NO_SAMBA=y NO_FTP=y WTFAST=n USBEXTRAS=n DISK_MONITOR=n MEDIASRV=n PRINTER=n WEBDAV=n SMARTSYNCBASE=n CLOUDCHECK=n TIMEMACHINE=n MDNS=n BWDPI=n EMAIL=n ALEXA=n IFTTT=n NATNL_AICLOUD=n NATNL_AIHOME=n CONNDIAG=n OPENVPN=n
# makefile (from 'platform.mak', line 61)
KERNELCC := /opt/lede-toolchain-mediatek-mt7629_gcc-5.4.0_musl-1.1.24_eabi.Linux-x86_64/toolchain-arm_cortex-a7_gcc-5.4.0_musl-1.1.24_eabi/bin/arm-openwrt-linux-gcc
# makefile (from 'Makefile', line 162)
EXTENDNO1 = $(shell git log --pretty=oneline asuswrt_$(KERNEL_VER).$(FS_VER).$(SERIALNO)$(RCSTRING) | wc -l)
# default
MAKE_COMMAND := make
# makefile (from 'target.mak', line 12)
RT-N12 := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y LANWAN_LED=y DNSMQ=y DYN_DICT_NAME=y SWMODE_SWITCH=y WL_AUTO_CHANNEL=y BUILD_NAME="RT-N12" USER_LOW_RSSI=y TEMPROOTFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'platform.mak', line 57)
TOOLS := /opt/lede-toolchain-mediatek-mt7629_gcc-5.4.0_musl-1.1.24_eabi.Linux-x86_64/toolchain-arm_cortex-a7_gcc-5.4.0_musl-1.1.24_eabi
# makefile (from 'target.mak', line 570)
SWRT-JCG-Q10PRO := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y USBEXTRAS=y SAMBA4=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="network" AUTODICT=y SHP=y PGBM1=y MUSL_LIBC=y XHCI=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y UTF8_SSID=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y LANWAN_LED=y BTN_WPS_ALLLED=y NTFS="open_2016+ntfs3" EXT4FS=y HFS="open" APFS=y RALINK_DBDC=y OOKLA=y BOOT_FLASH_TYPE=NAND MTK_NAND=y MTK_NAND_BLOCK2=y DUAL_TRX=y NVRAM_ENCRYPT=1 USB_SWAP=n OPENVPN=y ACCEL_PPTPD=y VPNC=y REBOOT_SCHEDULE=y HD_SPINDOWN=y GETREALIP=y DRAM=512M MTK_8021XD3000=y EDCCA_NEW=y FIRST_IF=MT7915D SECOND_IF=MT7915D RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y MUMIMO_2G=y QAM256_2G=y QAM1024_5G=y REPEATER=y PROXYSTA=y SW_HW_AUTH=y ATF=y SAVE_WL_NVRAM_BOTH=y CAPTCHA=y RALINK_BUILDIN_WIFI=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y FORCE_AUTO_UPGRADE=n ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y FRS_LIVE_UPDATE=y ASUSCTRL=y MULTICASTIPTV=y QUAGGA=y 3LANPORT_DEVICE=n PMF=y DTB="mt7621-pgbm1.dtb" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_PGBM1=y DUAL_TRX=y" INTERNETCTRL=y MODEM=y GOOGLE_ASST=y AUTO_FW_UPGRADE=y PRINTER=y UUPLUGIN=y BUILD_NAME="PGB-M1" ASD=y AHS=n SOFTCENTER=y SMARTDNS=y VHT160=n ENTWARE=y CIFS=y SWRT=y SWRT_NAME="PGBM1" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y BOOT_FLASH_TYPE=NAND EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_JCGQ10PRO=y DUAL_TRX=y" BUILD_NAME="JCG-Q10PRO" JCGQ10PRO=y DTB="mt7621-jcg-q10pro.dtb" ENTWARE=n SWRT_NAME="JCGQ10PRO"
# makefile (from 'target.mak', line 605)
RT-AC55UHP := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCA955X=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="RT-AC55UHP" RTAC55UHP=y SHP=y NVRAM_64K=y ODMPID=y UBI=y DUAL_TRX=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y FINDASUS=y STAINFO=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y WEBDAV=y SMARTSYNCBASE=y LAN50=y ATCOVER=y GETREALIP=y NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y BLINK_LED=y WANRED_LED=y WPS_LED=y XHCI=y ETRON_XHCI=y ATEUSB3_FORCE=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y UBIFS=y PSISTLOG=y QCA_TW_AUTO_BAND4=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS="LSDK_NART_SUPPORT=y" SW_HW_AUTH=y NATNL_AIHOME=y
# makefile (from 'target.mak', line 88)
 
CT-AX56_XD4 := HND_ROUTER=y PROFILE="947622GW" WL_SCHED_V3=y OOKLA=y BUILD_NAME="CT-AX56_XD4" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y DISABLE_REPEATER_UI=y DISABLE_PROXYSTA_UI=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=n MODEM=n PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n USB="USB" APP="none" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=n BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=n  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=n TFAT=n NTFS="" HFS="" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=n BRCM_HOSTAPD=y TCPLUGIN=y UUPLUGIN=y IPERF3=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=y NO_SAMBA=y NO_FTP=y NO_USBSTORAGE=y BCM_CLED=y SINGLE_LED=y BHCOST_OPT=y AMAS_WGN=y MSSID_PRELINK=y AMAZON_WSS=y PIPEFW=y AHS=y ASD=y OPENSSL10=y INTERNETCTRL=y SW_CTRL_ALLLED=y HSPOT=y BCN_RPT=y BTM_11V=y BCMEVENTD=y PORT2_DEVICE=y URLFW=y AMAS_SYNC_2G_BW=y INSTANT_GUARD=y AMAS_ETHDETECT=y
# default
.VARIABLES := 
# makefile (from 'target.mak', line 120)
RT-AX58U_V2 := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y SAMBA3="3.6.x" UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="RT-AX58U_V2" NVSIZE="128" DHDAP=n HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y ASD=y AHS=y INTERNETCTRL=y GAME_MODE=n INSTANT_GUARD=y ACL96=y GOOGLE_ASST=y IPV6S46=y
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = zh_CN:en
# makefile (from 'target.mak', line 637)
RT-AC59U_BASE := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCN550X=y QCA9888=y QCA8337N=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MODEM=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" APP="network" AUTODICT=y SHP=y NVRAM_SIZE=0x1E000 ODMPID=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y FINDASUS=y STAINFO=y REBOOT_SCHEDULE=y YANDEXDNS=y NEWSSID_REV4=y LAN50=all GETREALIP=y MULTICASTIPTV=y QUAGGA=y NTFS="open" TFAT=n HFS="open" DISK_MONITOR=y BLINK_LED=y BTN_WPS_ALLLED=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y JFFS2=y PSISTLOG=y QCA_TW_AUTO_BAND4=y TEMPROOTFS=y WPSMULTIBAND=y UTF8_SSID=y NVRAM_ENCRYPT=y FORCE_AUTO_UPGRADE=y
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-e670fe29-1.67.2-main.sock
# makefile (from 'target.mak', line 370)
RT-AC85U_BASE := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y  USB="USB"  AUTODICT=y LANWAN_LED=y SHP=y RTAC85U=y ODMPID=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y BWDPI=y REBOOT_SCHEDULE=y SSH=y NO_SELECT_CHANNEL=y HD_SPINDOWN=y NTFS="tuxera" EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=y ATED122=y MTK_8021X3000=y XHCI=y ATEUSB3_FORCE=y BLINK_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=NAND MTK_NAND=y DRAM=128M FIRST_IF=MT7615E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y NEW_USER_LOW_RSSI=y NEWSSID_REV2=y GETREALIP=y ATCOVER=y LAN50=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y
# makefile (from 'target.mak', line 790)
RT-AC88N := IPV6SUPP=y HTTPS=y QCA=y IPQ806X=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="RT-AC88N" RTAC88N=y SHP=y NVRAM_SIZE=0x20000 NTFS="open" ODMPID=y UBI=y DUAL_TRX=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y FINDASUS=y STAINFO=y WEBDAV=y SMARTSYNCBASE=y LAN50=y ATCOVER=y GETREALIP=y PERMISSION_MANAGEMENT=y MTWANCFG=y BOOT_FLASH_TYPE=NAND WIFI_CHIP=CASCADE SWITCH_CHIP=QCA8337N PWRSAVE=y XHCI=y ATEUSB3_FORCE=y BLINK_LED=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y EXTRA_KERNEL_CONFIGS=""
# makefile (from 'target.mak', line 11)
RT-N15U := IPV6SUPP=y MIPS32=r2 AUTODICT=y NTFS="open" SFP8M=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PRINTER=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y DNSMQ=y SFP=y USB="USB" APP="none" LANWAN_LED=y BUILD_NAME="RT-N15U" USER_LOW_RSSI=y LESSMODEM=y DEBUGFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'Makefile', line 318)
BUILD_TIME := Sat Jun  4 18:46:20 UTC 2022
# makefile (from 'Makefile', line 365)
PBDIR := ../../../asuswrt.prebuilt/.4.0.0.4.386._-gdedf4c2
# makefile (from 'target.mak', line 510)
RT4G-AC86U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7622=y BBEXTRAS=y EBTABLES=y USBEXTRAS=y SAMBA3=3.6.x MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y USB="USB" APP="installed" AUTODICT=y SHP=y RT4GAC86U=y XHCI=y ODMPID=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y OPENVPN=y LAN50=y TIMEMACHINE=y PRINTER=y ATCOVER=y NEWSSID_REV4=y YANDEXDNS=y UTF8_SSID=y DUALWAN=y NO_SELECT_CHANNEL=y FRS_FEEDBACK=y SWCONFIG=y MULTICASTIPTV=y QUAGGA=y WEBDAV=y NATNL_AICLOUD=y CLOUDCHECK=y SMARTSYNCBASE=y ALEXA=y FRS_LIVE_UPDATE=y FORCE_AUTO_UPGRADE=y BOOT_FLASH_TYPE=SPI MTK_NAND=y OPENSSL=11 USB_SWAP=y ACCEL_PPTPD=y VPNC=y NTFS="open" EXT4FS=y NATNL_AIHOME=y NVRAM_ENCRYPT=1 ATF=y LANWAN_LED=y BLINK_LED=y REBOOT_SCHEDULE=y DRAM=512M MTK_8021XD3000=y EDCCA_NEW=y NEW_APP_ARM=y FIRST_IF=MT7622 SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y SW_HW_AUTH=y JFFS2=y PSISTLOG=y TEMPROOTFS=y QFIREHOSE=y BTN_WPS_ALLLED=y BWDPI=y CAPTIVE_PORTAL=y DTB="mt7622-ac2600.dtb" EXTRA_KERNEL_CONFIGS="MT7622_BAUDRATE=115200 UBOOT_CMDLINE=y MODEL_RT4GAC86U=y DUAL_TRX=y" BUILD_NAME="4G-AC86U" MODEM=y GOBI=y LTE_MFG=.Quectel_1.6 GOOGLE_ASST=y
# makefile (from 'platform.mak', line 64)
ARCH := arm
# makefile
MAKEFLAGS = pqrR
# makefile (from 'version.conf', line 4)
RCNO = 2
# makefile (from 'target.mak', line 865)
RT-AX89U := IPV6SUPP=y HTTPS=y QCA=y IPQ807X=y MUSL64=n BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="installed" NEW_APP_ARM=y AUTODICT=y LANWAN_LED=y BUILD_NAME="RT-AX89U" RTAX89U=y SHP=y NVRAM_SIZE=0x20000 NVRAM_ENCRYPT=1 ODMPID=y UBI=y DUAL_TRX=n EXT4FS=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n ROG_UI=n TIMEMACHINE=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NETOOL=y TRACEROUTE=y STAINFO=y HD_SPINDOWN=y VPN_FUSION=n ASD=n AHS=y FRS_LIVE_UPDATE=y FORCE_AUTO_UPGRADE=n IFTTT=y ALEXA=y OPEN_NAT=y HAPDEVENT=y AMAS=y DWB=y ETHOBD=y CONNDIAG=y BCN_RPT=n BTM_11V=n DUALWAN=y MULTICASTIPTV=y QUAGGA=y LACP=y BONDING_WAN=y LAN50=all ATCOVER=y GETREALIP=y CLOUDCHECK=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y MTWANCFG=y WEBDAV=y SMARTSYNCBASE=y NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y BOOT_FLASH_TYPE=NAND WIFI_CHIP=QCN50X4 SWITCH_CHIP=QCA8075_QCA8337_PHY_AQR107_AR8035_QCA8033 WIGIG=n BTN_WIFITOG=y WANPORT2=y SFPP=y PWRSAVE=y FANCTRL=y RGBLED=n AURASYNC=n I2CTOOLS=n DTB="qcom-ipq807x-rt-ax89u.dtb" XHCI=y ATEUSB3_FORCE=n BLINK_LED=y WANRED_LED=y SFPP_LED=y R10G_LED=y BTN_TURBO=n LED_ALL=n LED_BTN=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=n NEW_USER_LOW_RSSI=y NOTIFICATION_CENTER=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y NEWSSID_REV4=y UTF8_SSID=y CFG80211=y VHT160=y VHT80_80=n BW160M=y QCA_LBD=y QCA_MCSD=y BWDPI=y WTFAST=n UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y LETSENCRYPT=y EXTRA_KERNEL_CONFIGS="" INTERNETCTRL=y SOFTCENTER=y SMARTDNS=y ENTWARE=y SWRT=y SWRT_NAME="RTAX89X" SWRT_VER_MAJOR="R" SWRT_VER_MINOR="5.1.6" SWRT_CODEBASE="23012" SWRT_UU=n UUPLUGIN=n SWRT_FULLCONE=y
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'target.mak', line 433)
RT-AC65U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y  USB="USB"  AUTODICT=y LANWAN_LED=y SHP=y RTAC85U=y ODMPID=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y BWDPI=y REBOOT_SCHEDULE=y SSH=y NO_SELECT_CHANNEL=y HD_SPINDOWN=y NTFS="tuxera" EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=y ATED122=y MTK_8021X3000=y XHCI=y ATEUSB3_FORCE=y BLINK_LED=y BTN_WPS_ALLLED=y BOOT_FLASH_TYPE=NAND MTK_NAND=y DRAM=128M FIRST_IF=MT7615E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y UBI=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y NEW_USER_LOW_RSSI=y NEWSSID_REV2=y GETREALIP=y ATCOVER=y LAN50=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y BASE_MODEL="RT-AC85U" BUILD_NAME="RT-AC65U" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y MODEL_RTAC65U=y RTAC65U=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAELNA=y SECOND_IF_IPAELNA=y" APP="none" NO_FTP=y
# makefile (from 'target.mak', line 118)
HND-96756_BASE := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y SAMBA3="3.6.x" UBI=y UBIFS=y PSISTLOG=y
# makefile (from 'target.mak', line 113)
DSL-AX82U := HND_ROUTER=y PROFILE="963178GW" SAMBA3="3.6.x" BUILD_NAME="DSL-AX82U" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=n QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=n NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y TCPLUGIN=n UUPLUGIN=n IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y OPEN_NAT=y ASD=y AHS=y INTERNETCTRL=y GAME_MODE=y PC_SCHED_V3=y INSTANT_GUARD=y ACL96=y GOOGLE_ASST=y DISABLE_REPEATER_UI=y DISABLE_PROXYSTA_UI=y OOKLA=y WL_SCHED_V3=y TR069=y BCM_OAM=y TR181=y MTWANCFG=y TCPDUMP=y DSL=y VDSL=y DSL_BCM=y DSL_HOST=y MULTISERVICE_WAN=y PWRRED_LED=y ETLAN_LED=y WANRED_LED=y BTN_WPS_ALLLED=y IPV6S46=y
# makefile (from 'target.mak', line 38)
RT-AC68A := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y PARENTAL2=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="none" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y LOGO_LED=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y ARMCPUSMP=up XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y MDNS=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y BWDPI=y DUMP_OOPS_MSG=n HSPOT=y LINUX_MTD="64" DEBUGFS=y BCM7=n BCM4708=y TEMPROOTFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y SSD=n STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y REBOOT_SCHEDULE=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" BUILD_NAME="RT-AC68A" LAN50=y ATCOVER=y GETREALIP=y
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'target.mak', line 27)
RT-AC3200 := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=n BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-AC3200" PROXYSTA=y DNSMQ=y SHP=y BCMWL6=y BCMWL6A=y BCM7=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y EXT4FS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=n BWDPI=y DUMP_OOPS_MSG=y DHDAP=y DPSTA=n GMAC3=y HSPOT=n LINUX_MTD="64" DEBUGFS=y NVSIZE="128" TEMPROOTFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y DISABLE_REPEATER_UI=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y HD_SPINDOWN=y LETSENCRYPT=y DBLOG=y UTF8_SSID=y
# makefile (from 'target.mak', line 18)
RT-N12HP_B1 := IPV6SUPP=y HTTPS=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y LANWAN_LED=y DNSMQ=y DYN_DICT_NAME=y SWMODE_SWITCH=y WL_AUTO_CHANNEL=y BUILD_NAME="RT-N12HP_B1" USER_LOW_RSSI=y DUALWAN=y YANDEXDNS=y TEMPROOTFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# environment
GDK_BACKEND = x11
# makefile (from 'target.mak', line 2)
GENERAL_BASE := LIVE_UPDATE_RSA=2
# environment
LC_PAPER = zh_CN.UTF-8
# makefile (from 'target.mak', line 673)
RP-AC51 := HTTPS=y MIPS32=r2 QCA=y QCA953X=y QCA9888=y EBTABLES=y AUTODICT=y BUILD_NAME="RP-AC51" RPAC51=y NVRAM_64K=y ODMPID=y REPEATER=y PURE_REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y MDNS=y FINDASUS=y SSH=y TEMPROOTFS=y WPSMULTIBAND=y DHCP_OVERRIDE=y CONCURRENTREPEATER=y DISABLE_NETWORKMAP=y WLCSCAN_RSSI=y
# makefile (from 'target.mak', line 115)
GS-AX3000 := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="GS-AX3000" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=y WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=n NEW_APP_ARM=y VISUALIZATION=n BONDING=y BONDING_WAN=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y TCPLUGIN=n UUPLUGIN=n IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y ASD=y AHS=y INTERNETCTRL=y OPEN_NAT=y GAME_MODE=y INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y
# makefile (from 'target.mak', line 352)
RP-AC87 := HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y EBTABLES=y AUTODICT=y BUILD_NAME="RP-AC87" RPAC87=y NVRAM_64K=y ODMPID=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y NEW_RGDM=y RA_SKU=y RA_SKU_IN_DRV=y MDNS=y FINDASUS=y MTK_REP=y DHCP_OVERRIDE=y SSH=y QAM256_2G=y WIFI_PROXY=y TXBF_BAND3ONLY=y ATED122=y MTK_8021X3000=y TEMPROOTFS=y WPSMULTIBAND=y RALINK_DFS=y BOOT_FLASH_TYPE=SPI DRAM=128M FIRST_IF=MT7615E SECOND_IF=MT7615E CONCURRENTREPEATER=y DISABLE_NETWORKMAP=y EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_128M=y UBOOT_CMDLINE=y MODEL_RPAC87=y RA_NAT_HW=n FIRST_IF_IPAELNA=y SECOND_IF_IPAELNA=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y"
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'target.mak', line 72)
XT12 := HND_ROUTER=y PROFILE="94912GW" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="XT12" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y XHCI=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y LINUX_MTD="64" DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y BCM_CEVENTD=y UTF8_SSID=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y OPEN_NAT=y AMASDB=n CRASHLOG=y BW160M=y BRCM_HOSTAPD=y IPERF3=y INFO_EXAP=y BCN_RPT=y BTM_11V=y INTERNETCTRL=y ASD=y AHS=y FRS_LIVE_UPDATE=y HAS_5G_2=y CAPTCHA=y OUTFOX=y AMAS_ETHDETECT=y INSTANT_GUARD=y AVBLCHAN=y FRONTHAUL_DWB=y BCM_CLED=y NEWSSID_REV4=y NEWSSID_REV5=y SW_CTRL_ALLLED=y BT_CONN=y SINGLE_LED=y ACL96=y DHD_6715B0=y MSSID_PRELINK=y EXTEND_LIMIT=y GOOGLE_ASST=y VPN_FUSION=y AMAS_ADTBW=y BONDING=y LACP=y BONDING_WAN=y
# environment
DEFAULTS_PATH = /usr/share/gconf/ubuntu.default.path
# makefile (from 'target.mak', line 142)
RT-AC56S := IPV6SUPP=y HTTPS=y ARM=y TFAT=y NTFS="tuxera" HFS="tuxera" AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" BUILD_NAME="RT-AC56S" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y BCM4708=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y BCM4352_5G=y LANWAN_LED=y OPTIMIZE_XBOX=y ODMPID=y ARMCPUSMP=up LED_ALL=y XHCI=y REPEATER=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y XHCIMODE=y TIMEMACHINE=y BWDPI=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y EMAIL=y SYSSTATE=y ROG=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=n CLOUDCHECK=y DUMP_OOPS_MSG=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y DPSTA=y SW_HW_AUTH=y NATNL_AIHOME=y EXT4FS=y
# makefile (from 'platform.mak', line 58)
CROSS_COMPILE := /opt/lede-toolchain-mediatek-mt7629_gcc-5.4.0_musl-1.1.24_eabi.Linux-x86_64/toolchain-arm_cortex-a7_gcc-5.4.0_musl-1.1.24_eabi/bin/arm-openwrt-linux-
# environment
TEXTDOMAINDIR = /usr/share/locale/
# makefile (from 'platform.mak', line 55)
PLATFORM := arm-musl
# makefile (from 'target.mak', line 692)
RT-AC59_CD6R := HTTPS=y MIPS32=r2 QCA=y QCN550X=y QCA9888=y QCA8337N=y BBEXTRAS=y EBTABLES=y AUTODICT=y SHP=y NVRAM_SIZE=0x1E000 ODMPID=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y STAINFO=y NEWSSID_REV4=y LAN50=all BLINK_LED=y BTN_WPS_ALLLED=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y JFFS2=y PSISTLOG=y QCA_TW_AUTO_BAND4=y QCA_VAP_LOCALMAC=y TEMPROOTFS=y WPSMULTIBAND=y UTF8_SSID=y NVRAM_ENCRYPT=y NOTIFICATION_CENTER=y HAPDEVENT=y AMAS=y AVBLCHAN=y REPEATER=y DISABLE_REPEATER_UI=y SW_HW_AUTH=y DWB=y ETHOBD=y BUILD_NAME="RT-AC59_CD6R" QSDK_VER=.mesh EN4B=y IPV6SUPP=y PARENTAL2=y OPENVPN=y VPNC=y ACCEL_PPTPD=y DUALWAN=y FINDASUS=y REBOOT_SCHEDULE=y YANDEXDNS=y GETREALIP=y MULTICASTIPTV=y QUAGGA=y BWDPI=n NATNL_AIHOME=y
# default
MAKEFILES := 
# makefile (from 'Makefile', line 48)
HND_ROUTER_AX := 
# makefile (from 'Makefile', line 307)
CTAGS_EXCLUDE_OPT := --exclude=kernel_header --exclude=arm-musl --exclude=*.png --exclude=*.ico
# environment
LC_NUMERIC = zh_CN.UTF-8
# makefile (from 'platform.mak', line 20)
BUILD := x86_64-linux-gnu
# automatic
<F = $(notdir $<)
# makefile (from 'target.mak', line 127)
XT8PRO := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y SAMBA3="3.6.x" UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="XT8PRO" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y FRONTHAUL_DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n BT_CONN=y IPERF3=y MSSID_PRELINK=y FRS_LIVE_UPDATE=y BCM_CLED=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y BCMEVENTD=y AMAS_ADTBW=y SW_CTRL_ALLLED=y AMAS_SYNC_2G_BW=y AMAZON_WSS=y AHS=y ASD=y INTERNETCTRL=y AVBLCHAN=y ADTBW_RADAR=y INSTANT_GUARD=y AMAS_ETHDETECT=y RTL8221VB=y ACL96=y GOOGLE_ASST=y IPV6S46=y EXTEND_LIMIT=y ASUSCTRL=y DHD_6715B0=y
# makefile (from 'target.mak', line 213)
RT-AC52U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y LANWAN_LED=y SHP=y BUILD_NAME="RT-AC52U" RTAC52U=y NTFS="open" ODMPID=y BTN_WIFITOG=y UBI=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU=y OPENVPN=y VPNC=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y WEBDAV=y SMARTSYNCBASE=y BLINK_LED=y BOOT_FLASH_TYPE=NAND DRAM=128M MTK_TW_AUTO_BAND4=y SECOND_IF=MT7610E EDCCA=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y REPEATER=y NEW_USER_LOW_RSSI=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=115200 RT2880_DRAM_128M=y UBOOT_CMDLINE=y EXTERNAL_PA_EXTERNAL_LNA=y" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'Makefile', line 374)
bluecave_mkimage_extra_checks = $(if $(CONFIG_UBOOT_CONFIG_LTQ_IMAGE_EXTRA_CHECKS), -B $(CONFIG_UBOOT_CONFIG_VENDOR_NAME) -V $(CONFIG_UBOOT_CONFIG_BOARD_NAME) -b $(CONFIG_UBOOT_CONFIG_BOARD_VERSION) -c $(CONFIG_UBOOT_CONFIG_CHIP_NAME) -p $(CONFIG_UBOOT_CONFIG_CHIP_VERSION) -s $(CONFIG_UBOOT_CONFIG_SW_VERSION) )
# makefile (from 'target.mak', line 83)
RT-AXE95Q := HND_ROUTER=y PROFILE="947622GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RT-AXE95Q" SWITCH2="BCM53134" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n BT_CONN=y IPERF3=y MSSID_PRELINK=y FRS_LIVE_UPDATE=y BCM_CLED=y SINGLE_LED=y BCN_RPT=y BTM_11V=y INFO_EXAP=y BCMEVENTD=y AMAS_ADTBW=y SW_CTRL_ALLLED=y AMAS_SYNC_2G_BW=y AMAZON_WSS=y AHS=y ASD=y INTERNETCTRL=y AVBLCHAN=y ADTBW_RADAR=y INSTANT_GUARD=y AMAS_ETHDETECT=y RTL8221VB=y HAS_5G_2=y WIFI6E=y FRONTHAUL_DWB=y ACL96=y GOOGLE_ASST=y EXTEND_LIMIT=y
# makefile (from 'target.mak', line 99)
RT-AX58U := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="RT-AX58U" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=n IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y ASD=y AHS=y INTERNETCTRL=y GAME_MODE=n INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y COMFW=y
# environment
LC_MEASUREMENT = zh_CN.UTF-8
# makefile (from 'Makefile', line 328)
mips_rev = $(if $(filter $(MIPS32),r2),MIPSR2,MIPSR1)
# makefile (from 'Makefile', line 135)
E2FSPROGS := y
# makefile (from 'Makefile', line 149)
BRANCH := * master
# makefile (from 'Makefile', line 132)
SWRTVER := _
# environment
LC_ALL = C
# makefile (from 'Makefile', line 317)
lowercase_B = $(shell echo $(BUILD_NAME) | tr A-Z a-z)
# makefile (from 'target.mak', line 331)
RT-AC1200_V2 := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7628=y BBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y MEDIASRV_LIMIT=y PARENTAL2=y APP="none" AUTODICT=y SHP=y RTAC1200V2=y ODMPID=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y TCODE=y MDNS=y FINDASUS=y SSH=y LAN50=y ATCOVER=y NEWSSID_REV4=y YANDEXDNS=y UTF8_SSID=y NVRAM_ENCRYPT=1 DUALWAN=y NO_SELECT_CHANNEL=y NATNL_AIHOME=y FRS_FEEDBACK=y BOOT_FLASH_TYPE=SPI MULTICASTIPTV=y QUAGGA=y REBOOT_SCHEDULE=y DRAM=64M MTK_8021XD3000=y EDCCA_NEW=y FIRST_IF=MT7628 SECOND_IF=MT7663E RALINK_DFS=y JFFS2=y PSISTLOG=y TEMPROOTFS=y REPEATER=y EXTRA_KERNEL_CONFIGS="MT7628_BAUDRATE=57600 RT2880_DRAM_64M=y UBOOT_CMDLINE=y MODEL_RTAC1200V2=y" BUILD_NAME="RT-AC1200_V2"
# makefile (from 'Makefile', line 45)
PLATFORM_ROUTER := 
# makefile (from 'platform.mak', line 87)
CONFIG_RALINK = y
# makefile (from 'target.mak', line 708)
RT4G-AC53U := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y BBEXTRAS=y USBEXTRAS=y SAMBA3=y MEDIASRV=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y YANDEXDNS=y ACCEL_PPTPD=y USB="USB" APP="network" EBTABLES=y AUTODICT=y MODEM=y MODEMPIN=y LANWAN_LED=y BUILD_NAME="4G-AC53U" RT4GAC53U=y SHP=y NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=SPI MDNS=y FINDASUS=y XHCI=y EXT4FS=y TEMPROOTFS=y NTFS="open" TFAT=n HFS="open" WEBDAV=y SMARTSYNCBASE=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y DUALWAN=y GOBI=y NOIPTV=y DISK_MONITOR=y UBI=y UBIFS=y PSISTLOG=y WPSMULTIBAND=y BLINK_LED=y BTN_WPS_ALLLED=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y STAINFO=y NEWSSID_REV2=y LAN50=y NEW_APP_ARM=y NOTIFICATION_CENTER=y HAPDEVENT=y AMAS=y AVBLCHAN=y REPEATER=y DISABLE_REPEATER_UI=y SW_HW_AUTH=y NATNL_AIHOME=y DWB=y ETHOBD=y CONNDIAG=y
# makefile (from 'Makefile', line 329)
KERN_SIZE_OPT = n
# makefile (from 'target.mak', line 829)
GT-AXY16000 := IPV6SUPP=y HTTPS=y QCA=y IPQ807X=y MUSL64=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" GRO=y APP="installed" NEW_APP_ARM=y AUTODICT=y LANWAN_LED=y BUILD_NAME="GT-AXY16000" GTAXY16000=y SHP=y NVRAM_SIZE=0x20000 NVRAM_ENCRYPT=1 ODMPID=y UBI=y DUAL_TRX=n EXT4FS=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y ROG_UI=y TIMEMACHINE=y MDNS=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NETOOL=y TRACEROUTE=y STAINFO=y HD_SPINDOWN=y VPN_FUSION=y ASD=y AHS=y FRS_LIVE_UPDATE=y FORCE_AUTO_UPGRADE=y IFTTT=y ALEXA=y OPEN_NAT=y HAPDEVENT=y AMAS=y DWB=y ETHOBD=y CONNDIAG=y BCN_RPT=n BTM_11V=n DUALWAN=y MULTICASTIPTV=y QUAGGA=y LACP=y BONDING_WAN=y LAN50=all ATCOVER=y GETREALIP=y CLOUDCHECK=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y MTWANCFG=y WEBDAV=y SMARTSYNCBASE=y NTFS="tuxera" TFAT=y HFS="tuxera" DISK_MONITOR=y BOOT_FLASH_TYPE=NAND WIFI_CHIP=QCN50X4 SWITCH_CHIP=QCA8075_QCA8337_PHY_AQR107_AR8035_QCA8033 WIGIG=y BTN_WIFITOG=y WANPORT2=y SFPP=y PWRSAVE=y FANCTRL=y RGBLED=y AURASYNC=y I2CTOOLS=y DTB="qcom-ipq807x-gt-axy16000.dtb" XHCI=y ATEUSB3_FORCE=n BLINK_LED=y WANRED_LED=y SFPP_LED=y R10G_LED=y BTN_TURBO=y LED_ALL=n LED_BTN=n REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=n NEW_USER_LOW_RSSI=y NOTIFICATION_CENTER=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y NEWSSID_REV4=y UTF8_SSID=y CFG80211=y BW160M=y QCA_LBD=y QCA_MCSD=y BWDPI=y WTFAST=y UBIFS=y PSISTLOG=y TEMPROOTFS=y WPSMULTIBAND=y LETSENCRYPT=y EXTRA_KERNEL_CONFIGS=""
# makefile (from 'target.mak', line 124)
XD4PRO := HND_ROUTER=y PROFILE="96756GW" OOKLA=y WL_SCHED_V3=y UBI=y UBIFS=y PSISTLOG=y BUILD_NAME="XD4PRO" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=n LACP=n WTFAST=n REPEATER=y DISABLE_REPEATER_UI=y DISABLE_PROXYSTA_UI=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=n MODEM=n PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n USB="USB" APP="none" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=n BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=n  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=y VPNC=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=n TFAT=n NTFS="" HFS="" NEWSSID_REV2=y NEWSSID_REV4=y NEWSSID_REV5=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=n BRCM_HOSTAPD=y TCPLUGIN=y UUPLUGIN=y IPERF3=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=y NO_SAMBA=y NO_FTP=y NO_USBSTORAGE=y BCM_CLED=y SINGLE_LED=y BHCOST_OPT=y AMAS_WGN=y MSSID_PRELINK=y AMAZON_WSS=y PIPEFW=y AHS=y ASD=y INTERNETCTRL=y SW_CTRL_ALLLED=y HSPOT=y BCN_RPT=y BTM_11V=y BCMEVENTD=y PORT2_DEVICE=y URLFW=y AMAS_SYNC_2G_BW=y INSTANT_GUARD=y AMAS_ETHDETECT=y ACL96=y IPV6S46=y GOOGLE_ASST=y ASUSCTRL=y
# environment
QT4_IM_MODULE = xim
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# makefile (from 'target.mak', line 678)
MAP-AC1750 := IPV6SUPP=y HTTPS=y SSH=y MIPS32=r2 QCA=y QCA956X=y AR9888=y QCA8337N=y QSDK_VER=.mesh EN4B=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y YANDEXDNS=y ACCEL_PPTPD=y EBTABLES=y AUTODICT=y BUILD_NAME="MAP-AC1750" MAPAC1750=y NVRAM_SIZE=0x1E000 TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y FINDASUS=y TEMPROOTFS=y DUMP_OOPS_MSG=y DEBUGFS=y CFGSYNC=y USB="USB" NO_USBSTORAGE=y XHCI=y NOTIFICATION_CENTER=y HAPDEVENT=y REDIRECT_DNAME=y JFFS2=y WPSMULTIBAND=y ART2=y BLINK_LED=y BT_CONN=y DETWAN=n SINGLE_SSID=y SSID_AMAPS=y UTF8_SSID=y QCA_TW_AUTO_BAND4=y STAINFO=y JFFS2USERICON=y MULTICASTIPTV=y QUAGGA=y WIFICLONE=y QCA_VAP_LOCALMAC=y BWDPI=y PSISTLOG=y LYRA_HIDE=y MASTER_DET=y ALEXA=y SW_HW_AUTH=y NATNL_AIHOME=y GETREALIP=y PORT2_DEVICE=y AMAS=y AVBLCHAN=y REPEATER=y NEW_USER_LOW_RSSI=y DWB=y ETHOBD=y REPEATER_STAALLBAND=y NO_TRY_DWB_PROFILE=y
# automatic
^F = $(notdir $^)
# makefile (from 'target.mak', line 136)
RT-AX86U := HND_ROUTER=y PROFILE="962118GW" SAMBA3="3.6.x" TFAT=y NTFS="tuxera" HFS="tuxera" LACP=y BONDING=y BONDING_WAN=y OOKLA=y WL_SCHED_V3=y ETLAN_LED=y LAN4WAN_LED=y LED_BTN=y I2CTOOLS=y GEFORCENOW=y UUPLUGIN=y TCPLUGIN=y GAME_MODE=y BUILD_NAME="RT-AX86U" EXT_PHY="BCM84880" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y BCMWL6=y BCMWL6A=y DISK_MONITOR=y OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y BCMEVENTD=y LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y BW160M=y BRCM_HOSTAPD=y IPERF3=y FRS_LIVE_UPDATE=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y OPEN_NAT=y SW_CTRL_ALLLED=y INSTANT_GUARD=y AMAS_ETHDETECT=y ACL96=y GOOGLE_ASST=y EXTEND_LIMIT=y ASUSCTRL=y IPV6S46=y
# makefile (from 'target.mak', line 138)
RT-AX68U := HND_ROUTER=y PROFILE="962118GW" SAMBA3="3.6.x" TFAT=y NTFS="tuxera" HFS="tuxera" LACP=y BONDING=y BONDING_WAN=y OOKLA=y WL_SCHED_V3=y ETLAN_LED=y UUPLUGIN=y TCPLUGIN=y BUILD_NAME="RT-AX68U" NVSIZE="128" DHDAP=n HND_WL=y DPSTA=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y BCMWL6=y BCMWL6A=y DISK_MONITOR=y OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y NEWSSID_REV2=y NEWSSID_REV4=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y BCMEVENTD=y LETSENCRYPT=y JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y NFCM=n CRASHLOG=y BRCM_HOSTAPD=y IPERF3=y FRS_LIVE_UPDATE=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y INSTANT_GUARD=y PC_SCHED_V3=y ACL96=y GOOGLE_ASST=y ASUSCTRL=y
# makefile (from 'target.mak', line 56)
RT-AC86U := HND_ROUTER=y PROFILE="94908HND" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="RT-AC86U" NVSIZE="128" DHDAP=y DPSTA=y LACP=n WTFAST=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n CRASHLOG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50=y ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y LAN4WAN_LED=y NEW_APP_ARM=y NETOOL=y TRACEROUTE=y HD_SPINDOWN=y IFTTT=n ALEXA=n LETSENCRYPT=y ASPMD=n BCM_MEVENT=y BCMEVENTD=y BCM_APPEVENTD=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AICLOUD=y NATNL_AIHOME=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DFS_US=y FORCE_AUTO_UPGRADE=y AVBLCHAN=y AHS=y ASD=y FRS_LIVE_UPDATE=y OPEN_NAT=y UUPLUGIN=y SW_CTRL_ALLLED=y INSTANT_GUARD=y PC_SCHED_V3=y GAME_MODE=y IPV6S46=y
# makefile (from 'target.mak', line 644)
RT-AC59U := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCN550X=y QCA9888=y QCA8337N=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=3.6.x MODEM=y PARENTAL2=y ACCEL_PPTPD=y USB="USB" APP="network" AUTODICT=y SHP=y NVRAM_SIZE=0x1E000 ODMPID=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y FINDASUS=y STAINFO=y REBOOT_SCHEDULE=y YANDEXDNS=y NEWSSID_REV4=y LAN50=all GETREALIP=y MULTICASTIPTV=y QUAGGA=y NTFS="open" TFAT=n HFS="open" DISK_MONITOR=y BLINK_LED=y BTN_WPS_ALLLED=y REPEATER=y PROXYSTA=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y JFFS2=y PSISTLOG=y QCA_TW_AUTO_BAND4=y TEMPROOTFS=y WPSMULTIBAND=y UTF8_SSID=y NVRAM_ENCRYPT=y FORCE_AUTO_UPGRADE=y BUILD_NAME="RT-AC59U" QSDK_VER=.ILQ611 DISABLE_REPEATER_UI=y
# makefile (from 'Makefile', line 5664)
define save_src_config
	@if [ -f .config ] ; then if [ $(shell echo $(1) | grep -i "^RT4G-") ] ; then NEW_BUILD_NAME=$(shell echo $(1) | tr a-z A-Z | sed 's/^RT//') ; else NEW_BUILD_NAME=$(shell echo $(1) | tr a-z A-Z) ; fi ; echo "CONFIGURED MODEL: $(BUILD_NAME)" ; echo "SPECIFIED  MODEL: $${NEW_BUILD_NAME}" ; echo "DEFINED MODEL:    $(MODEL)" ; echo "----------------------------------------------------------------------------" ; if [ "$(BUILD_NAME)" != "$${NEW_BUILD_NAME}" ] ; then echo "!!! MODEL NAME MISMATCH.  REMOVE .config AND MAKE AGAIN. !!!" ; exit 1; fi ; fi ;
	@if [ -z '$($(shell echo $(1) | tr a-z A-Z))' ] ; then echo NO THIS TARGET $(1) ; exit 1; fi ;
	@if [ -f .config ] ; then echo "Clean old model configuration"; while read line ; do var=`echo "$${line}"|sed -e "s,^export[       ]*,," -e "s,=.*$$,,"` ; unset "$${var}" ; done < .config; echo "Update model configuration" ; rm -f .config ; fi ;
	@for var in $($(shell echo GENERAL_BASE | tr a-z A-Z)) ; do echo "export $${var}" >> .config ; export $${var} ; done ;
	@for var in $($(shell echo $(1)$(2) | tr a-z A-Z)) ; do echo "export $${var}" >> .config ; export $${var} ; done ;
	@if [ -n "$(FW_JUMP)" ] ; then for var in $(FW_JUMP_TARGET) ; do echo "export $${var}" >> .config ; export $${var} ; done ; fi ;
	@chmod 666 .config;

	@echo "";
endef
# makefile (from 'Makefile', line 101)
SRCBASEDIR := src-ra-openwrt-4210
# default
SUFFIXES := 
# makefile (from 'target.mak', line 75)
GT-AX11000 := HND_ROUTER=y PROFILE="94908HND" SW_HW_AUTH=y AMAS=y UTF8_SSID=y ETHOBD=y DWB=y CONNDIAG=y SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y LIVE_UPDATE_RSA=2 BUILD_NAME="GT-AX11000" EXT_PHY="BCM84880" SWITCH2="" NVSIZE="128" DHDAP=y DPSTA=y LACP=y WTFAST=y REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="network" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEW_APP_ARM=y VISUALIZATION=y BONDING=y BONDING_WAN=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y NATNL_AIHOME=y BTN_TURBO=y LOGO_LED=y BCM_CEVENTD=y UTF8_SSID=y RGBLED=y AURASYNC=y I2CTOOLS=y AMAS=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV DWB=y GAME_PROFILE=y ROG_UI=y AMASDB=n CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=y IPERF3=y INFO_EXAP=y OPEN_NAT=y AHS=y ASD=y FRS_LIVE_UPDATE=y CAPTCHA=y SW_CTRL_ALLLED=y GAME_MODE=y CFGSYNC_LOCSYNC=y INSTANT_GUARD=y AMAS_ETHDETECT=y ACL96=y GOOGLE_ASST=y EXTEND_LIMIT=y ASUSCTRL=y
# makefile (from 'platform.mak', line 59)
CROSS_COMPILER := /opt/lede-toolchain-mediatek-mt7629_gcc-5.4.0_musl-1.1.24_eabi.Linux-x86_64/toolchain-arm_cortex-a7_gcc-5.4.0_musl-1.1.24_eabi/bin/arm-openwrt-linux-
# makefile (from 'target.mak', line 203)
RT-N14U := IPV6SUPP=y HTTPS=y MIPS32=r2 RALINK=y MT7620=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y USB="USB" APP="network" AUTODICT=y LANWAN_LED=y SHP=y BUILD_NAME="RT-N14U" RTN14U=y NTFS="open" ODMPID=y WEBDAV=y SMARTSYNCBASE=y DEBUGFS=y REBOOT_SCHEDULE=y BLINK_LED=y JFFS2=y PSISTLOG=y TEMPROOTFS=y BOOT_FLASH_TYPE=SPI DRAM=64M SECOND_IF=NONE SINGLE_2G=y EDCCA=y REPEATER=y NEW_USER_LOW_RSSI=y EXTRA_KERNEL_CONFIGS="MT7620_BAUDRATE=57600 RT2880_DRAM_64M=y RALINK_TIMER_DFS=y PCI=n INTERNAL_PA_INTERNAL_LNA=y RT2860V2_AP_RTMP_INTERNAL_TX_ALC=y RT2860V2_AP_RTMP_TEMPERATURE_COMPENSATION=n" LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'target.mak', line 16)
RT-N12VP := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y LANWAN_LED=y DNSMQ=y DYN_DICT_NAME=y SWMODE_SWITCH=y WL_AUTO_CHANNEL=y BUILD_NAME="RT-N12VP" USER_LOW_RSSI=y YANDEXDNS=y TEMPROOTFS=y REBOOT_SCHEDULE=y HTTPS=y LAN50=y ATCOVER=y GETREALIP=y
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from 'target.mak', line 927)
GT-AC9600 := IPV6SUPP=y HTTPS=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=n MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=n USB="USB" GRO=y APP="installed" AUTODICT=y LANWAN_LED=y BUILD_NAME="GT-AC9600" NVRAM_64K=y SHP=y ODMPID=y UBI=y EXT4FS=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y BWDPI=y DUMP_OOPS_MSG=y NEW_APP_ARM=y DEBUGFS=y SSH=y REBOOT_SCHEDULE=y OPTIMIZE_XBOX=y FINDASUS=y STAINFO=y CAPTIVE_PORTAL=n PERMISSION_MANAGEMENT=y WEBDAV=y SMARTSYNCBASE=y TIMEMACHINE=y NATNL_AICLOUD=n NATNL_AIHOME=n NTFS="tuxera" HFS="tuxera" TFAT=y DISK_MONITOR=y MTWANCFG=y BOOT_FLASH_TYPE=NAND PWRSAVE=y XHCI=y ATEUSB3_FORCE=y BLINK_LED=n WANRED_LED=y PWRRED_LED=y FO_LED=y EJUSB_BTN=y REPEATER=y PROXYSTA=y DISABLE_REPEATER_UI=y USER_LOW_RSSI=y ATF=y UBIFS=y PSISTLOG=y TEMPROOTFS=n WPSMULTIBAND=n EXTRA_KERNEL_CONFIGS="" VLAN_TAGGED_BASE=n  LAN50=y ATCOVER=y GETREALIP=y QTN=n ALPINE=y SWITCH2="RTL8370MB" NVRAM_FILE=n QSR10G=y AQR107=y IPERF=n RGBLED=y I2CTOOLS=y LED_BTN=y BTN_WIFITOG=y BT_CONN=y ROG_UI=y
# makefile (from 'platform.mak', line 21)
KERNEL_BINARY = $(LINUXDIR)/vmlinux
# makefile (from 'target.mak', line 86)
RT-AX56_XD4 := HND_ROUTER=y PROFILE="947622GW" WL_SCHED_V3=y OOKLA=y BUILD_NAME="RT-AX56_XD4" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=n WTFAST=n REPEATER=y DISABLE_REPEATER_UI=y DISABLE_PROXYSTA_UI=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=n MODEM=n PARENTAL2=y ACCEL_PPTPD=y PRINTER=n WEBDAV=n SMARTSYNCBASE=n USB="USB" APP="none" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=n BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=n DUALWAN=n  NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n STAINFO=y CLOUDCHECK=n NATNL_AICLOUD=n REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y ETLAN_LED=n TFAT=n NTFS="" HFS="" NEWSSID_REV2=y NEWSSID_REV4=y NEWSSID_REV5=y NEW_APP_ARM=y VISUALIZATION=n BONDING=n BONDING_WAN=n NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=y SW_HW_AUTH=y ASPMD=n BCM_MEVENT=n BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=n JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=n BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CONNDIAG=y NFCM=n CRASHLOG=y WATCH_REINIT=y BW160M=n BRCM_HOSTAPD=y TCPLUGIN=y UUPLUGIN=y IPERF3=y INFO_EXAP=y FRS_LIVE_UPDATE=y AVBLCHAN=y NO_SAMBA=y NO_FTP=y NO_USBSTORAGE=y BT_CONN=y BCM_CLED=y SINGLE_LED=y BHCOST_OPT=y AMAS_WGN=y MSSID_PRELINK=y AMAZON_WSS=y PIPEFW=y AHS=y ASD=y OPENSSL10=y INTERNETCTRL=y SW_CTRL_ALLLED=y HSPOT=y BCN_RPT=y BTM_11V=y BCMEVENTD=y PORT2_DEVICE=y URLFW=y AMAS_SYNC_2G_BW=y INSTANT_GUARD=y AMAS_ETHDETECT=y ACL96=y IPV6S46=y GOOGLE_ASST=y ASUSCTRL=y
# environment
WINDOWPATH = 1
# makefile (from 'target.mak', line 714)
RT-AC82U := IPV6SUPP=y HTTPS=y SSH=y QCA=y IPQ40XX=y BBEXTRAS=y USBEXTRAS=y SAMBA3=y MEDIASRV=y PARENTAL2=y OPENVPN=y VPNC=y EMAIL=y FRS_FEEDBACK=y YANDEXDNS=y ACCEL_PPTPD=y USB="USB" APP="network" EBTABLES=y AUTODICT=y  LANWAN_LED=y BUILD_NAME="RT-AC82U" RTAC82U=y SHP=y NVRAM_64K=y TUNEK="n" OPTIMIZE_XBOX=y ODMPID=y BOOT_FLASH_TYPE=NAND MDNS=y FINDASUS=y XHCI=y ATEUSB3_FORCE=y EXT4FS=y TEMPROOTFS=y NTFS="open" TFAT=n HFS="open" DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y NOIPTV=y DISK_MONITOR=y UBI=y UBIFS=y PSISTLOG=y WPSMULTIBAND=y BLINK_LED=y LAN4WAN_LED=y WANRED_LED=y BTN_WPS_ALLLED=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y ATF=y QCA_TW_AUTO_BAND4=y STAINFO=y NEWSSID_REV2=y LAN50=y UUPLUGIN=n NOTIFICATION_CENTER=y HAPDEVENT=y AMAS=y AVBLCHAN=y REPEATER=y DISABLE_REPEATER_UI=y SW_HW_AUTH=y NATNL_AIHOME=y DWB=y ETHOBD=y
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
LC_IDENTIFICATION = zh_CN.UTF-8
# default
.RECIPEPREFIX := 
# makefile (from 'target.mak', line 552)
SWRT-R6800 := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA4=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y  USB="USB"  AUTODICT=y LANWAN_LED=y SHP=y R6800=y ODMPID=y DUAL_TRX=n LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y SSH=y HD_SPINDOWN=y FORCE_AUTO_UPGRADE=n NTFS="open_2016+ntfs3" HFS="open" APFS=y EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=n UTF8_SSID=y NO_SELECT_CHANNEL=y ATED122=y MTK_8021XD3000=y MULTICASTIPTV=y QUAGGA=y EDCCA_NEW=y MUSL_LIBC=y OOKLA=y XHCI=y ATEUSB3_FORCE=y SWCONFIG=y BLINK_LED=n BTN_WPS_ALLLED=y NVRAM_ENCRYPT=2744 BOOT_FLASH_TYPE=NAND MTK_NAND=y PMF=y AUTO_FW_UPGRADE=y DRAM=256M DTB="mt7621-r6800.dtb" FIRST_IF=MT7615E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y UBI=y UBIFS=y PSISTLOG=y ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y TEMPROOTFS=y WPSMULTIBAND=y ATF=y SAVE_WL_NVRAM_BOTH=n CAPTCHA=y RALINK_BUILDIN_WIFI=y INTERNETCTRL=y MODEM=y PRINTER=y GOOGLE_ASST=y NEW_USER_LOW_RSSI=n NEWSSID_REV4=y GETREALIP=y ATCOVER=y LAN50=all SW_HW_AUTH=y NATNL_AIHOME=y UUPLUGIN=y OPEN_NAT=y GAME_MODE=y ASD=y AHS=n FRS_LIVE_UPDATE=y REPEATER=y PROXYSTA=y MTK_REP=n BUILD_NAME="R6800" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_256M=y UBOOT_CMDLINE=y MODEL_R6800=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAILNA=y SECOND_IF_EPAELNA=y" SOFTCENTER=y SMARTDNS=y VHT160=y ENTWARE=y CIFS=y SWRT=y SWRT_NAME="R6800" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_I2CLED=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y NEWKERNEL=n
# makefile (from 'platform.mak', line 92)
platformRouterOptions = 	@( if [ "$(RALINK)" = "y" ]; then sed -i "/RTCONFIG_RALINK\>/d" $(1); echo "RTCONFIG_RALINK=y" >>$(1); sed -i "/CONFIG_RA_HW_NAT_IPV6/d" $(1); echo "# CONFIG_RA_HW_NAT_IPV6 is not set" >>$(1); if [ "$(PMF)" = "y" ]; then sed -i "/RTCONFIG_MFP/d" $(1); echo "RTCONFIG_MFP=y" >>$(1); fi; if [ "$(RT3883)" = "y" ]; then sed -i "/RTCONFIG_RALINK_RT3883/d" $(1); echo "RTCONFIG_RALINK_RT3883=y" >>$(1); else sed -i "/RTCONFIG_RALINK_RT3883/d" $(1); echo "# RTCONFIG_RALINK_RT3883 is not set" >>$(1); fi; if [ "$(RT3052)" = "y" ]; then sed -i "/RTCONFIG_RALINK_RT3052/d" $(1); echo "RTCONFIG_RALINK_RT3052=y" >>$(1); else sed -i "/RTCONFIG_RALINK_RT3052/d" $(1); echo "# RTCONFIG_RALINK_RT3052 is not set" >>$(1); fi; if [ "$(MT7620)" = "y" ]; then sed -i "/RTCONFIG_RALINK_MT7620/d" $(1); echo "RTCONFIG_RALINK_MT7620=y" >>$(1); else sed -i "/RTCONFIG_RALINK_MT7620/d" $(1); echo "# RTCONFIG_RALINK_MT7620 is not set" >>$(1); fi; if [ "$(MT7621)" = "y" ]; then sed -i "/RTCONFIG_RALINK_MT7621/d" $(1); echo "RTCONFIG_RALINK_MT7621=y" >>$(1); else sed -i "/RTCONFIG_RALINK_MT7621/d" $(1); echo "# RTCONFIG_RALINK_MT7621 is not set" >>$(1); fi; if [ "$(MT7628)" = "y" ]; then sed -i "/RTCONFIG_RALINK_MT7628/d" $(1); echo "RTCONFIG_RALINK_MT7628=y" >>$(1); else sed -i "/RTCONFIG_RALINK_MT7628/d" $(1); echo "# RTCONFIG_RALINK_MT7628 is not set" >>$(1); fi; if [ "$(MT7629)" = "y" ]; then sed -i "/RTCONFIG_RALINK_MT7629/d" $(1); echo "RTCONFIG_RALINK_MT7629=y" >>$(1); else sed -i "/RTCONFIG_RALINK_MT7629/d" $(1); echo "# RTCONFIG_RALINK_MT7629 is not set" >>$(1); fi; if [ "$(MT7622)" = "y" ]; then sed -i "/RTCONFIG_RALINK_MT7622/d" $(1); echo "RTCONFIG_RALINK_MT7622=y" >>$(1); else sed -i "/RTCONFIG_RALINK_MT7622/d" $(1); echo "# RTCONFIG_RALINK_MT7622 is not set" >>$(1); fi; fi; )
# makefile (from 'platform.mak', line 74)
EXTRA_CFLAGS := -DLINUX26 -DCONFIG_RALINK -pipe -DDEBUG_NOISY -DDEBUG_RCTEST
# environment
LC_ADDRESS = zh_CN.UTF-8
# makefile (from 'target.mak', line 398)
RT-AC85P := IPV6SUPP=y SYSCLASSGPIO=y HTTPS=y MIPS32=r2 RALINK=y MT7621=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA4=y MEDIASRV=y PARENTAL2=y ACCEL_PPTPD=y  USB="USB"  AUTODICT=y LANWAN_LED=y SHP=y RTAC85P=y ODMPID=y DUAL_TRX=y LED_ALL=y NEW_RGDM=y RA_SKU_IN_DRV=y OPENVPN=y VPNC=y DUMP_OOPS_MSG=y DEBUGFS=y REBOOT_SCHEDULE=y SSH=y NO_SELECT_CHANNEL=y HD_SPINDOWN=y FORCE_AUTO_UPGRADE=n NTFS="open_2016+ntfs3" HFS="open" APFS=y EXT4FS=y DISK_MONITOR=y MDNS=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y USB_SWAP=n UTF8_SSID=y ATED122=y MTK_8021XD3000=y MULTICASTIPTV=y QUAGGA=y MUSL_LIBC=y OOKLA=y XHCI=y ATEUSB3_FORCE=y SWCONFIG=y BLINK_LED=y BTN_WPS_ALLLED=y EDCCA_NEW=y BOOT_FLASH_TYPE=NAND MTK_NAND=y NVRAM_ENCRYPT=2744 PMF=y AUTO_FW_UPGRADE=y DRAM=256M DTB="mt7621-rtac85p.dtb" FIRST_IF=MT7615E SECOND_IF=MT7615E RALINK_DFS=y MTK_MUMIMO=y MUMIMO_5G=y QAM256_2G=y UBI=y UBIFS=y PSISTLOG=y ALEXA=y DUALWAN=y LETSENCRYPT=y BWDPI=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV INSTANT_GUARD=y TEMPROOTFS=y WPSMULTIBAND=y ATF=y SAVE_WL_NVRAM_BOTH=n CAPTCHA=y RALINK_BUILDIN_WIFI=y INTERNETCTRL=y MODEM=y PRINTER=y GOOGLE_ASST=y NEW_USER_LOW_RSSI=n NEWSSID_REV4=y GETREALIP=y ATCOVER=y LAN50=all SW_HW_AUTH=y NATNL_AIHOME=y UUPLUGIN=y OPEN_NAT=y GAME_MODE=y ASD=y AHS=n FRS_LIVE_UPDATE=y REPEATER=y PROXYSTA=y MTK_REP=n BUILD_NAME="RT-AC85P" EXTRA_KERNEL_CONFIGS="MT7621_BAUDRATE=57600 RT2880_DRAM_256M=y UBOOT_CMDLINE=y MODEL_RTAC85P=y SMART_CARRIER_SENSE_SUPPORT=y MT_DFS_SUPPORT=y DUAL_TRX=y FIRST_IF_IPAILNA=y SECOND_IF_EPAELNA=y" SOFTCENTER=y SMARTDNS=y VHT160=y ENTWARE=y CIFS=y SWRT=y SWRT_NAME="RTAC85P" SWRT_VER_MAJOR="B" SWRT_VER_MINOR="5.1.8" SWRT_CODEBASE="45956" SWRT_FULLCONE=y SWRT_KVR=y SWRT_FASTPATH=y EASYMESH=y
# makefile (from 'target.mak', line 145)
 
RT-AC1200G_BASE := IPV6SUPP=y ARM=y NTFS="open" AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y PARENTAL2=y USB="USB" GRO=y APP="none" DNSMQ=y SHP=y NVRAM_64K=y RTAC1200G=y BCMWL6=y BCMWL6A=y EXT4FS=y BCM5301X=n DISK_MONITOR=y LANWAN_LED=n OPTIMIZE_XBOX=y MDNS=y HFS="open" DUMP_OOPS_MSG=y DEBUGFS=n BCM9=y TEMPROOTFS=y BTN_WPS_ALLLED=y REBOOT_SCHEDULE=y JFFS2=y JFFS2LOG=y HTTPS=y SSH=y ODMPID=y LAN50=y ATCOVER=y GETREALIP=y SW_HW_AUTH=y NATNL_AIHOME=y
# environment
LANG = C
# makefile (from 'Makefile', line 131)
SWRT_VER := 
# makefile (from 'Makefile', line 242)
DONGLE_DIR := 4365
# environment
VSCODE_PID = 123129
# makefile (from 'target.mak', line 30)
RT-AC68U_BASE := IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3="3.6.x" MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" GRO=y APP="installed" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y EXT4FS=y BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y LOGO_LED=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y BCMSMP=y XHCI=y DUALWAN=y REPEATER=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y BWDPI=y DUMP_OOPS_MSG=y DPSTA=y HSPOT=y LINUX_MTD="64" DEBUGFS=y BCM7=n BCM4708=y TEMPROOTFS=y SSH=y ROG=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y STAINFO=y BCM5301X_TRAFFIC_MONITOR=y CLOUDCHECK=y BCM_RECVFILE=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y YANDEXDNS=y LAN50=y ATCOVER=y GETREALIP=y NOTIFICATION_CENTER=y HD_SPINDOWN=y SW_HW_AUTH=y NATNL_AICLOUD=y NATNL_AIHOME=y LETSENCRYPT=y UTF8_SSID=y AMAS=y ETHOBD=y DWB=y CONNDIAG=y NFCM=n FORCE_AUTO_UPGRADE=y FORCE_ROAMING=y BCN_RPT=y BTM_11V=y OOKLA=y WL_SCHED_V3=y GAME_MODE=y FILEFLEX=y
# makefile (from 'target.mak', line 630)
RT-N19 := IPV6SUPP=y HTTPS=y MIPS32=r2 QCA=y QCN550X=y QSDK_VER=.mesh BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y AUTODICT=y BUILD_NAME="RT-N19" RTN19=y SHP=y NVRAM_SIZE=0x1E000 ODMPID=y OPENVPN=y VPNC=y MDNS=y DUALWAN=y DUMP_OOPS_MSG=y DEBUGFS=y SSH=y EMAIL=y FRS_FEEDBACK=y FINDASUS=y STAINFO=y REBOOT_SCHEDULE=y YANDEXDNS=y NEWSSID_REV2=y LAN50=all GETREALIP=y MULTICASTIPTV=y QUAGGA=y BLINK_LED=y LAN4WAN_LED=y BTN_WPS_ALLLED=y REPEATER=y NEW_USER_LOW_RSSI=y REDIRECT_DNAME=y JFFS2=y PSISTLOG=y QCA_TW_AUTO_BAND4=y TEMPROOTFS=y SINGLE_2G=y UTF8_SSID=y NVRAM_ENCRYPT=y FORCE_AUTO_UPGRADE=y
# makefile (from 'platform.mak', line 15)
ATEVER := 2.0.2
# makefile (from 'platform.mak', line 65)
HOST := arm-linux
# makefile (from 'target.mak', line 103)
TUF-AX5400 := HND_ROUTER=y PROFILE="96750GW" SAMBA3="3.6.x" OOKLA=y WL_SCHED_V3=y BUILD_NAME="TUF-AX5400" NVSIZE="128" DHDAP=y HND_WL=y DPSTA=y LACP=y WTFAST=n REPEATER=y IPV6SUPP=y HTTPS=y ARM=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y MEDIASRV=y MODEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y SMARTSYNCBASE=y USB="USB" APP="installed" PROXYSTA=y DNSMQ=y SHP=n BCMWL6=y BCMWL6A=y DISK_MONITOR=y BTN_WIFITOG=n OPTIMIZE_XBOX=y ODMPID=y LED_BTN=n BCMSMP=y XHCI=y DUALWAN=y NEW_USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y NOTIFICATION_CENTER=y BWDPI=y DUMP_OOPS_MSG=n LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=n SSH=y EMAIL=y FRS_FEEDBACK=y SYSSTATE=y ROG=n TUF_UI=y OPEN_NAT=y STAINFO=y CLOUDCHECK=y NATNL_AICLOUD=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y WLCLMLOAD=n BCM_MUMIMO=y LAN50="all" ATCOVER=y GETREALIP=y CFEZ=y TFAT=y NTFS="tuxera" HFS="tuxera" NEWSSID_REV2=y NEWSSID_REV4=y LAN4WAN_LED=y NEW_APP_ARM=y VISUALIZATION=n BONDING=y BONDING_WAN=y NETOOL=y TRACEROUTE=y FORCE_AUTO_UPGRADE=y ALEXA=y IFTTT=n SW_HW_AUTH=y HD_SPINDOWN=y ASPMD=n BCM_MEVENT=n BCMEVENTD=y BCM_APPEVENTD=n LETSENCRYPT=y VPN_FUSION=y JFFS_NVRAM=y NVRAM_ENCRYPT=y IPSEC=STRONGSWAN IPSEC_SRVCLI_ONLY=SRV NATNL_AIHOME=y BCM_CEVENTD=y UTF8_SSID=y AMAS=y DWB=y DBLOG=y ETHOBD=y CFGSYNC_LOCSYNC=y CONNDIAG=y CRASHLOG=y WATCH_REINIT=n BW160M=y BRCM_HOSTAPD=y UUPLUGIN=y IPERF3=y FRS_LIVE_UPDATE=y ASUSCTRL=y BCN_RPT=y BTM_11V=y INFO_EXAP=y AVBLCHAN=y SW_CTRL_ALLLED=y ASD=y AHS=y INTERNETCTRL=y GAME_MODE=y INSTANT_GUARD=y ACL96=y IPV6S46=y GOOGLE_ASST=y
# makefile (from 'target.mak', line 13)
RT-N12B1 := IPV6SUPP=y MIPS32=r2 AUTODICT=y BBEXTRAS=y EBTABLES=y PARENTAL2=y ACCEL_PPTPD=y REPEATER=y LANWAN_LED=y DNSMQ=y DYN_DICT_NAME=y SWMODE_SWITCH=y WL_AUTO_CHANNEL=y BUILD_NAME="RT-N12B1" USER_LOW_RSSI=y TEMPROOTFS=y REBOOT_SCHEDULE=y LAN50=y ATCOVER=y GETREALIP=y
# makefile (from 'Makefile', line 108)
TOP_PLATFORM := /home/akito/asuswrt-modx-next/release/src-ra-openwrt-4210/router
# variable set hash-table stats:
# Load=389/1024=38%, Rehash=0, Collisions=247/978=25%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2049, inode 6212026): 24 files, no impossibilities.

# 24 files, no impossibilities in 1 directories.

# Implicit Rules

%-combine_image:
#  recipe to execute (from 'Makefile', line 696):
	@if [ -z "$(IMAGEDIR)" ]; then \
		echo "No IMAGEDIR is assigned"; \
		exit 1; \
	fi
	$(eval COMBINE_NAME := $(shell echo $* | tr a-z A-Z))
	@if [ "$(COMBINE_NAME)" = "RT-AC59_CD6" ]; then \
		`$(eval COMBINE_MODEL := RT-AC59_CD6R RT-AC59_CD6N)`; \
	elif [ "$(COMBINE_NAME)" = "RT-AC68U" ]; then \
		echo "Try to combine RT-AC68U FW..."; \
	else \
		echo "Unknown model! Need define COMBINE_MODEL..."; \
		exit 1; \
	fi
	$(eval IMAGEVER := $(KERNEL_VER).$(FS_VER)_$(SERIALNO)_$(SWPJVER)$(EXTENDNO))
	md5sum $(IMAGEDIR)/$(COMBINE_NAME)_$(IMAGEVER).trx > $(IMAGEDIR)/$(COMBINE_NAME)_$(IMAGEVER).md5

mk-%:
#  recipe to execute (from 'Makefile', line 5540):
	@$(MAKE) -C router $(shell echo $@ | sed s/mk-//)

4g-% 4G-%:
#  recipe to execute (from 'Makefile', line 5712):
	$(call save_src_config, RT$@)
	$(MAKE) bin

brt-% BRT-% rt-% RT-% CT-% ct-% gt-% GT-% gx-% GX-% rp-% RP-% ea-% EA-% tm-% TM-% pl-% PL-% ac% map-% MAP-% vzw-% VZW-% sh-% SH-% tuf-% TUF-% gs-% GS-% swrt-% SWRT-%:
#  recipe to execute (from 'Makefile', line 5716):
	$(call save_src_config, $@)
	$(MAKE) bin

dsl-% DSL-%:
#  recipe to execute (from 'Makefile', line 5724):
	$(call dsl_genbintrx_prolog)
	$(call save_src_config, $@)
	@$(MAKE) bin

%: dummy
#  recipe to execute (from 'Makefile', line 5901):
	@[ ! -d router/$* ] || $(MAKE) -C router $@

%-clean: dummy
#  recipe to execute (from 'Makefile', line 5904):
	@-[ ! -d router/$* ] || $(MAKE) -C router $@

%-install: dummy
#  recipe to execute (from 'Makefile', line 5907):
	@[ ! -d router/$* ] || $(MAKE) -C router $* $@

%-stage: dummy
#  recipe to execute (from 'Makefile', line 5910):
	@[ ! -d router/$* ] || $(MAKE) -C router $* $@

%-build: dummy
#  recipe to execute (from 'Makefile', line 5913):
	$(MAKE) $*-clean $*

%-tags: dummy
#  recipe to execute (from 'Makefile', line 5916):
	@[ ! -d router/$* ] || ctags -a -R $(CTAGS_EXCLUDE_OPT) $(SRC_ROOT)/router/$*

# 11 implicit rules, 0 (0.0%) terminal.

# Files

gen_target:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5859):
	$(MAKE) -C router $@

xd4pro:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

bluecave_kernel:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1212):
	@echo ${SRCBASE}
	@echo ${TOOLCHAIN}
	if [ ! -d "${SRCBASE}/tools/${TOOLCHAIN_NAME}" ] ; then \
		cd ${SRCBASE}/tools; tar zxf ${TOOLCHAIN_NAME}.tgz ; \
	fi
	if [ ! -d "${SRCBASE}/tools/${TOOLCHAIN_HOST_NAME}" ] ; then \
		cd ${SRCBASE}/tools; tar zxf ${TOOLCHAIN_HOST_NAME}.tgz ; \
	fi
	# uImage (Host Linux)
	@echo ${STAGING_DIR}/${TOOLCHAIN_NAME}/bin
	make -j3 -C ${LINUXDIR} HOSTCFLAGS="-O2 -I${SRCBASE}/tools/host/include -I${SRCBASE}/tools/host/usr/include -Wall -Wmissing-prototypes -Wmissing-prototypes -Wstrict-prototypes" KBUILD_HAVE_NLS=no CONFIG_DEBUG_SECTION_MISMATCH=y CONFIG_SHELL="/bin/bash" V='' INSTALL_HDR_PATH=${LINUXDIR}/user_headers headers_install
	make -j3 -C ${LINUXDIR} HOSTCFLAGS="-O2 -I${SRCBASE}/tools/host/include -I${SRCBASE}/tools/host/usr/include -Wall -Wmissing-prototypes -Wmissing-prototypes -Wstrict-prototypes" KBUILD_HAVE_NLS=no CONFIG_DEBUG_SECTION_MISMATCH=y CONFIG_SHELL="/bin/bash" V='' INSTALL_HDR_PATH=${LINUXDIR} modules
	make -j3 -C ${LINUXDIR} HOSTCFLAGS="-O2 -I${SRCBASE}/tools/host/include -I${SRCBASE}/tools/host/usr/include -Wall -Wmissing-prototypes -Wmissing-prototypes -Wstrict-prototypes" KBUILD_HAVE_NLS=no CONFIG_DEBUG_SECTION_MISMATCH=y CONFIG_SHELL="/bin/bash" V='' INSTALL_HDR_PATH=${LINUXDIR} all modules
	# make -C ${LINUXDIR} HOSTCFLAGS="-O2 -I${STAGING_DIR}/host/include -Wall -Wmissing-prototypes -Wstrict-prototypes" KBUILD_HAVE_NLS=no CONFIG_SHELL="/bin/bash" V='' modules

gen_prebuilt:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5862):
	-mkdir -p $(PBDIR)
	$(MAKE) -f upb.mak PBDIR=${PBDIR}
	@if [ -f .gpl_excludes_router ]; then cp -f .gpl_excludes_router ${PBDIR}/release/.; fi

et12:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

a:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

b:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

c:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

d:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

dsl.mak: dummy
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'dsl.mak'
#  Last modified 2022-04-19 08:43:46.315573533
#  File has been updated.
#  Successfully updated.
# automatic
# @ := dsl.mak
# automatic
# % := 
# automatic
# * := dsl.mak
# automatic
# + := dummy
# automatic
# | := 
# automatic
# < := dummy
# automatic
# ^ := dummy
# automatic
# ? := dummy
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/25=16%
#  recipe to execute (from 'Makefile', line 5901):
	@[ ! -d router/$* ] || $(MAKE) -C router $@

all: rt_ver
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/28=0%
#  recipe to execute (from 'Makefile', line 674):
	echo ""
	echo "Building $(BUILD_NAME)_$(KERNEL_VER).$(FS_VER)_$(SERIALNO).trx"
	echo ""
	
	@-mkdir -p image
	$(MAKE) -C router all
	$(MAKE) -C router install
	@$(MAKE) image

m:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

bin:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5554):
	@echo $@" is not a valid target!"
	@false
	@cp router/config_base router/config_$(lowercase_B)
	@cp $(BUSYBOX_DIR)/config_base $(BUSYBOX_DIR)/config_$(lowercase_B)
	@if [ "$(RALINK)" = "y" ]; then \
		if [ "$(BUILD_NAME)" = "RT-AC1200" ] || [ "$(BUILD_NAME)" = "RT-N600" ] ; then \
			cp $(LINUXDIR)/ralink/Kconfig_$(lowercase_B) $(LINUXDIR)/ralink/Kconfig ; \
			cp $(LINUXDIR)/config_base.MT7628 $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "RT-AC1200V2" ] ||[ "$(BUILD_NAME)" = "RT-AC53" ]; then \
			cp $(LINUXDIR)/ralink/Kconfig_$(lowercase_B) $(LINUXDIR)/ralink/Kconfig ; \
		elif [ "$(BUILD_NAME)" = "RT-AC85P" ]; then \
			cp $(LINUXDIR)/config_base_rtac85p $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "RP-AC87" ] || [ "$(BUILD_NAME)" = "RT-AC85U" ] || [ "$(BUILD_NAME)" = "RT-AC65U" ] || [ "$(BUILD_NAME)" = "RT-ARCH26" ] || [ "$(BUILD_NAME)" = "TUF-AC1750" ]; then \
			cp $(LINUXDIR)/config_base $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "RT-ACRH18" ]; then \
			cp $(LINUXDIR)/config_base.MT7629 $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "4G-AC86U" ]; then \
			cp $(LINUXDIR)/config_base.MT7622 $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "RT-AX53U" ] || [ "$(BUILD_NAME)" = "RT-AX54" ] || [ "$(BUILD_NAME)" = "4G-AX56" ] ; then \
			cp $(LINUXDIR)/config_base.MT7621 $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "RM-AC2100" ]; then \
			cp $(LINUXDIR)/config_base_rmac2100 $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "RT-MIR3G" ]; then \
			cp $(LINUXDIR)/config_base_rtmir3g $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "R6800" ]; then \
			cp $(LINUXDIR)/config_base_r6800 $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "PGB-M1" ]; then \
			cp $(LINUXDIR)/config_base_pgbm1 $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "JCG-Q10PRO" ]; then \
			cp $(LINUXDIR)/config_base_jcgq10pro $(LINUXDIR)/config_$(lowercase_B) ; \
		elif [ "$(BUILD_NAME)" = "H3C-TX1801" ]; then \
			cp $(LINUXDIR)/config_base_h3ctx1801 $(LINUXDIR)/config_$(lowercase_B) ; \
		else \
			cp $(LINUXDIR)/config_base $(LINUXDIR)/config_$(lowercase_B) ; \
		fi ; \
	elif [ "$(MUSL64)" = "y" ] && [ -f $(LINUXDIR)/config_base64 ] ; then \
		cp $(LINUXDIR)/config_base64 $(LINUXDIR)/config_$(lowercase_B) ; \
	else \
		cp $(LINUXDIR)/config_base $(LINUXDIR)/config_$(lowercase_B) ; \
	fi ;
	@if [ -f $(LINUXDIR)/config_base_$(lowercase_B) ]; then \
		cp $(LINUXDIR)/config_base_$(lowercase_B) $(LINUXDIR)/config_$(lowercase_B); \
	fi
	@echo "" >> router/config_$(lowercase_B)
	$(call RouterOptions, router/config_$(lowercase_B))
	$(call KernelConfig, $(LINUXDIR)/config_$(lowercase_B))
	$(call BusyboxOptions, $(BUSYBOX_DIR)/config_$(lowercase_B))
	@if [ "$(BUILD_NAME)" = "RT-N56UB1" ] || [ "$(BUILD_NAME)" = "RT-N56UB2" ]; then \
		if [ "$(MT7603_EXTERNAL_PA_EXTERNAL_LNA)" = "y" ] ; then \
			echo "build epa+elna fw" ; \
			gcc -DCONFIG_MT7603E_EXTERNAL_PA_EXTERNAL_LNA -g $(LINUXDIR)/drivers/net/wireless/rlt_wifi_7603E/tools/bin2h.c \
			-o $(LINUXDIR)/drivers/net/wireless/rlt_wifi_7603E/tools/bin2h ; \
		elif [ "$(MT7603_INTERNAL_PA_EXTERNAL_LNA)" = "y" ] ; then \
			echo "build ipa+elna fw" ; \
			gcc -DCONFIG_MT7603E_INTERNAL_PA_EXTERNAL_LNA -g $(LINUXDIR)/drivers/net/wireless/rlt_wifi_7603E/tools/bin2h.c \
			-o $(LINUXDIR)/drivers/net/wireless/rlt_wifi_7603E/tools/bin2h ; \
		fi ; \
		$(MAKE) -C $(LINUXDIR)/drivers/net/wireless/rlt_wifi_7603E build_e2fw; \
	fi
	@$(MAKE) setprofile
	$(MAKE) all

.PHONY: all clean distclean cleanimage cleantools cleankernel prepk what setprofile libc help image default bin_file a b c d m Makefile allversions tags dummy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

setprofile:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5741):
	@echo ""
	@echo "Using $(N) profile, $(B) build config."
	@echo ""
	@cd $(LINUXDIR) ; \
		rm -f config_current ; \
		ln -s config_$(lowercase_B) config_current ; \
		cp -f config_current .config
	@cd $(BUSYBOX_DIR) ; \
		rm -f config_current ; \
		ln -s config_$(lowercase_B) config_current ; \
		cp config_current .config
	@cd router ; \
		rm -f config_current ; \
		ln -s config_$(lowercase_B) config_current ; \
 
		cp config_current .config
	@if grep -q "CONFIG_MT7610_AP=m" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7610_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7610_AP=y" >> router/.config; \
	fi
	@if grep -q "CONFIG_RLT_WIFI=m" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_RLT_WIFI/d" router/.config; \
		echo "RTCONFIG_WLMODULE_RLT_WIFI=y" >> router/.config; \
	fi
	@if grep -q "CONFIG_CHIP_MT7603E=y" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7603E_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7603E_AP=y" >> router/.config; \
	fi
	@if grep -q "CONFIG_RALINK_MT7628=y" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7628_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7628_AP=y" >> router/.config; \
		echo "CONFIG_RALINK_MT7628!!!!"; \
	fi
	@if grep -q "CONFIG_CHIP_MT7615E=y" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7615E_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7615E_AP=y" >> router/.config; \
	fi
	@if grep -q "CONFIG_WIFI_MT7663E=y" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7663E_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7663E_AP=y" >> router/.config; \
	fi
	if grep -q "CONFIG_MACH_LEOPARD=y" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7629_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7629_AP=y" >> router/.config; \
	fi
	if grep -q "CONFIG_RALINK_MT7622=y" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7622_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7622_AP=y" >> router/.config; \
	fi
	if grep -q "CONFIG_CHIP_MT7915=y" $(LINUXDIR)/.config ; then \
		sed -i "/RTCONFIG_WLMODULE_MT7915D_AP/d" router/.config; \
		echo "RTCONFIG_WLMODULE_MT7915D_AP=y" >> router/.config; \
	fi
	$(MAKE) -C router oldconfig

prepare_toolchain:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1173):
	if [ ! -d "${SRCBASE}/tools/${TOOLCHAIN_NAME}" ] ; then \
		cd ${SRCBASE}/tools; tar zxf ${TOOLCHAIN_NAME}.tgz ; \
	fi
	if [ ! -d "${SRCBASE}/tools/${TOOLCHAIN_HOST_NAME}" ] ; then \
		if [ "`uname -m`" = "x86_64" ] ; then \
			cd ${SRCBASE}/tools; tar zxf ${TOOLCHAIN_HOST_NAME}_64bit.tgz ; \
		else \
			cd ${SRCBASE}/tools; tar zxf ${TOOLCHAIN_HOST_NAME}.tgz ; \
		fi \
	fi
	if [ ! -f "${SRCBASE}/tools/${TOOLCHAIN_NAME}/.patched" ] ; then \
		cd ${SRCBASE}/tools/${TOOLCHAIN_NAME}/lib; cp ${SRCBASE}/patches/toolchain/lib/libnsl-0.9.33.2.so .; cp ${SRCBASE}/patches/toolchain/lib/libresolv-0.9.33.2.so . ; ln -s libnsl-0.9.33.2.so libnsl.so.0; ln -s libnsl.so.0 libnsl.so ; ln -s libresolv-0.9.33.2.so libresolv.so.0 ; \
		touch ${SRCBASE}/tools/${TOOLCHAIN_NAME}/.patched ; \
	fi

ETJ:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5729):
	$(call save_src_config,$@,_CFG)
	$(MAKE) bin

et8pro:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

allversions:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

distclean: clean cleanimage cleankernel cleantools cleanlibc
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1291):
	@$(MAKE) -C router $@ INSIDE_MAK=1
	mv router/$(BUSYBOX)/.config busybox-saved-config || true
	@$(MAKE) -C router/$(BUSYBOX) distclean
	@rm -f router/$(BUSYBOX)/config_current
	@cp -p busybox-saved-config router/$(BUSYBOX)/.config || true
	@cp -p router/$(BUSYBOX)/.config router/$(BUSYBOX)/config_current || true
	@rm -f router/config_current
	@rm -f router/.config.cmd router/.config.old router/.config
	@rm -f router/libfoo_xref.txt
	@-rm -f .config

cleanimage:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1261):
	@rm -f fpkg.log
	@rm -fr image/*
	@rm -f router/.config
	@touch router/.config
	@-mkdir -p image

cleantools:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1270):
	@[ ! -d $(LINUXDIR)/scripts/squashfs ] || \
		$(MAKE) -C $(LINUXDIR)/scripts/squashfs clean
	@$(MAKE) -C btools clean

bbconfig:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5543):
	@cp $(BUSYBOX_DIR)/config_base $(BUSYBOX_DIR)/config_$(lowercase_B)
	$(call BusyboxOptions, $(BUSYBOX_DIR)/config_$(lowercase_B))
	@cd $(BUSYBOX_DIR) && \
		rm -f config_current ; \
		ln -s config_$(lowercase_B) config_current ; \
		cp config_current .config
	$(MAKE) -C router bboldconf
	@echo done

bluecave:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5720):
	$(call save_src_config, $@)
	$(MAKE) bin

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

tags: kernel-tags
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5838):
	ctags -R $(CTAGS_EXCLUDE_OPT) $(CTAGS_DEFAULT_DIRS)

libc: cleanlibc
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

Makefile:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

kernel:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1286):
	$(MAKE) -C router kernel
	@[ ! -e $(KERNEL_BINARY) ] || ls -l $(KERNEL_BINARY)

prepk:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1304):
	@cd $(LINUXDIR) ; \
		rm -f config_current ; \
		ln -s config_base config_current ; \
		cp -f config_current .config
	$(MAKE) -C $(LINUXDIR) oldconfig prepare

clean-cscope: dummy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5853):
	$(RM) -f $(LINUXDIR)/cscope.* cscope.*

xt8pro:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

stage-tags:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5841):
	$(MAKE) -C router stage-tags

xt12:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

get_extendno:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5923):
	@if [ "$(ID)" = "" ]; then echo "No ID is assigned"; exit 1; fi
	git log --pretty=oneline asuswrt_$(KERNEL_VER).$(FS_VER).$(SERIALNO)..$(ID) | wc -l
	@echo $(RC_EXT_NO)
	@echo $(EXTENDNO)

kernel-tags: dummy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5835):
	$(MAKE) -C $(LINUXDIR) tags

cscope: dummy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5844):
	cscope -bkR -s `echo "$(CTAGS_DEFAULT_DIRS)" | sed -e "s, , -s ,g"` -s $(SRC_ROOT)/router

rt-ac98u_kernel:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1197):
	@echo ${SRCBASE}
	@echo ${TOOLCHAIN}
	if [ ! -d "${SRCBASE}/tools/${TOOLCHAIN_NAME}" ] ; then \
		cd ${SRCBASE}/tools; tar zxf ${TOOLCHAIN_NAME}.tgz ; \
	fi
	if [ ! -d "${SRCBASE}/tools/${TOOLCHAIN_HOST_NAME}" ] ; then \
		cd ${SRCBASE}/tools; tar zxf ${TOOLCHAIN_HOST_NAME}.tgz ; \
	fi
	# uImage (Host Linux)
	@echo ${STAGING_DIR}/${TOOLCHAIN_NAME}/bin
	@cp ${LINUXDIR}/config_base ${LINUXDIR}/.config
	make -j 9 -C ${LINUXDIR} HOSTCFLAGS="-O2 -I${STAGING_DIR}/host/include -Wall -Wmissing-prototypes -Wstrict-prototypes" KBUILD_HAVE_NLS=no CONFIG_SHELL="/bin/bash" V='' uImage
	make -j 9 -C ${LINUXDIR} HOSTCFLAGS="-O2 -I${STAGING_DIR}/host/include -Wall -Wmissing-prototypes -Wstrict-prototypes" KBUILD_HAVE_NLS=no CONFIG_SHELL="/bin/bash" V='' modules

bin_file:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1243):
	[ ! -e .bin/$(BUILD_NAME)/Makefile ] || $(MAKE) -C .bin/$(BUILD_NAME) O=$(SRCBASE)/image FW_FN=$(IMGNAME).trx

export_config:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1156):
	@-mkdir image/log
	sh $(SRCBASE)/../../buildtools/parseconfig.sh $(SRCBASE)/../.. $(KERNEL_VER).$(FS_VER)_$(SERIALNO)_$(EXTENDNO) $(SRCBASE)/image $(BUILD_NAME)

.config: dummy
#  Implicit rule search has been done.
#  Implicit/static pattern stem: '.config'
#  File does not exist.
#  File has been updated.
#  Successfully updated.
# automatic
# @ := .config
# automatic
# % := 
# automatic
# * := .config
# automatic
# + := dummy
# automatic
# | := 
# automatic
# < := dummy
# automatic
# ^ := dummy
# automatic
# ? := dummy
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/25=16%
#  recipe to execute (from 'Makefile', line 5901):
	@[ ! -d router/$* ] || $(MAKE) -C router $@

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
 
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5824):
	@echo "make [model id]"
	@echo "make mk-[package]"
	@echo "..etc..      other build configs"
	@echo "clean        -C router clean"
	@echo "cleanimage   rm -rf image"
	@echo "cleantools   clean btools, mksquashfs"
	@echo "cleankernel  -C Linux distclean (but preserves .config)"
	@echo "distclean    distclean of Linux & busybox (but preserve .configs)"
	@echo "prepk        -C Linux oldconfig dep"
	@echo "libc         -C uClibc clean, all, install"

default:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 466):
	@if [ -f .config -a "$(BUILD_NAME)" != "" ] ; then \
		$(MAKE) bin ; \
	else \
		echo "Source tree is not configured. Run make with model name." ; \
	fi

rt_ver_ntools:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 662):
	-@rm -f ntools/version
	-@echo 'KERNEL_IMAGE = $(BUILD_NAME)_$(KERNEL_VER).$(FS_VER)_$(SERIALNO)_$(EXTENDNO).trx' >> ntools/version

ET12:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

ET8PRO:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

clean-tags: dummy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5850):
	$(RM) -f $(LINUXDIR)/tags tags

what:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1315):
	@echo ""
	@echo "$(current_BUILD_DESC)-$(current_BUILD_NAME)-$(TOMATO_PROFILE_NAME) Profile"
	@echo ""

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

image:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 750):
	@if [ -z "$(BUILD_NAME)" ]; then \
		echo "No BUILD_NAME is assigned"; \
		exit 1; \
	fi
	@rm -f image/$(BUILD_NAME)_$(KERNEL_VER).$(FS_VER)_$(SERIALNO).trx
	@$(MAKE) -C router image
	# generate kernel part
	@rm -rf $(PLATFORMDIR)/zImage.lzma ;
	gcc asustools/patch-dtb.c -o asustools/patch-dtb
	if [ "$(BUILD_NAME)" = "RT-ACRH18" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/$(DTB).tmp $(DTS_DIR)/mt7629-lynx-rfb3.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR) -o $(DTS_DIR)/$(DTB) $(DTS_DIR)/$(DTB).tmp ; \
		rm $(DTS_DIR)/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		#asustools/lzma -9 -f -c $(PLATFORMDIR)/vmlinus > $(PLATFORMDIR)/zImage.lzma ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "RT-AX53U" ] || [ "$(BUILD_NAME)" = "RT-AX54" ] || [ "$(BUILD_NAME)" = "4G-AX56" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-rfb-ax-nmbm.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "4G-AC86U" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/mediatek/$(DTB).tmp $(DTS_DIR)/mediatek/mt7622-ac2600.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/mediatek -o $(DTS_DIR)/mediatek/$(DTB) $(DTS_DIR)/mediatek/$(DTB).tmp ; \
		rm $(DTS_DIR)/mediatek/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		#asustools/lzma -9 -f -c $(PLATFORMDIR)/vmlinus > $(PLATFORMDIR)/zImage.lzma ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "RT-AC85U" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-rtac85u.dts ; \
	elif [ "$(BUILD_NAME)" = "RT-AC85P" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-rtac85p.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/patch-dtb $(PLATFORMDIR)/vmlinus $(DTS_DIR)/ralink/$(DTB) ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "R6800" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-r6800.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/patch-dtb $(PLATFORMDIR)/vmlinus $(DTS_DIR)/ralink/$(DTB) ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "RM-AC2100" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-redmiac2100.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/patch-dtb $(PLATFORMDIR)/vmlinus $(DTS_DIR)/ralink/$(DTB) ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "RT-MIR3G" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-rtmir3g.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/patch-dtb $(PLATFORMDIR)/vmlinus $(DTS_DIR)/ralink/$(DTB) ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "PGB-M1" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-pgbm1.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "JCG-Q10PRO" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-jcg-q10pro.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/patch-dtb $(PLATFORMDIR)/vmlinus $(DTS_DIR)/ralink/$(DTB) ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	elif [ "$(BUILD_NAME)" = "H3C-TX1801" ] ; then \
		$(CROSS_COMPILE)cpp -nostdinc -x assembler-with-cpp -I$(DTS_DIR) -I$(DTS_DIR)/include -undef -D__DTS__ -o $(DTS_DIR)/ralink/$(DTB).tmp $(DTS_DIR)/ralink/mt7621-h3c-tx1801.dts ; \
		$(LINUXDIR)/scripts/dtc/dtc -O dtb -i$(DTS_DIR)/ralink -o $(DTS_DIR)/ralink/$(DTB) $(DTS_DIR)/ralink/$(DTB).tmp ; \
		rm $(DTS_DIR)/ralink/$(DTB).tmp ; \
		$(CROSS_COMPILE)objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/patch-dtb $(PLATFORMDIR)/vmlinus $(DTS_DIR)/ralink/$(DTB) ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	else \
		mipsel-linux-objcopy -O binary -R .reginfo -R .note -R .comment -R .mdebug -S $(LINUXDIR)/vmlinux $(PLATFORMDIR)/vmlinus ; \
		asustools/lzma_9k e $(PLATFORMDIR)/vmlinus $(PLATFORMDIR)/zImage.lzma -lc2 -lp2 -pb2 -mfbt2 ; \
	fi ; \
	cp -f $(PLATFORMDIR)/zImage.lzma $(PLATFORMDIR)/zImage.img ; \
	
	# padded kernel image size
	@SIZE=`wc -c $(PLATFORMDIR)/zImage.img | awk '{print $$1}'`; \
	if [ "`grep -c \"^CONFIG_ROOTFS_IN_FLASH_NO_PADDING\>\" $(LINUXDIR)/.config`" -eq 0 ] && [ "$(BUILD_NAME)" != "RT-ACRH18" ] && [ "$(BUILD_NAME)" != "4G-AC86U" ] && [ "$(BUILD_NAME)" != "RT-AX53U" ] && [ "$(BUILD_NAME)" != "4G-AX56" ] && [ "$(BUILD_NAME)" != "RT-AX54" ] && [ "$(BUILD_NAME)" != "RT-AC85P" ] && [ "$(BUILD_NAME)" != "RT-AC85U" ] && [ "$(BUILD_NAME)" != "R6800" ] && [ "$(BUILD_NAME)" != "RM-AC2100" ] && [ "$(BUILD_NAME)" != "RT-MIR3G" ] && [ "$(BUILD_NAME)" != "PGB-M1" ] && [ "$(BUILD_NAME)" != "JCG-Q10PRO" ] && [ "$(BUILD_NAME)" != "H3C-TX1801" ] ; then \
		CONFIG_MTD_KERNEL_PART_SIZ=`grep "^CONFIG_MTD_KERNEL_PART_SIZ\>" $(LINUXDIR)/.config|sed -e "s,[^=]*=,," -e "s,^\(0x\)*,0x,"` ; \
		MTD_KRN_PART_SIZE=`printf "%d" $${CONFIG_MTD_KERNEL_PART_SIZ}` ; \
		PAD=`expr $${MTD_KRN_PART_SIZE} - 64 - $${SIZE}` ; \
		echo "S: $$SIZE $${MTD_KRN_PART_SIZE} $${PAD}" ; \
		if [ "$${PAD}" -le "0" ] ; then \
			echo "CONFIG_MTD_KERNEL_PART_SIZ $${CONFIG_MTD_KERNEL_PART_SIZ} is smaller than " \
				"`wc -c $(PLATFORMDIR)/zImage.img|awk '{printf "0x%x",$$1}'`. Increase it!" ; \
			ls -l $(PLATFORMDIR)/zImage.img ; \
			exit 1 ; \
		fi ; \
		dd if=/dev/zero count=1 bs=$${PAD} 2> /dev/null | tr \\000 \\377 >> $(PLATFORMDIR)/zImage.img ; \
	else  \
		PAD=`expr 64 - $${SIZE} % 64` ; \
		dd if=/dev/zero count=1 bs=$${PAD} 2> /dev/null | tr \\000 \\377 >> $(PLATFORMDIR)/zImage.img ; \
	fi ; \
	if [ "$(BUILD_NAME)" = "RT-ACRH18" ] ; then	\
		asustools/mkits.sh -D MTK-7629-RFB -o image/MTK-7629-RFB.its -k $(PLATFORMDIR)/zImage.img -d $(DTS_DIR)/$(DTB) -C lzma -a 0x40008000 -e 0x40008000 -A arm -v 4.4.198 ; \
		#asustools/u-boot-2014.10/tools/mkimage -f image/MTK-7629-RFB.its image/$(IMGNAME).img ; \
		asustools/u-boot-2014.10/tools/mkimage -f image/MTK-7629-RFB.its $(PLATFORMDIR)/zImage.img ; \
	elif [ "$(BUILD_NAME)" = "RT-AX53U" ] || [ "$(BUILD_NAME)" = "RT-AX54" ] || [ "$(BUILD_NAME)" = "4G-AX56" ] ; then	\
		asustools/mkits.sh -D mt7621-rfb-ax-nmbm -o image/mt7621-rfb-ax-nmbm.its -k $(PLATFORMDIR)/zImage.img -d $(DTS_DIR)/ralink/$(DTB) -C lzma -a 0x81001000 -e 0x81001000 -A mips -v 4.4.198 ; \
		asustools/u-boot-2014.10/tools/mkimage -f image/mt7621-rfb-ax-nmbm.its $(PLATFORMDIR)/zImage.img ; \
	elif [ "$(BUILD_NAME)" = "4G-AC86U" ] ; then	\
		asustools/mkits.sh -D MTK-AC2600-RFB1 -o image/MTK-AC2600-RFB1-kernel.bin.its -k $(PLATFORMDIR)/zImage.img -d $(DTS_DIR)/mediatek/$(DTB) -C lzma -a 0x41080000 -e 0x41080000 -A arm64 -v 4.4.198 ; \
		#asustools/u-boot-2014.10/tools/mkimage -f image/MTK-7622-RFB1.its image/$(IMGNAME).img ; \
		asustools/u-boot-2014.10/tools/mkimage -f image/MTK-AC2600-RFB1-kernel.bin.its $(PLATFORMDIR)/zImage.img ; \
	elif [ "$(BUILD_NAME)" = "R6800" ] ; then \
		cp $(PLATFORMDIR)/zImage.img $(PLATFORMDIR)/kernel.img ; \
	elif [ "$(BUILD_NAME)" = "PGB-M1" ] ; then \
		asustools/mkits.sh -D mt7621-pgbm1 -o image/mt7621-pgbm1.its -k $(PLATFORMDIR)/zImage.img -d $(DTS_DIR)/ralink/$(DTB) -C lzma -a 0x81001000 -e 0x81001000 -A mips -v 4.4.198 ; \
		asustools/u-boot-2014.10/tools/mkimage -f image/mt7621-pgbm1.its $(PLATFORMDIR)/zImage.img ; \
	fi ; \
	if [ "$(BUILD_NAME)" = "R6800" ] || [ "$(BUILD_NAME)" = "RM-AC2100" ]  || [ "$(BUILD_NAME)" = "RT-MIR3G" ] || [ "$(BUILD_NAME)" = "JCG-Q10PRO" ] || [ "$(BUILD_NAME)" = "H3C-TX1801" ]; then \
		SIZE=`wc -c $(PLATFORMDIR)/zImage.img | awk '{print $$1}'`; \
		PAD=`expr 4194304 - $${SIZE} - 64` ; \
		dd if=/dev/zero count=1 bs=$${PAD} 2> /dev/null | tr \\000 \\377 >> $(PLATFORMDIR)/zImage.img ; \
	fi ; \
	cat $(PLATFORMDIR)/target.image >> $(PLATFORMDIR)/zImage.img ; \
	#cat $(PLATFORMDIR)/target.image >> image/$(IMGNAME).img ; \
	#generate ASUS Image
	@ENTRY=`LANG=en_US readelf -h $(ROOTDIR)/$(LINUXDIR)/vmlinux | grep "Entry" | awk '{print $$4}'` ; \
	ISIZE=`wc -c $(PLATFORMDIR)/zImage.img | awk '{print $$1}'` ; \
	KSIZE=`wc -c $(PLATFORMDIR)/zImage.lzma | awk '{print $$1}'` ; \
	RSIZE=`wc -c $(PLATFORMDIR)/target.image | awk '{print $$1}'` ; \
	PAD2=`expr $${ISIZE} - $${KSIZE} - $${RSIZE}` ; \
	RFSOFFSET=`expr 64 + $${KSIZE} + $${PAD2}` ; \
	if [ "$(BUILD_NAME)" = "RT-AC85U" ] || [ "$(BUILD_NAME)" = "RT-AC85P" ] || [ "$(BUILD_NAME)" = "RT-AC65U" ] || [ "$(BUILD_NAME)" = "RT-ACRH26" ] || [ "$(BUILD_NAME)" = "TUF-AC1750" ] || [ "$(BUILD_NAME)" = "RM-AC2100" ] || [ "$(BUILD_NAME)" = "RT-MIR3G" ] || [ "$(BUILD_NAME)" = "R6800" ] || [ "$(BUILD_NAME)" = "JCG-Q10PRO" ] || [ "$(BUILD_NAME)" = "H3C-TX1801" ]; then \
		asustools/u-boot-2014.10/tools/mkimage -A mips -O linux -T kernel -C lzma -a 0x81001000 -e 0x81001000 -r $${RFSOFFSET} \
		-n $(BUILD_NAME) -V "$(KERNEL_VER)" "$(FS_VER)"  "$(SERIALNO)" "$(SWRT_CODEBASE)" "0" "0" "0" "0" "0" "0"  \
		-d $(PLATFORMDIR)/zImage.img image/$(IMGNAME).trx ; \
		if [ "$(BUILD_NAME)" = "R6800" ]; then \
			asustools/u-boot-2014.10/tools/mkimage -A mips -O linux -T kernel -C lzma -a 0x81001000 -e 0x81001000 -r $$${RFSOFFSET} \
			-n $(BUILD_NAME) -V "$(KERNEL_VER)" "$(FS_VER)" "$(SERIALNO)" "$(SWRT_CODEBASE)" "0" "0" "0" "0" "0" "0"  \
			-d $(PLATFORMDIR)/kernel.img image/kernel.bin ; \
		fi ; \
	elif [ "$(BUILD_NAME)" = "RT-ACRH18" ] ; then \
		asustools/u-boot-2014.10/tools/mkimage -A arm -O linux -T kernel -C lzma -a 0x40008000 -e 0x40008000 -r $${RFSOFFSET} \
		-n $(BUILD_NAME) -V "$(KERNEL_VER)" "$(FS_VER)"  "$(SERIALNO)" "$(SWRT_CODEBASE)" "0" "0" "0" "0" "0" "0"  \
		-d $(PLATFORMDIR)/zImage.img image/$(IMGNAME).trx ; \
	elif [ "$(BUILD_NAME)" = "4G-AC86U" ] ; then \
		asustools/u-boot-2014.10/tools/mkimage -A arm64 -O linux -T kernel -C lzma -a 0x41080000 -e 0x41080000 -r $${RFSOFFSET} \
		-n $(BUILD_NAME) -V "$(KERNEL_VER)" "$(FS_VER)"  "$(SERIALNO)" "$(SWRT_CODEBASE)" "0" "0" "0" "0" "0" "0"  \
                -d $(PLATFORMDIR)/zImage.img image/$(IMGNAME).trx ; \
	elif [ "$(BUILD_NAME)" = "4G-AX56" ] || [ "$(BUILD_NAME)" = "RT-AX53U" ] || [ "$(BUILD_NAME)" = "RT-AX54" ] || [ "$(BUILD_NAME)" = "PGB-M1" ] ; then \
		asustools/u-boot-2014.10/tools/mkimage -A mips -O linux -T kernel -C lzma -a 0x81001000 -e 0x81001000 -r $${RFSOFFSET} \
		-n $(BUILD_NAME) -V "$(KERNEL_VER)" "$(FS_VER)"  "$(SERIALNO)" "$(SWRT_CODEBASE)" "0" "0" "0" "0" "0" "0"  \
		-d $(PLATFORMDIR)/zImage.img image/$(IMGNAME).trx ; \
	else \
		asustools/mkimage -A mips -O linux -T kernel -C lzma -a 80000000 -e $${ENTRY} -r $${RFSOFFSET} \
		-n $(BUILD_NAME) -V "$(KERNEL_VER)" "$(FS_VER)" "$(SERIALNO)" "$(SWRT_CODEBASE)" "0" "0" "0" "0" "0" "0" \
		-d $(PLATFORMDIR)/zImage.img image/$(IMGNAME).trx ; \
	fi ; \
	if [ "`grep -c \"^CONFIG_RALINK_MT7620\>\" $(LINUXDIR)/.config`" -gt 0 ]; then \
		echo -n "PA/LNA: " ; \
		if [ "`grep -c \"^CONFIG_INTERNAL_PA_INTERNAL_LNA\>\" $(LINUXDIR)/.config`" -gt 0 ] ; then \
			echo "Internal PA + Internal LNA" ; \
			mv -f image/$(IMGNAME).trx image/$(IMGNAME)_int_PA_int_LNA.trx ; \
		elif [ "`grep -c \"^CONFIG_INTERNAL_PA_EXTERNAL_LNA\>\" $(LINUXDIR)/.config`" -gt 0 ] ; then \
			echo "Internal PA + External LNA" ; \
			if [ "$(BUILD_NAME)" = "RT-AC1200HP" ]; then \
				echo "Check PA/LNA: OK" ; \
			else \
				mv -f image/$(IMGNAME).trx image/$(IMGNAME)_int_PA_ext_LNA.trx ; \
			fi ; \
		elif [ "`grep -c \"^CONFIG_EXTERNAL_PA_EXTERNAL_LNA\>\" $(LINUXDIR)/.config`" -gt 0 ] ; then \
			echo "External PA + External LNA" ; \
			mv -f image/$(IMGNAME).trx image/$(IMGNAME)_ext_PA_ext_LNA.trx ; \
		else \
			echo "UNKNOWN PA/LNA" ; \
		fi ; \
	fi
	md5sum image/$(IMGNAME).trx > image/$(IMGNAME).md5
	ln -sf $(IMGNAME).trx image/$(BUILD_NAME).trx
	@echo ""

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1251):
	@touch router/.config
	@rm -f router/config_[a-z]
	@rm -f router/$(BUSYBOX)/config_[a-z]
	@-$(MAKE) -C router $@
	@-$(MAKE) -C $(LINUXDIR) $@
	@-$(MAKE) cleantools
	@-rm -rf $(PLATFORMDIR)

etj:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5729):
	$(call save_src_config,$@,_CFG)
	$(MAKE) bin

model-desc.mak: dummy
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'model-desc.mak'
#  File does not exist.
#  File has been updated.
#  Successfully updated.
# automatic
# @ := model-desc.mak
# automatic
# % := 
# automatic
# * := model-desc.mak
# automatic
# + := dummy
# automatic
# | := 
# automatic
# < := dummy
# automatic
# ^ := dummy
# automatic
# ? := dummy
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/25=16%
#  recipe to execute (from 'Makefile', line 5901):
	@[ ! -d router/$* ] || $(MAKE) -C router $@

platform.mak: dummy
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'platform.mak'
#  Last modified 2022-06-04 22:47:43.529774452
#  File has been updated.
#  Successfully updated.
# automatic
# @ := platform.mak
# automatic
# % := 
# automatic
# * := platform.mak
# automatic
# + := dummy
# automatic
# | := 
# automatic
# < := dummy
# automatic
# ^ := dummy
# automatic
# ? := dummy
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/25=16%
#  recipe to execute (from 'Makefile', line 5901):
	@[ ! -d router/$* ] || $(MAKE) -C router $@

dummy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

kernel_patch:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

XT12:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

version.conf: dummy
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'version.conf'
#  Last modified 2022-04-19 08:43:46.319573513
#  File has been updated.
#  Successfully updated.
# automatic
# @ := version.conf
# automatic
# % := 
# automatic
# * := version.conf
# automatic
# + := dummy
# automatic
# | := 
# automatic
# < := dummy
# automatic
# ^ := dummy
# automatic
# ? := dummy
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/25=16%
#  recipe to execute (from 'Makefile', line 5901):
	@[ ! -d router/$* ] || $(MAKE) -C router $@

XT8PRO:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

cleanlibc:
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.

cleankernel:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 1280):
	@cd $(LINUXDIR) && \
	mv .config save-config && \
	$(MAKE) distclean || true; \
	cp -p save-config .config || true

Bluecave:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5720):
	$(call save_src_config, $@)
	$(MAKE) bin

XD4PRO:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5733):
	$(call save_src_config, $@,_CFG)
	$(MAKE) bin

rt_ver:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := rt_ver
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=7/36=19%
#  recipe to execute (from 'Makefile', line 610):
	echo "make rt_ver "
	@echo '#ifndef RTVERSION' > router/shared/version.h
	@echo '#define RT_MAJOR_VERSION "$(KERNEL_VER)"' >> router/shared/version.h
	@echo '#define RT_MINOR_VERSION "$(FS_VER)"' >> router/shared/version.h
	@echo '#define RT_VERSION "$(KERNEL_VER).$(FS_VER)"' >> router/shared/version.h
	@echo '#define RT_SERIALNO "$(SERIALNO)"' >> router/shared/version.h
	@echo '#define RT_RCNO "$(RCNO)"' >> router/shared/version.h
	@echo '#define RT_EXTENDNO "$(EXTENDNO)"' >> router/shared/version.h
	@echo '#define RT_SWPJVERNO "$(SWPJVERNO)"' >> router/shared/version.h
	@echo '#define RT_BUILD_NAME "$(BUILD_NAME)"' >> router/shared/version.h
	@echo '#define RT_BUILD_INFO "$(BUILD_TIME) $(BUILD_USER)@$(BUILD_INFO)"' >> router/shared/version.h
	@echo '#define RT_CUSTOM_MODEL "$(CUSTOM_MODEL)"' >> router/shared/version.h
	@echo '#endif' >> router/shared/version.h
	@echo '#define LIVE_UPDATE_RSA_VERSION ""' >> router/shared/version.h
	@echo '$(BUILD_NAME)_$(KERNEL_VER).$(FS_VER) $(BUILD_TIME)' > router/shared/version
	@echo 'EXTENDNO=$(EXTENDNO)' > router/extendno.conf
	@echo '#define RT_FWVER "$(SWRT_VER_MINOR)"' >> router/shared/version.h
	@echo '#define RT_FWEXTENDNO "$(SWRTEXTENDNO)"' >> router/shared/version.h
	@-$(MAKE) -f model-desc.mak

target.mak: dummy
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'target.mak'
#  Last modified 2022-06-05 00:07:08.8841593
#  File has been updated.
#  Successfully updated.
# automatic
# @ := target.mak
# automatic
# % := 
# automatic
# * := target.mak
# automatic
# + := dummy
# automatic
# | := 
# automatic
# < := dummy
# automatic
# ^ := dummy
# automatic
# ? := dummy
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/25=16%
#  recipe to execute (from 'Makefile', line 5901):
	@[ ! -d router/$* ] || $(MAKE) -C router $@

all-tags: kernel-tags
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5847):
	ctags -R shared $(CTAGS_EXCLUDE_OPT) $(SRC_ROOT)/router

install:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 5859):
	$(MAKE) -C router $@

# files hash-table stats:
# Load=67/1024=7%, Rehash=0, Collisions=9/143=6%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 131 / storage = 1009 B / avg = 7 B
# current buf: size = 8162 B / used = 1009 B / count = 131 / avg = 7 B

# strcache performance: lookups = 257 / hit rate = 49%
# hash-table stats:
# Load=131/8192=2%, Rehash=0, Collisions=10/257=4%
# Finished Make data base on Sun Jun  5 02:46:20 2022

 
